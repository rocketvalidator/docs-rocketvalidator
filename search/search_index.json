{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Rocket Validator! Rocket Validator is the tool used by professional web developers worldwide to quickly detect accessibility and HTML issues on large web sites, in an automated way. Basically, Rocket Validator is an automated accessibility scanner: just by submitting a starting URL our spider will discover the internal pages on that site, and check web page found using the latest versions of the W3C HTML Validator and the axe-core accessibility engine , giving you a detailed report in seconds. Quick Start To begin validating your sites you just need to create an account . Once you have done that, you'll be prompted to validate your first site by entering a starting URL and clicking on \"Start validation\". Options To validate a site, you can define the following options. Starting URL . Our validation spider will visit this URL and recursively follow the internal links, validating each internal web page found. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . Can be set from 1 to 5 (Basic users) or 1 to 15 (Pro users). Validate HTML and Accessibility or only HTML . Pro users can choose to include A11Y checks on top of HTML checks. Re-checking your pages Once your site has been processed, you'll see the HTML and accessibility issues for each page found. As you go fixing them, you can re-check the pages quickly with: Re-check button on each page. This will submit an individual page to the validator. Re-check all pages with issues button. This will submit all pages with errors or warnings to the validator. Re-check all pages button. This will submit all pages on the site to the validator. Re-scrape site button. This will start the scraper again, to discover the internal pages of the site and validate each of them. Use only if the structure of your site has changed or if you want to change any parameter (like max pages).","title":"Quick Start"},{"location":"#welcome-to-rocket-validator","text":"Rocket Validator is the tool used by professional web developers worldwide to quickly detect accessibility and HTML issues on large web sites, in an automated way. Basically, Rocket Validator is an automated accessibility scanner: just by submitting a starting URL our spider will discover the internal pages on that site, and check web page found using the latest versions of the W3C HTML Validator and the axe-core accessibility engine , giving you a detailed report in seconds.","title":"Welcome to Rocket Validator!"},{"location":"#quick-start","text":"To begin validating your sites you just need to create an account . Once you have done that, you'll be prompted to validate your first site by entering a starting URL and clicking on \"Start validation\".","title":"Quick Start"},{"location":"#options","text":"To validate a site, you can define the following options. Starting URL . Our validation spider will visit this URL and recursively follow the internal links, validating each internal web page found. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . Can be set from 1 to 5 (Basic users) or 1 to 15 (Pro users). Validate HTML and Accessibility or only HTML . Pro users can choose to include A11Y checks on top of HTML checks.","title":"Options"},{"location":"#re-checking-your-pages","text":"Once your site has been processed, you'll see the HTML and accessibility issues for each page found. As you go fixing them, you can re-check the pages quickly with: Re-check button on each page. This will submit an individual page to the validator. Re-check all pages with issues button. This will submit all pages with errors or warnings to the validator. Re-check all pages button. This will submit all pages on the site to the validator. Re-scrape site button. This will start the scraper again, to discover the internal pages of the site and validate each of them. Use only if the structure of your site has changed or if you want to change any parameter (like max pages).","title":"Re-checking your pages"},{"location":"api/","text":"Rocket Validator API Work in progress! The Rocket Validator API is currently in alpha stage, and subject to changes. Welcome to the Rocket Validator API documentation. The Rocket Validator API allows you to manage your reports and integrate them easily in your existing workflows using conventional HTTP requests to a standard JSON API. Refer to the json:api specification for an overview of the conventions we use. Currently the API is on an alpha stage, but you can start using it today. Keep in mind that it is still subject to changes, which will be documented on the changelog. Authorization In order to interact with the Rocket Validator API, you must authenticate using an API token. You can generate an API token for your account on the API tokens section. When you do so, you can also define its scope (read-only or write permission). Using the token on an API request you'll get access to the resources on your account. If you ever need to revoke access for a token, just delete it. Keep in mind that an API token works as a complete authentication method, acting as a substitute of your username and password pair. It's important that you keep these tokens secure - on generation, the web interface will only show the token once, it's your responsibility to keep it secure. Once you have a token, you must include a bearer-type Authorization header. Example: authenticating your requests curl --request GET 'https://rocketvalidator.dev/api/v0/reports/' \\ --header 'Authorization: Bearer YOURAPITOKEN' All requests must be made via HTTPS. Pagination When the list of entities returned by a request is paginated, a links key will be included on the JSON response body with links to the first , last , next , prev and self pages. The default page size is 25 but this can be customized to other value (minimum 1 and maximum 100) using the page[size] attribute. Reports A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found. List your reports To list all Reports in your account, send a GET request to /api/v0/reports . Example: GET https://rocketvalidator.dev/api/v0/reports/ { \"data\" : [ { \"attributes\" : { \"id\" : \"9314c\" , \"inserted-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"num-pages\" : 10 , \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"total-a11y-issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"total-html-issues\" : { \"errors\" : 156 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"9314c\" , \"relationships\" : { \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/schedule\" } }, \"web-pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=50&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=1&page[size]=25\" } } Retrieve a Report To show an individual Report, send a GET request to /api/v0/reports/$REPORT_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID { \"data\" : { \"attributes\" : { \"id\" : \"9314c\" , \"inserted-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"num-pages\" : 10 , \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"total-a11y-issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"total-html-issues\" : { \"errors\" : 156 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"9314c\" , \"relationships\" : { \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/schedule\" } }, \"web-pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } Schedules A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received. Schedule for a report Reports that have been triggered via a Schedule will include a link to it. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/schedule { \"data\" : { \"attributes\" : { \"active\" : true , \"check-a11y\" : true , \"check-html\" : true , \"id\" : \"d2e1f\" , \"inserted-at\" : \"2020-02-28T13:01:23\" , \"last-fired-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 15 }, \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"d2e1f\" , \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } Web Pages A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report. List Web Pages on a Report To list the web pages on a Report, send a GET request to /api/v0/reports/$REPORT_ID/web_pages . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages { \"data\" : [ { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted-at\" : \"2020-02-28T13:01:32\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" }, { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 16 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 473 , \"inserted-at\" : \"2020-02-28T13:01:33\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:36\" , \"url\" : \"http://validationhell.com/pages/agent\" }, \"id\" : \"473\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages?page[number]=1&page[size]=25\" } } Retrieve a Web Page To show an individual Web Page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID { \"data\" : { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted-at\" : \"2020-02-28T13:01:32\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } HTML Issues An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator. List HTML issues on a web page To list the HTML issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues { \"data\" : [ { \"attributes\" : { \"coordinates\" : { \"first_column\" : 1 , \"first_line\" : 1 , \"hilite_length\" : 109 , \"hilite_start\" : 0 , \"last_column\" : 109 , \"last_line\" : 1 }, \"extract\" : \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html\" , \"id\" : 59734815 , \"inserted-at\" : \"2020-02-28T13:01:34\" , \"message\" : \"Obsolete doctype. Expected \u201c<!DOCTYPE html>\u201d.\" , \"muted\" : false , \"sub-type\" : null , \"type\" : \"error\" , \"updated-at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734815\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html-issue\" }, { \"attributes\" : { \"coordinates\" : { \"first_column\" : 17 , \"first_line\" : 21 , \"hilite_length\" : 3 , \"hilite_start\" : 10 , \"last_column\" : 19 , \"last_line\" : 21 }, \"extract\" : \" pading: 4px;\\n \" , \"id\" : 59734817 , \"inserted-at\" : \"2020-02-28T13:01:34\" , \"message\" : \"CSS: \u201cpading\u201d: Property \u201cpading\u201d doesn't exist.\" , \"muted\" : false , \"sub-type\" : null , \"type\" : \"error\" , \"updated-at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734817\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html-issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues?page[number]=1&page[size]=25\" } } Accessibility Issues An Accessibility issue corresponds to an issue found on a given web page when being checked by the A11Y checker. List Accessibility issues on a web page To list the Accessibility issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues { \"data\" : [ { \"attributes\" : { \"help\" : \"Images must have alternate text\" , \"help-url\" : \"https://dequeuniversity.com/rules/axe/3.5/image-alt?application=rocketvalidator\" , \"html\" : [ \"<img src=\\\"/images/fire.png\\\" align=\\\"absmiddle\\\" width=\\\"30\\\" hspace=\\\"5\\\">\" , \"<img src=\\\"/images/nuke.gif\\\" width=\\\"100%\\\" vspace=\\\"8\\\">\" ], \"id\" : 6843979 , \"impact\" : \"critical\" , \"impact-order\" : 4 , \"inserted-at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.text-alternatives\" , \"wcag2a\" , \"wcag111\" , \"section508\" , \"section508.22.a\" ], \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843979\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y-issue\" }, { \"attributes\" : { \"help\" : \"<ul> and <ol> must only directly contain <li>, <script> or <template> elements\" , \"help-url\" : \"https://dequeuniversity.com/rules/axe/3.5/list?application=rocketvalidator\" , \"html\" : [ \"<ul class=\\\"nav nav-list\\\">\" ], \"id\" : 6843982 , \"impact\" : \"serious\" , \"impact-order\" : 3 , \"inserted-at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.structure\" , \"wcag2a\" , \"wcag131\" ], \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843982\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y-issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues?page[number]=1&page[size]=25\" } } Changelog 2020-03-13. Moved documentation to docs.rocketvalidator.com. 2020-03-02. Change API host to rocketvalidator.dev. 2020-02-28. Initial version.","title":"Rocket Validator API"},{"location":"api/#rocket-validator-api","text":"Work in progress! The Rocket Validator API is currently in alpha stage, and subject to changes. Welcome to the Rocket Validator API documentation. The Rocket Validator API allows you to manage your reports and integrate them easily in your existing workflows using conventional HTTP requests to a standard JSON API. Refer to the json:api specification for an overview of the conventions we use. Currently the API is on an alpha stage, but you can start using it today. Keep in mind that it is still subject to changes, which will be documented on the changelog.","title":"Rocket Validator API"},{"location":"api/#authorization","text":"In order to interact with the Rocket Validator API, you must authenticate using an API token. You can generate an API token for your account on the API tokens section. When you do so, you can also define its scope (read-only or write permission). Using the token on an API request you'll get access to the resources on your account. If you ever need to revoke access for a token, just delete it. Keep in mind that an API token works as a complete authentication method, acting as a substitute of your username and password pair. It's important that you keep these tokens secure - on generation, the web interface will only show the token once, it's your responsibility to keep it secure. Once you have a token, you must include a bearer-type Authorization header. Example: authenticating your requests curl --request GET 'https://rocketvalidator.dev/api/v0/reports/' \\ --header 'Authorization: Bearer YOURAPITOKEN' All requests must be made via HTTPS.","title":"Authorization"},{"location":"api/#pagination","text":"When the list of entities returned by a request is paginated, a links key will be included on the JSON response body with links to the first , last , next , prev and self pages. The default page size is 25 but this can be customized to other value (minimum 1 and maximum 100) using the page[size] attribute.","title":"Pagination"},{"location":"api/#reports","text":"A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found.","title":"Reports"},{"location":"api/#list-your-reports","text":"To list all Reports in your account, send a GET request to /api/v0/reports . Example: GET https://rocketvalidator.dev/api/v0/reports/ { \"data\" : [ { \"attributes\" : { \"id\" : \"9314c\" , \"inserted-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"num-pages\" : 10 , \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"total-a11y-issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"total-html-issues\" : { \"errors\" : 156 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"9314c\" , \"relationships\" : { \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/schedule\" } }, \"web-pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=50&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=1&page[size]=25\" } }","title":"List your reports"},{"location":"api/#retrieve-a-report","text":"To show an individual Report, send a GET request to /api/v0/reports/$REPORT_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID { \"data\" : { \"attributes\" : { \"id\" : \"9314c\" , \"inserted-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"num-pages\" : 10 , \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"total-a11y-issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"total-html-issues\" : { \"errors\" : 156 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"9314c\" , \"relationships\" : { \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/schedule\" } }, \"web-pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Report"},{"location":"api/#schedules","text":"A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received.","title":"Schedules"},{"location":"api/#schedule-for-a-report","text":"Reports that have been triggered via a Schedule will include a link to it. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/schedule { \"data\" : { \"attributes\" : { \"active\" : true , \"check-a11y\" : true , \"check-html\" : true , \"id\" : \"d2e1f\" , \"inserted-at\" : \"2020-02-28T13:01:23\" , \"last-fired-at\" : \"2020-02-28T13:01:30\" , \"max-pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 15 }, \"rate-limit\" : 5 , \"starting-url\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"d2e1f\" , \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Schedule for a report"},{"location":"api/#web-pages","text":"A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report.","title":"Web Pages"},{"location":"api/#list-web-pages-on-a-report","text":"To list the web pages on a Report, send a GET request to /api/v0/reports/$REPORT_ID/web_pages . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages { \"data\" : [ { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted-at\" : \"2020-02-28T13:01:32\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" }, { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 16 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 473 , \"inserted-at\" : \"2020-02-28T13:01:33\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:36\" , \"url\" : \"http://validationhell.com/pages/agent\" }, \"id\" : \"473\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages?page[number]=1&page[size]=25\" } }","title":"List Web Pages on a Report"},{"location":"api/#retrieve-a-web-page","text":"To show an individual Web Page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID { \"data\" : { \"attributes\" : { \"a11y-check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html-check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted-at\" : \"2020-02-28T13:01:32\" , \"linked-from\" : \"http://validationhell.com/\" , \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html-issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web-page\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Web Page"},{"location":"api/#html-issues","text":"An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator.","title":"HTML Issues"},{"location":"api/#list-html-issues-on-a-web-page","text":"To list the HTML issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues { \"data\" : [ { \"attributes\" : { \"coordinates\" : { \"first_column\" : 1 , \"first_line\" : 1 , \"hilite_length\" : 109 , \"hilite_start\" : 0 , \"last_column\" : 109 , \"last_line\" : 1 }, \"extract\" : \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html\" , \"id\" : 59734815 , \"inserted-at\" : \"2020-02-28T13:01:34\" , \"message\" : \"Obsolete doctype. Expected \u201c<!DOCTYPE html>\u201d.\" , \"muted\" : false , \"sub-type\" : null , \"type\" : \"error\" , \"updated-at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734815\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html-issue\" }, { \"attributes\" : { \"coordinates\" : { \"first_column\" : 17 , \"first_line\" : 21 , \"hilite_length\" : 3 , \"hilite_start\" : 10 , \"last_column\" : 19 , \"last_line\" : 21 }, \"extract\" : \" pading: 4px;\\n \" , \"id\" : 59734817 , \"inserted-at\" : \"2020-02-28T13:01:34\" , \"message\" : \"CSS: \u201cpading\u201d: Property \u201cpading\u201d doesn't exist.\" , \"muted\" : false , \"sub-type\" : null , \"type\" : \"error\" , \"updated-at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734817\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html-issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues?page[number]=1&page[size]=25\" } }","title":"List HTML issues on a web page"},{"location":"api/#accessibility-issues","text":"An Accessibility issue corresponds to an issue found on a given web page when being checked by the A11Y checker.","title":"Accessibility Issues"},{"location":"api/#list-accessibility-issues-on-a-web-page","text":"To list the Accessibility issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues { \"data\" : [ { \"attributes\" : { \"help\" : \"Images must have alternate text\" , \"help-url\" : \"https://dequeuniversity.com/rules/axe/3.5/image-alt?application=rocketvalidator\" , \"html\" : [ \"<img src=\\\"/images/fire.png\\\" align=\\\"absmiddle\\\" width=\\\"30\\\" hspace=\\\"5\\\">\" , \"<img src=\\\"/images/nuke.gif\\\" width=\\\"100%\\\" vspace=\\\"8\\\">\" ], \"id\" : 6843979 , \"impact\" : \"critical\" , \"impact-order\" : 4 , \"inserted-at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.text-alternatives\" , \"wcag2a\" , \"wcag111\" , \"section508\" , \"section508.22.a\" ], \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843979\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y-issue\" }, { \"attributes\" : { \"help\" : \"<ul> and <ol> must only directly contain <li>, <script> or <template> elements\" , \"help-url\" : \"https://dequeuniversity.com/rules/axe/3.5/list?application=rocketvalidator\" , \"html\" : [ \"<ul class=\\\"nav nav-list\\\">\" ], \"id\" : 6843982 , \"impact\" : \"serious\" , \"impact-order\" : 3 , \"inserted-at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.structure\" , \"wcag2a\" , \"wcag131\" ], \"updated-at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843982\" , \"relationships\" : { \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web-page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y-issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues?page[number]=1&page[size]=25\" } }","title":"List Accessibility issues on a web page"},{"location":"api/#changelog","text":"2020-03-13. Moved documentation to docs.rocketvalidator.com. 2020-03-02. Change API host to rocketvalidator.dev. 2020-02-28. Initial version.","title":"Changelog"},{"location":"broken-links-checker/","text":"Broken Links Checker When scraping your web site to find the internal links, we may find broken links, for example internal pages that return a 404 Not Found error, a Timeout, or any other kind of non-document errors. Non-document errors In this case, a Non-document error tab will be shown, where you can see the unreachable pages: Where's it linked from? Each unreachable page will show where it was linked from, so you can fix the broken link in its origin: Limitations These non-document errors come from the HTML checker, as Rocket Validator does not have a broken link checker of its own.","title":"Broken Links Checker"},{"location":"broken-links-checker/#broken-links-checker","text":"When scraping your web site to find the internal links, we may find broken links, for example internal pages that return a 404 Not Found error, a Timeout, or any other kind of non-document errors.","title":"Broken Links Checker"},{"location":"broken-links-checker/#non-document-errors","text":"In this case, a Non-document error tab will be shown, where you can see the unreachable pages:","title":"Non-document errors"},{"location":"broken-links-checker/#wheres-it-linked-from","text":"Each unreachable page will show where it was linked from, so you can fix the broken link in its origin:","title":"Where's it linked from?"},{"location":"broken-links-checker/#limitations","text":"These non-document errors come from the HTML checker, as Rocket Validator does not have a broken link checker of its own.","title":"Limitations"},{"location":"deploy-hooks/","text":"Deploy hooks Use deploy hooks to notify Rocket Validator that you've deployed a new version of your site and make it start automatically the specified validation. To create a deploy hook, create a schedule as explained in the Scheduling reports section. Then, set up your hosting platform to fire this schedule after deploys. curl curl is a command-line tool, present in most systems, that you can use to make a quick check from your terminal. Example: curl $ curl -X POST https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Netlify Netlify is a hosting platform for static websites, and offers the simplest integration possible. You just need to Add Notification , choose the Outgoing webhook type and paste your deploy hook URL like this: Github Pages Github Pages let you define webhooks for different events. You just need to enter your automatic validator URL in the Payload URL field, and choose the individual event for page build : Github Pages lets you define several deploy hooks for different services. Heroku If your site is on Heroku, you can use the free HTTP post hook add-on , like this: Example: Heroku $ heroku addons:create deployhooks:http \\ --url https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Heroku only allows one HTTP deploy hook per app, so if you need to trigger several hooks, you can set it up using deploy hook forker . Engine Yard Engine Yard lets you define deploy hooks using simple ruby scripts . To trigger a site validation, you can create a deploy/after_restart.rb file on the root folder of your app, that sends the post-deploy hook using curl like this: Example: Engine Yard run \"curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire\" Cloud 66 If your site is on Cloud 66 , you can use their free deploy hooks to define your hooks per environment on a file named .cloud66/deploy_hooks.yml , like this: Example: Cloud 66 staging: last_thing: - command: curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire target: rails run_on: single_server Cloud 66 lets you have several deploy hooks defined. The syntax for doing that is: Example: Cloud 66 last_thing: - xxxxxx yyyyyy zzzzzz - xxxxxx yyyyyy zzzzzz Other platforms If your hosting platform is not listed here, feel free to contact us and we'll help you with the integration.","title":"Deploy Hooks"},{"location":"deploy-hooks/#deploy-hooks","text":"Use deploy hooks to notify Rocket Validator that you've deployed a new version of your site and make it start automatically the specified validation. To create a deploy hook, create a schedule as explained in the Scheduling reports section. Then, set up your hosting platform to fire this schedule after deploys.","title":"Deploy hooks"},{"location":"deploy-hooks/#curl","text":"curl is a command-line tool, present in most systems, that you can use to make a quick check from your terminal. Example: curl $ curl -X POST https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire","title":"curl"},{"location":"deploy-hooks/#netlify","text":"Netlify is a hosting platform for static websites, and offers the simplest integration possible. You just need to Add Notification , choose the Outgoing webhook type and paste your deploy hook URL like this:","title":"Netlify"},{"location":"deploy-hooks/#github-pages","text":"Github Pages let you define webhooks for different events. You just need to enter your automatic validator URL in the Payload URL field, and choose the individual event for page build : Github Pages lets you define several deploy hooks for different services.","title":"Github Pages"},{"location":"deploy-hooks/#heroku","text":"If your site is on Heroku, you can use the free HTTP post hook add-on , like this: Example: Heroku $ heroku addons:create deployhooks:http \\ --url https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Heroku only allows one HTTP deploy hook per app, so if you need to trigger several hooks, you can set it up using deploy hook forker .","title":"Heroku"},{"location":"deploy-hooks/#engine-yard","text":"Engine Yard lets you define deploy hooks using simple ruby scripts . To trigger a site validation, you can create a deploy/after_restart.rb file on the root folder of your app, that sends the post-deploy hook using curl like this: Example: Engine Yard run \"curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire\"","title":"Engine Yard"},{"location":"deploy-hooks/#cloud-66","text":"If your site is on Cloud 66 , you can use their free deploy hooks to define your hooks per environment on a file named .cloud66/deploy_hooks.yml , like this: Example: Cloud 66 staging: last_thing: - command: curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire target: rails run_on: single_server Cloud 66 lets you have several deploy hooks defined. The syntax for doing that is: Example: Cloud 66 last_thing: - xxxxxx yyyyyy zzzzzz - xxxxxx yyyyyy zzzzzz","title":"Cloud 66"},{"location":"deploy-hooks/#other-platforms","text":"If your hosting platform is not listed here, feel free to contact us and we'll help you with the integration.","title":"Other platforms"},{"location":"faqs/","text":"Frequently Asked Questions Why are my validations slow? Rocket Validator speed depends on the speed at which your validated server can respond. To avoid clogging your servers, we rate limit our validations to 5 simultaneous connections, so the faster your server respond, the faster we can validate it. Why can't some sites be scraped? When you submit an URL for validation, we send a web spider to visit the site and get its links. Sometimes, this process that is called \"scraping\" fails, and it can be due to a number of reasons. Here are the most typical ones: Authorization required Sites must be publicly accessible to be validated. Could not be found (404) The URL you provided could not be found. Connection timed out The site is taking too long to respond. Retry again later, when the remote server has less traffic. Too many requests to remote server The remote server is denying us access because it is rate limiting us. Contact your sys admin to relax this rate limiting, or try again later. Blocked The remote server is blocking our requests. Consult the User Agents page to explicitly allow our requests. No internal links found The document returned for the starting URL contains no links, or the links are not on the same host. The spider will only follow internal links from the starting URL. If none of this explains the reason why your site is not being scraped, contact us and we'll help you find the cause. Can I validate pages that require authorization? No, there is no direct way of validating pages that require login. Rocket Validator is a distributed system with different internal pieces: our own web crawler, the HTML validator and the A11Y validator. Requests to your web pages come from these three different origins, so authentication handling would need to be implemented in all of them, and would need to cover the different authentication systems most web sites implement. Instead, we recommend other approaches to checking protected sites: You can validate your local development server directly . This also makes it faster to fix the issues, as you don\u2019t need to deploy them. You can have a separate server that doesn\u2019t need authentication. You can have a copy of the templates for the restricted pages in a different directory that doesn't require authentication. Does Rocket Validator cache pages? No, we don't use any kind of cache neither on the link scraper, nor on the validator. If you're changing your page and you're getting the same validation results, the possible reason can be: Your server is using cache, like for example Varnish . Your pages are being rendered depending on the User-Agent string - you might be seeing your changes on the browser, but your server might be serving different content to the validator. The default User-Agent string for the validator is Validator.nu/LV http://validator.w3.org/services How long are reports stored? We store the results of your validations for a limited time, depending on your subscription plan. See the pricing table. Can I share reports with other people? Sure, you can share your validation reports with anyone. Just click on the Share this report button and you'll be able to send anyone the URL of the report. They'll be able to see the validation results just like you - but they won't be able to re-check any page, only you can control this. Can I export reports to Excel, CSV, or PDF? No, reports can't be exported to these formats, because the generated file would be too heavy to handle. Think of a large site with 3,000 validated web pages, where each page has 100 issues. The result would be a file containing 300,000 rows - this is not something you'll easily handle in Excel or that you'd be wanting to read as a PDF. Instead, our web interface lets you easily browse all the web pages and its issues, re-check each page as needed, and share the reports with your colleagues or clients.","title":"FAQs"},{"location":"faqs/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faqs/#why-are-my-validations-slow","text":"Rocket Validator speed depends on the speed at which your validated server can respond. To avoid clogging your servers, we rate limit our validations to 5 simultaneous connections, so the faster your server respond, the faster we can validate it.","title":"Why are my validations slow?"},{"location":"faqs/#why-cant-some-sites-be-scraped","text":"When you submit an URL for validation, we send a web spider to visit the site and get its links. Sometimes, this process that is called \"scraping\" fails, and it can be due to a number of reasons. Here are the most typical ones: Authorization required Sites must be publicly accessible to be validated. Could not be found (404) The URL you provided could not be found. Connection timed out The site is taking too long to respond. Retry again later, when the remote server has less traffic. Too many requests to remote server The remote server is denying us access because it is rate limiting us. Contact your sys admin to relax this rate limiting, or try again later. Blocked The remote server is blocking our requests. Consult the User Agents page to explicitly allow our requests. No internal links found The document returned for the starting URL contains no links, or the links are not on the same host. The spider will only follow internal links from the starting URL. If none of this explains the reason why your site is not being scraped, contact us and we'll help you find the cause.","title":"Why can't some sites be scraped?"},{"location":"faqs/#can-i-validate-pages-that-require-authorization","text":"No, there is no direct way of validating pages that require login. Rocket Validator is a distributed system with different internal pieces: our own web crawler, the HTML validator and the A11Y validator. Requests to your web pages come from these three different origins, so authentication handling would need to be implemented in all of them, and would need to cover the different authentication systems most web sites implement. Instead, we recommend other approaches to checking protected sites: You can validate your local development server directly . This also makes it faster to fix the issues, as you don\u2019t need to deploy them. You can have a separate server that doesn\u2019t need authentication. You can have a copy of the templates for the restricted pages in a different directory that doesn't require authentication.","title":"Can I validate pages that require authorization?"},{"location":"faqs/#does-rocket-validator-cache-pages","text":"No, we don't use any kind of cache neither on the link scraper, nor on the validator. If you're changing your page and you're getting the same validation results, the possible reason can be: Your server is using cache, like for example Varnish . Your pages are being rendered depending on the User-Agent string - you might be seeing your changes on the browser, but your server might be serving different content to the validator. The default User-Agent string for the validator is Validator.nu/LV http://validator.w3.org/services","title":"Does Rocket Validator cache pages?"},{"location":"faqs/#how-long-are-reports-stored","text":"We store the results of your validations for a limited time, depending on your subscription plan. See the pricing table.","title":"How long are reports stored?"},{"location":"faqs/#can-i-share-reports-with-other-people","text":"Sure, you can share your validation reports with anyone. Just click on the Share this report button and you'll be able to send anyone the URL of the report. They'll be able to see the validation results just like you - but they won't be able to re-check any page, only you can control this.","title":"Can I share reports with other people?"},{"location":"faqs/#can-i-export-reports-to-excel-csv-or-pdf","text":"No, reports can't be exported to these formats, because the generated file would be too heavy to handle. Think of a large site with 3,000 validated web pages, where each page has 100 issues. The result would be a file containing 300,000 rows - this is not something you'll easily handle in Excel or that you'd be wanting to read as a PDF. Instead, our web interface lets you easily browse all the web pages and its issues, re-check each page as needed, and share the reports with your colleagues or clients.","title":"Can I export reports to Excel, CSV, or PDF?"},{"location":"how-to-validate-your-local-server/","text":"Validating your local server You don't need to put your site live in order to validate it. Let's say you are working on a new site that hasn't yet been published, how could we validate it? ngrok There's an easy way to do that, thanks to tools like ngrok . This free tool lets you securely expose a local web server on a temporary public URL, that you can use to validate a site. Serve In case you aren't using a web server locally, say, you're working directly on static files, you can easily launch a web server in your local directory thanks to tools like Serve : Example Tools like ngrok and Serve are really easy to install and use. For example, let's say we have a site at a local folder \"mysite\". We could run a server like this: Example: serving local files $ cd mysite $ serve And this will launch a local web server at http://localhost:4000. Then, we can make it publicly accessible like this: Example: using ngrok to allow access to your local server from the internet $ ngrok http 4000 And ngrok will create a temporary public URL, like http://abcde1234.ngrok.com -- this is the URL of our local server on the Internet, so this is the URL to pass to Rocket Validator to validate your local server.","title":"Validating your local server"},{"location":"how-to-validate-your-local-server/#validating-your-local-server","text":"You don't need to put your site live in order to validate it. Let's say you are working on a new site that hasn't yet been published, how could we validate it?","title":"Validating your local server"},{"location":"how-to-validate-your-local-server/#ngrok","text":"There's an easy way to do that, thanks to tools like ngrok . This free tool lets you securely expose a local web server on a temporary public URL, that you can use to validate a site.","title":"ngrok"},{"location":"how-to-validate-your-local-server/#serve","text":"In case you aren't using a web server locally, say, you're working directly on static files, you can easily launch a web server in your local directory thanks to tools like Serve :","title":"Serve"},{"location":"how-to-validate-your-local-server/#example","text":"Tools like ngrok and Serve are really easy to install and use. For example, let's say we have a site at a local folder \"mysite\". We could run a server like this: Example: serving local files $ cd mysite $ serve And this will launch a local web server at http://localhost:4000. Then, we can make it publicly accessible like this: Example: using ngrok to allow access to your local server from the internet $ ngrok http 4000 And ngrok will create a temporary public URL, like http://abcde1234.ngrok.com -- this is the URL of our local server on the Internet, so this is the URL to pass to Rocket Validator to validate your local server.","title":"Example"},{"location":"muting/","text":"Muting Issues When validating your sites, you may find that some of the issues won't be currently fixed, for example: The affected code is out of your scope, for example it's being generated by a 3rd party software that you cannot control. You may be aware of an issue, but you've evaluated it and prefer to let it exist for some reason. You've decided that this will be fixed later and prefer to concentrate on other issues first. In those situations, Pro users can avoid all the noise related to those selected issues by muting them. How to mute issues The simplest way to mute an issue is directly on an issue list. Just hover over an issue and you'll see a MUTE button. When you click that button, you'll be on the new muting rule form: Then click on \"Submit\" and your new muting rule will be created and applied to your reports. Muting options To define a muting rule you need to specify: Matching URL . The muting rule will be applied to URLs containing this string. Try to be as specific as possible to limit the scope of this rule. Message . Enter the matching message here. Try to be as specific as possible to limit the scope of this muting rule. Comment / explanation . Optional but recommended, so you can explain why you decided to mute this rule.","title":"Muting Issues"},{"location":"muting/#muting-issues","text":"When validating your sites, you may find that some of the issues won't be currently fixed, for example: The affected code is out of your scope, for example it's being generated by a 3rd party software that you cannot control. You may be aware of an issue, but you've evaluated it and prefer to let it exist for some reason. You've decided that this will be fixed later and prefer to concentrate on other issues first. In those situations, Pro users can avoid all the noise related to those selected issues by muting them.","title":"Muting Issues"},{"location":"muting/#how-to-mute-issues","text":"The simplest way to mute an issue is directly on an issue list. Just hover over an issue and you'll see a MUTE button. When you click that button, you'll be on the new muting rule form: Then click on \"Submit\" and your new muting rule will be created and applied to your reports.","title":"How to mute issues"},{"location":"muting/#muting-options","text":"To define a muting rule you need to specify: Matching URL . The muting rule will be applied to URLs containing this string. Try to be as specific as possible to limit the scope of this rule. Message . Enter the matching message here. Try to be as specific as possible to limit the scope of this muting rule. Comment / explanation . Optional but recommended, so you can explain why you decided to mute this rule.","title":"Muting options"},{"location":"performance-tips/","text":"Performance Tips Validating a large site can take a considerable amount of time, so in order to get your results sooner, consider: Using an XML sitemap You can provide an XML sitemap specifying the exact URLs to validate. If you do so, we won't need to crawl your site to discover the pages to validate, so we can start validating pages sooner. You can read about the XML sitemaps protocol here , but in short, all you need is to specify each URL in this format: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <urlset xmlns= \"http://www.sitemaps.org/schemas/sitemap/0.9\" > <url> <loc> http://example.com/page1 </loc> </url> <url> <loc> http://example.com/page2 </loc> </url> <url> <loc> http://example.com/page3 </loc> </url> </urlset> You can generate this XML sitemap manually or by using a tool like this one . Once you have your sitemap ready and within your site, you can just submit it to Rocket Validator as the starting URL. For example, instead of submitting http://validationhell.com you'd submit http://validationhell.com/sitemap.xml . Using XML sitemaps leads to much faster site crawlings, and also lets you be more organized when validating large sites. For example, you can use different XML sitemaps for the different sections in a large site. Validating a smaller set of pages While it's tempting to try to validate sites in its entirety, in most cases that's unnecessary. For example, the New York Times site has over 15 million URLs, it would be impossible to validate the whole site. When you have a blog, or an online store, your site has easily thousands of pages, but most of them are using the same layout. Instead of validating each of them, consider building an XML sitemap with a sample of each different kind of page. You'll save time.","title":"Performance Tips"},{"location":"performance-tips/#performance-tips","text":"Validating a large site can take a considerable amount of time, so in order to get your results sooner, consider:","title":"Performance Tips"},{"location":"performance-tips/#using-an-xml-sitemap","text":"You can provide an XML sitemap specifying the exact URLs to validate. If you do so, we won't need to crawl your site to discover the pages to validate, so we can start validating pages sooner. You can read about the XML sitemaps protocol here , but in short, all you need is to specify each URL in this format: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <urlset xmlns= \"http://www.sitemaps.org/schemas/sitemap/0.9\" > <url> <loc> http://example.com/page1 </loc> </url> <url> <loc> http://example.com/page2 </loc> </url> <url> <loc> http://example.com/page3 </loc> </url> </urlset> You can generate this XML sitemap manually or by using a tool like this one . Once you have your sitemap ready and within your site, you can just submit it to Rocket Validator as the starting URL. For example, instead of submitting http://validationhell.com you'd submit http://validationhell.com/sitemap.xml . Using XML sitemaps leads to much faster site crawlings, and also lets you be more organized when validating large sites. For example, you can use different XML sitemaps for the different sections in a large site.","title":"Using an XML sitemap"},{"location":"performance-tips/#validating-a-smaller-set-of-pages","text":"While it's tempting to try to validate sites in its entirety, in most cases that's unnecessary. For example, the New York Times site has over 15 million URLs, it would be impossible to validate the whole site. When you have a blog, or an online store, your site has easily thousands of pages, but most of them are using the same layout. Instead of validating each of them, consider building an XML sitemap with a sample of each different kind of page. You'll save time.","title":"Validating a smaller set of pages"},{"location":"rate-limits/","text":"Rate Limiting When you submit a site for validation, Rocket Validator will scrape the site to search for internal web pages, and check each of them for HTML and Accessibility conformance. This means that your site can receive three types of requests: Scraper request . Your web pages will be visited to discover internal links to other pages. HTML check . The Nu Validator will launch this request to validate your page. A11Y check . The axe-core accessibility engine will perform this request to check your page. This means that, for example, a site with 1,000 web pages can receive 3,000 requests during the site validation. Avoiding server overload To avoid overloading your server, we carefully rate limit the requests to ensure they don't happen all at once, but a buffered rate. The following limits are applied: Account limit . Enterprise users have a limit of 25 requests per second. Pro users have a limit of 15 requests per second. Basic users have a limit is 10 requests per second. Report limit . Enterprise users can set the limit between 1 and 25 reqs/sec. Pro users can set the limit between 1 and 15 reqs/sec. Basic users can set the limit between 1 and 5 reqs/sec. On top of that we impose a rate limit on each host, to ensure that even if you're running simultaneously several site validations on the same host, a global limit is applied. How to reduce the number of requests To avoid making too many requests to your servers we recommend: Setting a low rate limit . The default rate limit is 3 reqs/second, but you can set it as low as 1 req/second. Using an XML sitemap . You can provide an XML sitemap specifying the exact URLs to validate. This way the scraper can avoid crawling your internal pages in seach for links. Read more . Skipping A11Y validation . By default, Pro users will get A11Y validation on top of HTML validation. You may consider skipping A11Y validation and focus on fixing the HTML issues first.","title":"Rate Limiting"},{"location":"rate-limits/#rate-limiting","text":"When you submit a site for validation, Rocket Validator will scrape the site to search for internal web pages, and check each of them for HTML and Accessibility conformance. This means that your site can receive three types of requests: Scraper request . Your web pages will be visited to discover internal links to other pages. HTML check . The Nu Validator will launch this request to validate your page. A11Y check . The axe-core accessibility engine will perform this request to check your page. This means that, for example, a site with 1,000 web pages can receive 3,000 requests during the site validation.","title":"Rate Limiting"},{"location":"rate-limits/#avoiding-server-overload","text":"To avoid overloading your server, we carefully rate limit the requests to ensure they don't happen all at once, but a buffered rate. The following limits are applied: Account limit . Enterprise users have a limit of 25 requests per second. Pro users have a limit of 15 requests per second. Basic users have a limit is 10 requests per second. Report limit . Enterprise users can set the limit between 1 and 25 reqs/sec. Pro users can set the limit between 1 and 15 reqs/sec. Basic users can set the limit between 1 and 5 reqs/sec. On top of that we impose a rate limit on each host, to ensure that even if you're running simultaneously several site validations on the same host, a global limit is applied.","title":"Avoiding server overload"},{"location":"rate-limits/#how-to-reduce-the-number-of-requests","text":"To avoid making too many requests to your servers we recommend: Setting a low rate limit . The default rate limit is 3 reqs/second, but you can set it as low as 1 req/second. Using an XML sitemap . You can provide an XML sitemap specifying the exact URLs to validate. This way the scraper can avoid crawling your internal pages in seach for links. Read more . Skipping A11Y validation . By default, Pro users will get A11Y validation on top of HTML validation. You may consider skipping A11Y validation and focus on fixing the HTML issues first.","title":"How to reduce the number of requests"},{"location":"scheduling/","text":"Scheduling Reports Pro users can schedule validation reports, so that they are performed automatically when indicated (monthly, weekly or daily). To schedule a validation, go to the new schedule form and enter the starting URL, the maximum number of pages to validate, how often you want us to run this validation, click \"Submit\" and you're ready to go: Schedule options To schedule a site validation, you can define: When should we run this validation . Typically you'll want to perform a monthly check, but you can also define it to be weekly or even daily - but we suggest you set up a longer frequency that leaves you enough time to fix your issues until the next run. Starting URL . Our validation spider will visit this URL and its direct internal links, and validate those pages. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . By default is 3 reqs/second, can be set higher depending on your subscription plan. Read more . Validate HTML and Accessibility or only HTML . Choose if you want to include A11Y checks on top of HTML checks. Active . Disable this to temporarily pause the scheduled validation. When the scheduled validation is run, you'll be notified via email with a link to the report. Using deploy hooks to fire a schedule A schedule defines a validation to be run automatically. It can be set up to run monthly, weekly or daily, but it can also be fired via a deploy hook. To learn more about deploy hooks, go to the Deploy Hooks section.","title":"Scheduling Reports"},{"location":"scheduling/#scheduling-reports","text":"Pro users can schedule validation reports, so that they are performed automatically when indicated (monthly, weekly or daily). To schedule a validation, go to the new schedule form and enter the starting URL, the maximum number of pages to validate, how often you want us to run this validation, click \"Submit\" and you're ready to go:","title":"Scheduling Reports"},{"location":"scheduling/#schedule-options","text":"To schedule a site validation, you can define: When should we run this validation . Typically you'll want to perform a monthly check, but you can also define it to be weekly or even daily - but we suggest you set up a longer frequency that leaves you enough time to fix your issues until the next run. Starting URL . Our validation spider will visit this URL and its direct internal links, and validate those pages. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . By default is 3 reqs/second, can be set higher depending on your subscription plan. Read more . Validate HTML and Accessibility or only HTML . Choose if you want to include A11Y checks on top of HTML checks. Active . Disable this to temporarily pause the scheduled validation. When the scheduled validation is run, you'll be notified via email with a link to the report.","title":"Schedule options"},{"location":"scheduling/#using-deploy-hooks-to-fire-a-schedule","text":"A schedule defines a validation to be run automatically. It can be set up to run monthly, weekly or daily, but it can also be fired via a deploy hook. To learn more about deploy hooks, go to the Deploy Hooks section.","title":"Using deploy hooks to fire a schedule"},{"location":"summary-reports/","text":"Summary Reports Chances are that the issues found on your sites affect many of their web pages, but in reality it's the same issue over and over again. In many cases, the affected code lies within a layout or a shared template, so fixing it once will remove this issue from hundreds or thousands of pages at once. HTML / A11Y issues tab To help you understand the big picture, Rocket Validator gives you a summary report that groups together all the HTML issues found. To see it, just click on the HTML issues or A11Y issues tab: On this report, you'll see all the issues found in all the web pages, grouped together and ordered by their frequency. For each issue, you can see how many web pages are affected by it. The grouped issues are ordered by their severity and the number of web pages that it affects, so you can concentrate on fixing the most important issues first. Seeing web pages affected Click on an issue, and you'll see the pages that have this exact issue, and how many times it appears on each different page. Once you've found and fixed this issue on your site, you can click the \"Re-check all pages with this issue\" button to re-check all the web pages affected by this issue. Issue on a given web page You can also click on one of the affected pages to see where this issue happens exactly in the web page. Click on the line and column buttons to jump to the exact line in the HTML code.","title":"Summary Reports"},{"location":"summary-reports/#summary-reports","text":"Chances are that the issues found on your sites affect many of their web pages, but in reality it's the same issue over and over again. In many cases, the affected code lies within a layout or a shared template, so fixing it once will remove this issue from hundreds or thousands of pages at once.","title":"Summary Reports"},{"location":"summary-reports/#html-a11y-issues-tab","text":"To help you understand the big picture, Rocket Validator gives you a summary report that groups together all the HTML issues found. To see it, just click on the HTML issues or A11Y issues tab: On this report, you'll see all the issues found in all the web pages, grouped together and ordered by their frequency. For each issue, you can see how many web pages are affected by it. The grouped issues are ordered by their severity and the number of web pages that it affects, so you can concentrate on fixing the most important issues first.","title":"HTML / A11Y issues tab"},{"location":"summary-reports/#seeing-web-pages-affected","text":"Click on an issue, and you'll see the pages that have this exact issue, and how many times it appears on each different page. Once you've found and fixed this issue on your site, you can click the \"Re-check all pages with this issue\" button to re-check all the web pages affected by this issue.","title":"Seeing web pages affected"},{"location":"summary-reports/#issue-on-a-given-web-page","text":"You can also click on one of the affected pages to see where this issue happens exactly in the web page. Click on the line and column buttons to jump to the exact line in the HTML code.","title":"Issue on a given web page"},{"location":"user-agents/","text":"User Agents When you validate a site using Rocket Validator, your server will be visited by the following systems: Link Spider . It will start at the initial URL to discover the internal links, and visit all of them until it finds all the pages to validate. HTML Checker . It will validate HTML / CSS markup on each of your pages. Accessibility Checker . It will validate Accessibility on each of your pages (optional, Pro feature). This means that, for each page on your site, your server is going to at least 2 visits (scraper and HTML checker), maybe 3 if you're also checking Accessibility. In case your server is protected by a rate limiter or a firewall, this can result in Rocket Validator being blocked. The way to ensure Rocket Validator doesn't get blocked on your server in this case is by explicitly allowing it to visit your site. As our IPs are dynamic, the proper way to do this is by identifying our requests by the User Agent header we include in our requests, which currently are the following: Link Spider Link Spider User Agent Rocket Validator (+https://rocketvalidator.com) HTML Checker HTML Checker User Agent Validator.nu/LV Accessibility Checker Accessibility Checker User Agent Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/68.0.3419.0 Safari/537.36","title":"User Agents"},{"location":"user-agents/#user-agents","text":"When you validate a site using Rocket Validator, your server will be visited by the following systems: Link Spider . It will start at the initial URL to discover the internal links, and visit all of them until it finds all the pages to validate. HTML Checker . It will validate HTML / CSS markup on each of your pages. Accessibility Checker . It will validate Accessibility on each of your pages (optional, Pro feature). This means that, for each page on your site, your server is going to at least 2 visits (scraper and HTML checker), maybe 3 if you're also checking Accessibility. In case your server is protected by a rate limiter or a firewall, this can result in Rocket Validator being blocked. The way to ensure Rocket Validator doesn't get blocked on your server in this case is by explicitly allowing it to visit your site. As our IPs are dynamic, the proper way to do this is by identifying our requests by the User Agent header we include in our requests, which currently are the following:","title":"User Agents"},{"location":"user-agents/#link-spider","text":"Link Spider User Agent Rocket Validator (+https://rocketvalidator.com)","title":"Link Spider"},{"location":"user-agents/#html-checker","text":"HTML Checker User Agent Validator.nu/LV","title":"HTML Checker"},{"location":"user-agents/#accessibility-checker","text":"Accessibility Checker User Agent Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/68.0.3419.0 Safari/537.36","title":"Accessibility Checker"},{"location":"validation-charts/","text":"Validation Charts Site validations include history charts that show the evolution of the monitored sites over time. This lets you quickly see how you're doing in fixing the issues found, or check if new issues have been introduced. Page status chart This chart categorizes the validated pages in your site by its overall status: no issues, only warnings, pages with errors, or pages that could not be validated (404s, 500s, etc.). HTML issues chart This chart shows the average number of HTML errors and warnings per page, over time. Accessibility issues chart This chart shows the average number of accessibility errors and warnings per page, over time.","title":"Validation Charts"},{"location":"validation-charts/#validation-charts","text":"Site validations include history charts that show the evolution of the monitored sites over time. This lets you quickly see how you're doing in fixing the issues found, or check if new issues have been introduced.","title":"Validation Charts"},{"location":"validation-charts/#page-status-chart","text":"This chart categorizes the validated pages in your site by its overall status: no issues, only warnings, pages with errors, or pages that could not be validated (404s, 500s, etc.).","title":"Page status chart"},{"location":"validation-charts/#html-issues-chart","text":"This chart shows the average number of HTML errors and warnings per page, over time.","title":"HTML issues chart"},{"location":"validation-charts/#accessibility-issues-chart","text":"This chart shows the average number of accessibility errors and warnings per page, over time.","title":"Accessibility issues chart"}]}