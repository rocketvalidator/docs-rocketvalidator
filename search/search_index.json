{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Rocket Validator! Rocket Validator is the tool used by professional web developers worldwide to quickly detect accessibility and HTML issues on large web sites, in an automated way. Basically, Rocket Validator is an automated accessibility scanner: just by submitting a starting URL our spider will discover the internal pages on that site, and check web page found using the latest versions of the W3C HTML Validator and the axe-core accessibility engine , giving you a detailed report in seconds. By creating an account at Rocket Validator, you can manage your site validation reports via the Web UI or using our JSON API .","title":"Web UI"},{"location":"#welcome-to-rocket-validator","text":"Rocket Validator is the tool used by professional web developers worldwide to quickly detect accessibility and HTML issues on large web sites, in an automated way. Basically, Rocket Validator is an automated accessibility scanner: just by submitting a starting URL our spider will discover the internal pages on that site, and check web page found using the latest versions of the W3C HTML Validator and the axe-core accessibility engine , giving you a detailed report in seconds. By creating an account at Rocket Validator, you can manage your site validation reports via the Web UI or using our JSON API .","title":"Welcome to Rocket Validator!"},{"location":"broken-links-checker/","text":"Broken Links Checker When scraping your web site to find the internal links, we may find broken links, for example internal pages that return a 404 Not Found error, a Timeout, or any other kind of non-document errors. Non-document errors In this case, a Non-document error tab will be shown, where you can see the unreachable pages: Where's it linked from? Each unreachable page will show where it was linked from, so you can fix the broken link in its origin: Limitations These non-document errors come from the HTML checker, as Rocket Validator does not have a broken link checker of its own.","title":"Broken Links Checker"},{"location":"broken-links-checker/#broken-links-checker","text":"When scraping your web site to find the internal links, we may find broken links, for example internal pages that return a 404 Not Found error, a Timeout, or any other kind of non-document errors.","title":"Broken Links Checker"},{"location":"broken-links-checker/#non-document-errors","text":"In this case, a Non-document error tab will be shown, where you can see the unreachable pages:","title":"Non-document errors"},{"location":"broken-links-checker/#wheres-it-linked-from","text":"Each unreachable page will show where it was linked from, so you can fix the broken link in its origin:","title":"Where's it linked from?"},{"location":"broken-links-checker/#limitations","text":"These non-document errors come from the HTML checker, as Rocket Validator does not have a broken link checker of its own.","title":"Limitations"},{"location":"changelog/","text":"Changelog Rocket Validator is continually evolving, this document describes the latest changes on the user interface and features. 2020, July 6th Summary reports has been upgraded to include the 3 main HTML and accessibility issues found. 2020, June 21st The user interface for reports has been redesigned to make it simpler, more accessible and easier to understand. User menu is now a drop-down list The user menu at the top has been converted to a drop-down menu , instead of individual buttons. Current Previous Reports list with column sorting and bulk deletion The reports list has been simplified, by offering the right amount of information that is needed at this level. Instead of detailing the number of errors and warnings, we just show the total number of issues for each check. Columns are sortable now, so with a click you can sort your reports by URL, number of web pages, number of HTML or accessibility issues, and creation date. Reports can now be bulk-deleted . Instead of deleting reports one by one, you can check many and then click on the \"Delete\" button to remove them at once. Range selection is supported using the \"shift\" key. Current Bulk deletion Previous Report summary includes more details and stats The new reports summary view provides a high-level overview that lets you quickly understand the status of your checked site. While the previous summary report was just a horizontal colored bar, the new report summary includes: Number of web pages found. Total number of HTML issues found. Total number of accessibility issues found. Mutings applied, if any. Time of the last check. Also, for the HTML and accessibility checks, a progress gauge shows the percentage of pages that passed all the checks. Current Details Gauges Previous Report actions are now a drop-down list The report actions for re-scraping, re-checking and sharing reports are now bundled together in a drop-down list . Current Previous Report web page list with column sorting and bulk recheck The new report web pages list can now be sorted by URL, HTML or accessibility issues, or status. Also, the web pages can be marked for bulk re-checking . Current Bulk recheck Previous 2020, April 22nd HTML checking is now optional. Previously, the HTML check was always included, but now you can decide what checks to include on the reports: HTML and/or accessibility. This lets you save credits on your account and work with a more focused checking scope when you need it.","title":"Changelog"},{"location":"changelog/#changelog","text":"Rocket Validator is continually evolving, this document describes the latest changes on the user interface and features.","title":"Changelog"},{"location":"changelog/#2020-july-6th","text":"Summary reports has been upgraded to include the 3 main HTML and accessibility issues found.","title":"2020, July 6th"},{"location":"changelog/#2020-june-21st","text":"The user interface for reports has been redesigned to make it simpler, more accessible and easier to understand.","title":"2020, June 21st"},{"location":"changelog/#user-menu-is-now-a-drop-down-list","text":"The user menu at the top has been converted to a drop-down menu , instead of individual buttons. Current Previous","title":"User menu is now a drop-down list"},{"location":"changelog/#reports-list-with-column-sorting-and-bulk-deletion","text":"The reports list has been simplified, by offering the right amount of information that is needed at this level. Instead of detailing the number of errors and warnings, we just show the total number of issues for each check. Columns are sortable now, so with a click you can sort your reports by URL, number of web pages, number of HTML or accessibility issues, and creation date. Reports can now be bulk-deleted . Instead of deleting reports one by one, you can check many and then click on the \"Delete\" button to remove them at once. Range selection is supported using the \"shift\" key. Current Bulk deletion Previous","title":"Reports list with column sorting and bulk deletion"},{"location":"changelog/#report-summary-includes-more-details-and-stats","text":"The new reports summary view provides a high-level overview that lets you quickly understand the status of your checked site. While the previous summary report was just a horizontal colored bar, the new report summary includes: Number of web pages found. Total number of HTML issues found. Total number of accessibility issues found. Mutings applied, if any. Time of the last check. Also, for the HTML and accessibility checks, a progress gauge shows the percentage of pages that passed all the checks. Current Details Gauges Previous","title":"Report summary includes more details and stats"},{"location":"changelog/#report-actions-are-now-a-drop-down-list","text":"The report actions for re-scraping, re-checking and sharing reports are now bundled together in a drop-down list . Current Previous","title":"Report actions are now a drop-down list"},{"location":"changelog/#report-web-page-list-with-column-sorting-and-bulk-recheck","text":"The new report web pages list can now be sorted by URL, HTML or accessibility issues, or status. Also, the web pages can be marked for bulk re-checking . Current Bulk recheck Previous","title":"Report web page list with column sorting and bulk recheck"},{"location":"changelog/#2020-april-22nd","text":"","title":"2020, April 22nd"},{"location":"changelog/#html-checking-is-now-optional","text":"Previously, the HTML check was always included, but now you can decide what checks to include on the reports: HTML and/or accessibility. This lets you save credits on your account and work with a more focused checking scope when you need it.","title":"HTML checking is now optional."},{"location":"deploy-hooks/","text":"Deploy hooks Use deploy hooks to notify Rocket Validator that you've deployed a new version of your site and make it start automatically the specified validation. To create a deploy hook, create a schedule as explained in the Scheduling reports section. Then, set up your hosting platform to fire this schedule after deploys. curl curl is a command-line tool, present in most systems, that you can use to make a quick check from your terminal. Example: curl $ curl -X POST https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Netlify Netlify is a hosting platform for static websites, and offers the simplest integration possible. You just need to Add Notification , choose the Outgoing webhook type and paste your deploy hook URL like this: Github Pages Github Pages let you define webhooks for different events. You just need to enter your automatic validator URL in the Payload URL field, and choose the individual event for page build : Github Pages lets you define several deploy hooks for different services. Heroku If your site is on Heroku, you can use the free HTTP post hook add-on , like this: Example: Heroku $ heroku addons:create deployhooks:http \\ --url https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Heroku only allows one HTTP deploy hook per app, so if you need to trigger several hooks, you can set it up using deploy hook forker . Engine Yard Engine Yard lets you define deploy hooks using simple ruby scripts . To trigger a site validation, you can create a deploy/after_restart.rb file on the root folder of your app, that sends the post-deploy hook using curl like this: Example: Engine Yard run \"curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire\" Cloud 66 If your site is on Cloud 66 , you can use their free deploy hooks to define your hooks per environment on a file named .cloud66/deploy_hooks.yml , like this: Example: Cloud 66 staging: last_thing: - command: curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire target: rails run_on: single_server Cloud 66 lets you have several deploy hooks defined. The syntax for doing that is: Example: Cloud 66 last_thing: - xxxxxx yyyyyy zzzzzz - xxxxxx yyyyyy zzzzzz Other platforms If your hosting platform is not listed here, feel free to contact us and we'll help you with the integration.","title":"Deploy Hooks"},{"location":"deploy-hooks/#deploy-hooks","text":"Use deploy hooks to notify Rocket Validator that you've deployed a new version of your site and make it start automatically the specified validation. To create a deploy hook, create a schedule as explained in the Scheduling reports section. Then, set up your hosting platform to fire this schedule after deploys.","title":"Deploy hooks"},{"location":"deploy-hooks/#curl","text":"curl is a command-line tool, present in most systems, that you can use to make a quick check from your terminal. Example: curl $ curl -X POST https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire","title":"curl"},{"location":"deploy-hooks/#netlify","text":"Netlify is a hosting platform for static websites, and offers the simplest integration possible. You just need to Add Notification , choose the Outgoing webhook type and paste your deploy hook URL like this:","title":"Netlify"},{"location":"deploy-hooks/#github-pages","text":"Github Pages let you define webhooks for different events. You just need to enter your automatic validator URL in the Payload URL field, and choose the individual event for page build : Github Pages lets you define several deploy hooks for different services.","title":"Github Pages"},{"location":"deploy-hooks/#heroku","text":"If your site is on Heroku, you can use the free HTTP post hook add-on , like this: Example: Heroku $ heroku addons:create deployhooks:http \\ --url https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire Heroku only allows one HTTP deploy hook per app, so if you need to trigger several hooks, you can set it up using deploy hook forker .","title":"Heroku"},{"location":"deploy-hooks/#engine-yard","text":"Engine Yard lets you define deploy hooks using simple ruby scripts . To trigger a site validation, you can create a deploy/after_restart.rb file on the root folder of your app, that sends the post-deploy hook using curl like this: Example: Engine Yard run \"curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire\"","title":"Engine Yard"},{"location":"deploy-hooks/#cloud-66","text":"If your site is on Cloud 66 , you can use their free deploy hooks to define your hooks per environment on a file named .cloud66/deploy_hooks.yml , like this: Example: Cloud 66 staging: last_thing: - command: curl -X POST -d '' https://rocketvalidator.com/schedule/ $SCHEDULE_ID /fire target: rails run_on: single_server Cloud 66 lets you have several deploy hooks defined. The syntax for doing that is: Example: Cloud 66 last_thing: - xxxxxx yyyyyy zzzzzz - xxxxxx yyyyyy zzzzzz","title":"Cloud 66"},{"location":"deploy-hooks/#other-platforms","text":"If your hosting platform is not listed here, feel free to contact us and we'll help you with the integration.","title":"Other platforms"},{"location":"faqs/","text":"Frequently Asked Questions Why are my validations slow? Rocket Validator speed depends on the speed at which your validated server can respond. To avoid clogging your servers, we rate limit our validations to 5 simultaneous connections, so the faster your server respond, the faster we can validate it. Why can't some sites be scraped? When you submit an URL for validation, we send a web spider to visit the site and get its links. Sometimes, this process that is called \"scraping\" fails, and it can be due to a number of reasons. Here are the most typical ones: Authorization required Sites must be publicly accessible to be validated. Could not be found (404) The URL you provided could not be found. Connection timed out The site is taking too long to respond. Retry again later, when the remote server has less traffic. Too many requests to remote server The remote server is denying us access because it is rate limiting us. Contact your sys admin to relax this rate limiting, or try again later. Blocked The remote server is blocking our requests. Consult the User Agents page to explicitly allow our requests. No internal links found The document returned for the starting URL contains no links, or the links are not on the same host. The spider will only follow internal links from the starting URL. If none of this explains the reason why your site is not being scraped, contact us and we'll help you find the cause. Can I validate pages that require authorization? No, there is no direct way of validating pages that require login. Rocket Validator is a distributed system with different internal pieces: our own web crawler, the HTML validator and the A11Y validator. Requests to your web pages come from these three different origins, so authentication handling would need to be implemented in all of them, and would need to cover the different authentication systems most web sites implement. Instead, we recommend other approaches to checking protected sites: You can validate your local development server directly . This also makes it faster to fix the issues, as you don\u2019t need to deploy them. You can have a separate server that doesn\u2019t need authentication. You can have a copy of the templates for the restricted pages in a different directory that doesn't require authentication. Does Rocket Validator cache pages? No, we don't use any kind of cache neither on the link scraper, nor on the validator. If you're changing your page and you're getting the same validation results, the possible reason can be: Your server is using cache, like for example Varnish . Your pages are being rendered depending on the User-Agent string - you might be seeing your changes on the browser, but your server might be serving different content to the validator. The default User-Agent string for the validator is Validator.nu/LV http://validator.w3.org/services How long are reports stored? We store the results of your validations for a limited time, depending on your subscription plan. See the pricing table. Can I share reports with other people? Sure, you can share your validation reports with anyone. Just click on the Share this report button and you'll be able to send anyone the URL of the report. They'll be able to see the validation results just like you - but they won't be able to re-check any page, only you can control this. Can I export reports to Excel, CSV, or PDF? No, reports can't be exported to these formats, because the generated file would be too heavy to handle. Think of a large site with 3,000 validated web pages, where each page has 100 issues. The result would be a file containing 300,000 rows - this is not something you'll easily handle in Excel or that you'd be wanting to read as a PDF. Instead, our web interface lets you easily browse all the web pages and its issues, re-check each page as needed, and share the reports with your colleagues or clients. How can I exclude Rocket Validator from Google Analytics traffic? You can detect the User Agent string, and exclude it from Google Analytics .","title":"FAQs"},{"location":"faqs/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faqs/#why-are-my-validations-slow","text":"Rocket Validator speed depends on the speed at which your validated server can respond. To avoid clogging your servers, we rate limit our validations to 5 simultaneous connections, so the faster your server respond, the faster we can validate it.","title":"Why are my validations slow?"},{"location":"faqs/#why-cant-some-sites-be-scraped","text":"When you submit an URL for validation, we send a web spider to visit the site and get its links. Sometimes, this process that is called \"scraping\" fails, and it can be due to a number of reasons. Here are the most typical ones: Authorization required Sites must be publicly accessible to be validated. Could not be found (404) The URL you provided could not be found. Connection timed out The site is taking too long to respond. Retry again later, when the remote server has less traffic. Too many requests to remote server The remote server is denying us access because it is rate limiting us. Contact your sys admin to relax this rate limiting, or try again later. Blocked The remote server is blocking our requests. Consult the User Agents page to explicitly allow our requests. No internal links found The document returned for the starting URL contains no links, or the links are not on the same host. The spider will only follow internal links from the starting URL. If none of this explains the reason why your site is not being scraped, contact us and we'll help you find the cause.","title":"Why can't some sites be scraped?"},{"location":"faqs/#can-i-validate-pages-that-require-authorization","text":"No, there is no direct way of validating pages that require login. Rocket Validator is a distributed system with different internal pieces: our own web crawler, the HTML validator and the A11Y validator. Requests to your web pages come from these three different origins, so authentication handling would need to be implemented in all of them, and would need to cover the different authentication systems most web sites implement. Instead, we recommend other approaches to checking protected sites: You can validate your local development server directly . This also makes it faster to fix the issues, as you don\u2019t need to deploy them. You can have a separate server that doesn\u2019t need authentication. You can have a copy of the templates for the restricted pages in a different directory that doesn't require authentication.","title":"Can I validate pages that require authorization?"},{"location":"faqs/#does-rocket-validator-cache-pages","text":"No, we don't use any kind of cache neither on the link scraper, nor on the validator. If you're changing your page and you're getting the same validation results, the possible reason can be: Your server is using cache, like for example Varnish . Your pages are being rendered depending on the User-Agent string - you might be seeing your changes on the browser, but your server might be serving different content to the validator. The default User-Agent string for the validator is Validator.nu/LV http://validator.w3.org/services","title":"Does Rocket Validator cache pages?"},{"location":"faqs/#how-long-are-reports-stored","text":"We store the results of your validations for a limited time, depending on your subscription plan. See the pricing table.","title":"How long are reports stored?"},{"location":"faqs/#can-i-share-reports-with-other-people","text":"Sure, you can share your validation reports with anyone. Just click on the Share this report button and you'll be able to send anyone the URL of the report. They'll be able to see the validation results just like you - but they won't be able to re-check any page, only you can control this.","title":"Can I share reports with other people?"},{"location":"faqs/#can-i-export-reports-to-excel-csv-or-pdf","text":"No, reports can't be exported to these formats, because the generated file would be too heavy to handle. Think of a large site with 3,000 validated web pages, where each page has 100 issues. The result would be a file containing 300,000 rows - this is not something you'll easily handle in Excel or that you'd be wanting to read as a PDF. Instead, our web interface lets you easily browse all the web pages and its issues, re-check each page as needed, and share the reports with your colleagues or clients.","title":"Can I export reports to Excel, CSV, or PDF?"},{"location":"faqs/#how-can-i-exclude-rocket-validator-from-google-analytics-traffic","text":"You can detect the User Agent string, and exclude it from Google Analytics .","title":"How can I exclude Rocket Validator from Google Analytics traffic?"},{"location":"google-analytics/","text":"Excluding Rocket Validator Bots from Google Analytics Traffic As explained in the User Agents section, when you validate a site with Rocket Validator, your server will be visited by 3 different systems: Link Spider, HTML Checker and Accessibility Checker. The first two will just get the static HTML content, but the Accessibility Checker behaves like a real browser (using Headless Chrome), so it's going to execute JavaScript in the visited pages - and that includes the Google Analytics script, if it's there. So, it's perfectly normal to see a spike in the Google Analytics traffic when you're validating a site. But in most cases, you can prefer to exclude this traffic from the stats. There are 2 options to do that, let's explore them. Not rendering the Google Analytics script This option may be the simpler method, if your web site can detect the User Agent string from the request. It may not be an option in certain cases like static sites. If you can do that, then it's simple: in case the User Agent string contains RocketValidator , don't include the script that triggers Google Analytics. However, we don't recommend this option as it's preferable to not customize your content based on User Agents, so the bots can have \"the real thing\". Let's say a script introduces an accessibility issue, you're not going to detect it if you hide it from the bots. Filtering out from Google Analytics The second option requires a bit more work to set up but it's cleaner. There's nothing to set up on your server and the content stays the same. What you need to to instead is tell Google Analytics to filter out requests depending on the User Agent string. Setting up Google Analytics via Google Tag Manager First step is having Google Analytics installed via the Google Tag Manager. This way, it's easy to extend it with custom dimensions, like the User Agent. Follow this guide: Deploy Google Analytics with Tag Manager . Create a custom dimension for User Agent Next, go to your Google Analytics admin panel. Click on \"Custom Definitions\" in the \"Property\" column, and select \"Custom Dimensions\". Create a new Custom Dimension with the name \"User Agent\". Write down the \"Index\" value for the created Custom Dimension as we'll need it later. Create a variable in Google Tag Manager Now, go to your Google Tag Manager account and click on \"Variables\" on the left-hand side menu. Click on \"New\" under \"User-Defined Variables\". Set the name as \"User Agent\", the Variable Type as \"JavaScript Variable\" and the Global Variable Name as navigator.userAgent . Click on \"Save\". This will set up a JavaScript variable that will store the User Agent string, so it can be passed to Google Analytics. Define a custom dimension in Google Analytics Settings Still on the Google Tag Manager Variables section, click on the Google Analytics Settings variable: Edit the tag settings, open \"Custom Dimensions\" and click on \"Add Custom Dimension\". Set the index to the index matching the custom dimension in your Google Analytics account. Set the Dimension Value to {{User Agent}} . This will pass the User Agent to Google Analytics. Remember to Publish your changes in Google Tag Manager so they're enabled. Create a filter in Google Analytics The last step is going back to your Google Analytics account, Admin section. Click on \"Filters\" on the \"View\" column. Click on \"Add Filter\". Set the Filter Name as \"User-Agent RocketValidator\". Choose \"Custom\" in Filter Type. In the Exclude option, select the field \"User-Agent\" on the Custom Dimensions. And, in Filter Pattern, use this regular expression: .*RocketValidator.* . And that's it! It may take some time for the filter to take effect (but in most cases it's just a matter of minutes). This method does not remove traffic retroactively - it can only filter out traffic happening after the creation of the filter.","title":"Google Analytics"},{"location":"google-analytics/#excluding-rocket-validator-bots-from-google-analytics-traffic","text":"As explained in the User Agents section, when you validate a site with Rocket Validator, your server will be visited by 3 different systems: Link Spider, HTML Checker and Accessibility Checker. The first two will just get the static HTML content, but the Accessibility Checker behaves like a real browser (using Headless Chrome), so it's going to execute JavaScript in the visited pages - and that includes the Google Analytics script, if it's there. So, it's perfectly normal to see a spike in the Google Analytics traffic when you're validating a site. But in most cases, you can prefer to exclude this traffic from the stats. There are 2 options to do that, let's explore them.","title":"Excluding Rocket Validator Bots from Google Analytics Traffic"},{"location":"google-analytics/#not-rendering-the-google-analytics-script","text":"This option may be the simpler method, if your web site can detect the User Agent string from the request. It may not be an option in certain cases like static sites. If you can do that, then it's simple: in case the User Agent string contains RocketValidator , don't include the script that triggers Google Analytics. However, we don't recommend this option as it's preferable to not customize your content based on User Agents, so the bots can have \"the real thing\". Let's say a script introduces an accessibility issue, you're not going to detect it if you hide it from the bots.","title":"Not rendering the Google Analytics script"},{"location":"google-analytics/#filtering-out-from-google-analytics","text":"The second option requires a bit more work to set up but it's cleaner. There's nothing to set up on your server and the content stays the same. What you need to to instead is tell Google Analytics to filter out requests depending on the User Agent string.","title":"Filtering out from Google Analytics"},{"location":"google-analytics/#setting-up-google-analytics-via-google-tag-manager","text":"First step is having Google Analytics installed via the Google Tag Manager. This way, it's easy to extend it with custom dimensions, like the User Agent. Follow this guide: Deploy Google Analytics with Tag Manager .","title":"Setting up Google Analytics via Google Tag Manager"},{"location":"google-analytics/#create-a-custom-dimension-for-user-agent","text":"Next, go to your Google Analytics admin panel. Click on \"Custom Definitions\" in the \"Property\" column, and select \"Custom Dimensions\". Create a new Custom Dimension with the name \"User Agent\". Write down the \"Index\" value for the created Custom Dimension as we'll need it later.","title":"Create a custom dimension for User Agent"},{"location":"google-analytics/#create-a-variable-in-google-tag-manager","text":"Now, go to your Google Tag Manager account and click on \"Variables\" on the left-hand side menu. Click on \"New\" under \"User-Defined Variables\". Set the name as \"User Agent\", the Variable Type as \"JavaScript Variable\" and the Global Variable Name as navigator.userAgent . Click on \"Save\". This will set up a JavaScript variable that will store the User Agent string, so it can be passed to Google Analytics.","title":"Create a variable in Google Tag Manager"},{"location":"google-analytics/#define-a-custom-dimension-in-google-analytics-settings","text":"Still on the Google Tag Manager Variables section, click on the Google Analytics Settings variable: Edit the tag settings, open \"Custom Dimensions\" and click on \"Add Custom Dimension\". Set the index to the index matching the custom dimension in your Google Analytics account. Set the Dimension Value to {{User Agent}} . This will pass the User Agent to Google Analytics. Remember to Publish your changes in Google Tag Manager so they're enabled.","title":"Define a custom dimension in Google Analytics Settings"},{"location":"google-analytics/#create-a-filter-in-google-analytics","text":"The last step is going back to your Google Analytics account, Admin section. Click on \"Filters\" on the \"View\" column. Click on \"Add Filter\". Set the Filter Name as \"User-Agent RocketValidator\". Choose \"Custom\" in Filter Type. In the Exclude option, select the field \"User-Agent\" on the Custom Dimensions. And, in Filter Pattern, use this regular expression: .*RocketValidator.* . And that's it! It may take some time for the filter to take effect (but in most cases it's just a matter of minutes). This method does not remove traffic retroactively - it can only filter out traffic happening after the creation of the filter.","title":"Create a filter in Google Analytics"},{"location":"how-to-validate-your-local-server/","text":"Validating your local server You don't need to put your site live in order to validate it. Let's say you are working on a new site that hasn't yet been published, how could we validate it? ngrok There's an easy way to do that, thanks to tools like ngrok . This free tool lets you securely expose a local web server on a temporary public URL, that you can use to validate a site. Serve In case you aren't using a web server locally, say, you're working directly on static files, you can easily launch a web server in your local directory thanks to tools like Serve : Example Tools like ngrok and Serve are really easy to install and use. For example, let's say we have a site at a local folder \"mysite\". We could run a server like this: Example: serving local files $ cd mysite $ serve And this will launch a local web server at http://localhost:4000. Then, we can make it publicly accessible like this: Example: using ngrok to allow access to your local server from the internet $ ngrok http 4000 And ngrok will create a temporary public URL, like http://abcde1234.ngrok.com -- this is the URL of our local server on the Internet, so this is the URL to pass to Rocket Validator to validate your local server.","title":"Validating your local server"},{"location":"how-to-validate-your-local-server/#validating-your-local-server","text":"You don't need to put your site live in order to validate it. Let's say you are working on a new site that hasn't yet been published, how could we validate it?","title":"Validating your local server"},{"location":"how-to-validate-your-local-server/#ngrok","text":"There's an easy way to do that, thanks to tools like ngrok . This free tool lets you securely expose a local web server on a temporary public URL, that you can use to validate a site.","title":"ngrok"},{"location":"how-to-validate-your-local-server/#serve","text":"In case you aren't using a web server locally, say, you're working directly on static files, you can easily launch a web server in your local directory thanks to tools like Serve :","title":"Serve"},{"location":"how-to-validate-your-local-server/#example","text":"Tools like ngrok and Serve are really easy to install and use. For example, let's say we have a site at a local folder \"mysite\". We could run a server like this: Example: serving local files $ cd mysite $ serve And this will launch a local web server at http://localhost:4000. Then, we can make it publicly accessible like this: Example: using ngrok to allow access to your local server from the internet $ ngrok http 4000 And ngrok will create a temporary public URL, like http://abcde1234.ngrok.com -- this is the URL of our local server on the Internet, so this is the URL to pass to Rocket Validator to validate your local server.","title":"Example"},{"location":"muting/","text":"Muting Issues When validating your sites, you may find that some of the issues won't be currently fixed, for example: The affected code is out of your scope, for example it's being generated by a 3rd party software that you cannot control. You may be aware of an issue, but you've evaluated it and prefer to let it exist for some reason. You've decided that this will be fixed later and prefer to concentrate on other issues first. In those situations, Pro users can avoid all the noise related to those selected issues by muting them. How to mute issues The simplest way to mute an issue is directly on an issue list. Just hover over an issue and you'll see a MUTE button. When you click that button, you'll be on the new muting rule form: Then click on \"Submit\" and your new muting rule will be created and applied to your reports. Muting options To define a muting rule you need to specify: Matching URL . The muting rule will be applied to URLs containing this string. Try to be as specific as possible to limit the scope of this rule. Message . Enter the matching message here. Try to be as specific as possible to limit the scope of this muting rule. Comment / explanation . Optional but recommended, so you can explain why you decided to mute this rule.","title":"Muting Issues"},{"location":"muting/#muting-issues","text":"When validating your sites, you may find that some of the issues won't be currently fixed, for example: The affected code is out of your scope, for example it's being generated by a 3rd party software that you cannot control. You may be aware of an issue, but you've evaluated it and prefer to let it exist for some reason. You've decided that this will be fixed later and prefer to concentrate on other issues first. In those situations, Pro users can avoid all the noise related to those selected issues by muting them.","title":"Muting Issues"},{"location":"muting/#how-to-mute-issues","text":"The simplest way to mute an issue is directly on an issue list. Just hover over an issue and you'll see a MUTE button. When you click that button, you'll be on the new muting rule form: Then click on \"Submit\" and your new muting rule will be created and applied to your reports.","title":"How to mute issues"},{"location":"muting/#muting-options","text":"To define a muting rule you need to specify: Matching URL . The muting rule will be applied to URLs containing this string. Try to be as specific as possible to limit the scope of this rule. Message . Enter the matching message here. Try to be as specific as possible to limit the scope of this muting rule. Comment / explanation . Optional but recommended, so you can explain why you decided to mute this rule.","title":"Muting options"},{"location":"performance-tips/","text":"Performance Tips Validating a large site can take a considerable amount of time, so in order to get your results sooner, consider: Using an XML sitemap You can provide an XML sitemap specifying the exact URLs to validate. If you do so, we won't need to crawl your site to discover the pages to validate, so we can start validating pages sooner. You can read about the XML sitemaps protocol here , but in short, all you need is to specify each URL in this format: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <urlset xmlns= \"http://www.sitemaps.org/schemas/sitemap/0.9\" > <url> <loc> http://example.com/page1 </loc> </url> <url> <loc> http://example.com/page2 </loc> </url> <url> <loc> http://example.com/page3 </loc> </url> </urlset> You can generate this XML sitemap manually or by using a tool like this one . Once you have your sitemap ready and within your site, you can just submit it to Rocket Validator as the starting URL. For example, instead of submitting http://validationhell.com you'd submit http://validationhell.com/sitemap.xml . Using XML sitemaps leads to much faster site crawlings, and also lets you be more organized when validating large sites. For example, you can use different XML sitemaps for the different sections in a large site. Validating a smaller set of pages While it's tempting to try to validate sites in its entirety, in most cases that's unnecessary. For example, the New York Times site has over 15 million URLs, it would be impossible to validate the whole site. When you have a blog, or an online store, your site has easily thousands of pages, but most of them are using the same layout. Instead of validating each of them, consider building an XML sitemap with a sample of each different kind of page. You'll save time.","title":"Performance Tips"},{"location":"performance-tips/#performance-tips","text":"Validating a large site can take a considerable amount of time, so in order to get your results sooner, consider:","title":"Performance Tips"},{"location":"performance-tips/#using-an-xml-sitemap","text":"You can provide an XML sitemap specifying the exact URLs to validate. If you do so, we won't need to crawl your site to discover the pages to validate, so we can start validating pages sooner. You can read about the XML sitemaps protocol here , but in short, all you need is to specify each URL in this format: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <urlset xmlns= \"http://www.sitemaps.org/schemas/sitemap/0.9\" > <url> <loc> http://example.com/page1 </loc> </url> <url> <loc> http://example.com/page2 </loc> </url> <url> <loc> http://example.com/page3 </loc> </url> </urlset> You can generate this XML sitemap manually or by using a tool like this one . Once you have your sitemap ready and within your site, you can just submit it to Rocket Validator as the starting URL. For example, instead of submitting http://validationhell.com you'd submit http://validationhell.com/sitemap.xml . Using XML sitemaps leads to much faster site crawlings, and also lets you be more organized when validating large sites. For example, you can use different XML sitemaps for the different sections in a large site.","title":"Using an XML sitemap"},{"location":"performance-tips/#validating-a-smaller-set-of-pages","text":"While it's tempting to try to validate sites in its entirety, in most cases that's unnecessary. For example, the New York Times site has over 15 million URLs, it would be impossible to validate the whole site. When you have a blog, or an online store, your site has easily thousands of pages, but most of them are using the same layout. Instead of validating each of them, consider building an XML sitemap with a sample of each different kind of page. You'll save time.","title":"Validating a smaller set of pages"},{"location":"quick-start/","text":"Quick Start To begin validating your sites you just need to create an account . Once you have done that, you'll be prompted to validate your first site by entering a starting URL and clicking on \"Start validation\". Options To validate a site, you can define the following options. Starting URL . Our validation spider will visit this URL and recursively follow the internal links, validating each internal web page found. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . Can be set from 1 to 5 (Basic users) or 1 to 15 (Pro users). Validate HTML and/or Accessibility . Pro users can choose to include A11Y checks on top of HTML checks. Re-checking your pages Once your site has been processed, you'll see the HTML and accessibility issues for each page found. As you go fixing them, you can re-check the pages quickly with: Re-check button on each page. This will submit an individual page to the validator. Re-check all pages with issues button. This will submit all pages with errors or warnings to the validator. Re-check all pages button. This will submit all pages on the site to the validator. Re-scrape site button. This will start the scraper again, to discover the internal pages of the site and validate each of them. Use only if the structure of your site has changed or if you want to change any parameter (like max pages).","title":"Quick Start"},{"location":"quick-start/#quick-start","text":"To begin validating your sites you just need to create an account . Once you have done that, you'll be prompted to validate your first site by entering a starting URL and clicking on \"Start validation\".","title":"Quick Start"},{"location":"quick-start/#options","text":"To validate a site, you can define the following options. Starting URL . Our validation spider will visit this URL and recursively follow the internal links, validating each internal web page found. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . Can be set from 1 to 5 (Basic users) or 1 to 15 (Pro users). Validate HTML and/or Accessibility . Pro users can choose to include A11Y checks on top of HTML checks.","title":"Options"},{"location":"quick-start/#re-checking-your-pages","text":"Once your site has been processed, you'll see the HTML and accessibility issues for each page found. As you go fixing them, you can re-check the pages quickly with: Re-check button on each page. This will submit an individual page to the validator. Re-check all pages with issues button. This will submit all pages with errors or warnings to the validator. Re-check all pages button. This will submit all pages on the site to the validator. Re-scrape site button. This will start the scraper again, to discover the internal pages of the site and validate each of them. Use only if the structure of your site has changed or if you want to change any parameter (like max pages).","title":"Re-checking your pages"},{"location":"rate-limits/","text":"Rate Limiting When you submit a site for validation, Rocket Validator will scrape the site to search for internal web pages, and check each of them for HTML and Accessibility conformance. This means that your site can receive three types of requests: Scraper request . Your web pages will be visited to discover internal links to other pages. HTML check . The Nu Validator will launch this request to validate your page. A11Y check . The axe-core accessibility engine will perform this request to check your page. This means that, for example, a site with 1,000 web pages can receive 3,000 requests during the site validation. Avoiding server overload To avoid overloading your server, we carefully rate limit the requests to ensure they don't happen all at once, but a buffered rate. The following limits are applied: Account limit . Enterprise users have a limit of 25 requests per second. Pro users have a limit of 15 requests per second. Basic users have a limit is 10 requests per second. Report limit . Enterprise users can set the limit between 1 and 25 reqs/sec. Pro users can set the limit between 1 and 15 reqs/sec. Basic users can set the limit between 1 and 5 reqs/sec. On top of that we impose a rate limit on each host, to ensure that even if you're running simultaneously several site validations on the same host, a global limit is applied. How to reduce the number of requests To avoid making too many requests to your servers we recommend: Setting a low rate limit . The default rate limit is 3 reqs/second, but you can set it as low as 1 req/second. Using an XML sitemap . You can provide an XML sitemap specifying the exact URLs to validate. This way the scraper can avoid crawling your internal pages in seach for links. Read more . Skipping A11Y validation . By default, Pro users will get A11Y validation on top of HTML validation. You may consider skipping A11Y validation and focus on fixing the HTML issues first.","title":"Rate Limiting"},{"location":"rate-limits/#rate-limiting","text":"When you submit a site for validation, Rocket Validator will scrape the site to search for internal web pages, and check each of them for HTML and Accessibility conformance. This means that your site can receive three types of requests: Scraper request . Your web pages will be visited to discover internal links to other pages. HTML check . The Nu Validator will launch this request to validate your page. A11Y check . The axe-core accessibility engine will perform this request to check your page. This means that, for example, a site with 1,000 web pages can receive 3,000 requests during the site validation.","title":"Rate Limiting"},{"location":"rate-limits/#avoiding-server-overload","text":"To avoid overloading your server, we carefully rate limit the requests to ensure they don't happen all at once, but a buffered rate. The following limits are applied: Account limit . Enterprise users have a limit of 25 requests per second. Pro users have a limit of 15 requests per second. Basic users have a limit is 10 requests per second. Report limit . Enterprise users can set the limit between 1 and 25 reqs/sec. Pro users can set the limit between 1 and 15 reqs/sec. Basic users can set the limit between 1 and 5 reqs/sec. On top of that we impose a rate limit on each host, to ensure that even if you're running simultaneously several site validations on the same host, a global limit is applied.","title":"Avoiding server overload"},{"location":"rate-limits/#how-to-reduce-the-number-of-requests","text":"To avoid making too many requests to your servers we recommend: Setting a low rate limit . The default rate limit is 3 reqs/second, but you can set it as low as 1 req/second. Using an XML sitemap . You can provide an XML sitemap specifying the exact URLs to validate. This way the scraper can avoid crawling your internal pages in seach for links. Read more . Skipping A11Y validation . By default, Pro users will get A11Y validation on top of HTML validation. You may consider skipping A11Y validation and focus on fixing the HTML issues first.","title":"How to reduce the number of requests"},{"location":"scheduling/","text":"Scheduling Reports Pro users can schedule validation reports, so that they are performed automatically when indicated (monthly, weekly or daily). To schedule a validation, go to the new schedule form and enter the starting URL, the maximum number of pages to validate, how often you want us to run this validation, click \"Submit\" and you're ready to go: Schedule options To schedule a site validation, you can define: When should we run this validation . Typically you'll want to perform a monthly check, but you can also define it to be weekly or even daily - but we suggest you set up a longer frequency that leaves you enough time to fix your issues until the next run. Starting URL . Our validation spider will visit this URL and its direct internal links, and validate those pages. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . By default is 3 reqs/second, can be set higher depending on your subscription plan. Read more . Validate HTML and Accessibility or only HTML . Choose if you want to include A11Y checks on top of HTML checks. Active . Disable this to temporarily pause the scheduled validation. When the scheduled validation is run, you'll be notified via email with a link to the report. Using deploy hooks to fire a schedule A schedule defines a validation to be run automatically. It can be set up to run monthly, weekly or daily, but it can also be fired via a deploy hook. To learn more about deploy hooks, go to the Deploy Hooks section.","title":"Scheduling Reports"},{"location":"scheduling/#scheduling-reports","text":"Pro users can schedule validation reports, so that they are performed automatically when indicated (monthly, weekly or daily). To schedule a validation, go to the new schedule form and enter the starting URL, the maximum number of pages to validate, how often you want us to run this validation, click \"Submit\" and you're ready to go:","title":"Scheduling Reports"},{"location":"scheduling/#schedule-options","text":"To schedule a site validation, you can define: When should we run this validation . Typically you'll want to perform a monthly check, but you can also define it to be weekly or even daily - but we suggest you set up a longer frequency that leaves you enough time to fix your issues until the next run. Starting URL . Our validation spider will visit this URL and its direct internal links, and validate those pages. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap. How many pages to validate . The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets. Validation speed (requests/second) . By default is 3 reqs/second, can be set higher depending on your subscription plan. Read more . Validate HTML and Accessibility or only HTML . Choose if you want to include A11Y checks on top of HTML checks. Active . Disable this to temporarily pause the scheduled validation. When the scheduled validation is run, you'll be notified via email with a link to the report.","title":"Schedule options"},{"location":"scheduling/#using-deploy-hooks-to-fire-a-schedule","text":"A schedule defines a validation to be run automatically. It can be set up to run monthly, weekly or daily, but it can also be fired via a deploy hook. To learn more about deploy hooks, go to the Deploy Hooks section.","title":"Using deploy hooks to fire a schedule"},{"location":"summary-reports/","text":"Summary Reports Chances are that the issues found on your sites affect many of their web pages, but in reality it's the same issue over and over again. In many cases, the affected code lies within a layout or a shared template, so fixing it once will remove this issue from hundreds or thousands of pages at once. That's why the first screen you'll see when creating a new report is the Summary . This screen shows the main HTML and accessibility issues found on your checked site, grouped by their importance. You'll get a highlight of the first 3 issues for each kind of check so you can focus on fixing them first, and a link to see the full list of issues. Also, for the HTML and accessibility checks, a progress gauge shows the percentage of pages that passed all the checks. Your goal is to reach a 100% of web pages passing all checks. Common HTML / accessibility issues tabs The Summary screen gives you the main 3 issues for each kind of check. If you want to get the full list of issues, you can use the Common HTML issues or the Common accessibility issues tabs. On the common issues reports you'll see all the issues found in all the web pages, grouped together and ordered by their frequency. For each issue, you can see how many web pages are affected by it. The grouped issues are ordered by their severity and the number of web pages that it affects, so you can concentrate on fixing the most important issues first. Seeing web pages affected Click on an issue, and you'll see the pages that have this exact issue, and how many times it appears on each different page. Once you've found and fixed this issue on your site, you can click the \"Re-check all pages with this issue\" button to re-check all the web pages affected by this issue. Issue on a given web page You can also click on one of the affected pages to see where this issue happens exactly in the web page. Click on the line and column buttons to jump to the exact line in the HTML code.","title":"Summary Reports"},{"location":"summary-reports/#summary-reports","text":"Chances are that the issues found on your sites affect many of their web pages, but in reality it's the same issue over and over again. In many cases, the affected code lies within a layout or a shared template, so fixing it once will remove this issue from hundreds or thousands of pages at once. That's why the first screen you'll see when creating a new report is the Summary . This screen shows the main HTML and accessibility issues found on your checked site, grouped by their importance. You'll get a highlight of the first 3 issues for each kind of check so you can focus on fixing them first, and a link to see the full list of issues. Also, for the HTML and accessibility checks, a progress gauge shows the percentage of pages that passed all the checks. Your goal is to reach a 100% of web pages passing all checks.","title":"Summary Reports"},{"location":"summary-reports/#common-html-accessibility-issues-tabs","text":"The Summary screen gives you the main 3 issues for each kind of check. If you want to get the full list of issues, you can use the Common HTML issues or the Common accessibility issues tabs. On the common issues reports you'll see all the issues found in all the web pages, grouped together and ordered by their frequency. For each issue, you can see how many web pages are affected by it. The grouped issues are ordered by their severity and the number of web pages that it affects, so you can concentrate on fixing the most important issues first.","title":"Common HTML / accessibility issues tabs"},{"location":"summary-reports/#seeing-web-pages-affected","text":"Click on an issue, and you'll see the pages that have this exact issue, and how many times it appears on each different page. Once you've found and fixed this issue on your site, you can click the \"Re-check all pages with this issue\" button to re-check all the web pages affected by this issue.","title":"Seeing web pages affected"},{"location":"summary-reports/#issue-on-a-given-web-page","text":"You can also click on one of the affected pages to see where this issue happens exactly in the web page. Click on the line and column buttons to jump to the exact line in the HTML code.","title":"Issue on a given web page"},{"location":"user-agents/","text":"User Agents When you validate a site using Rocket Validator, your server will be visited by the following systems: Link Spider . It will start at the initial URL to discover the internal links, and visit all of them until it finds all the pages to validate. HTML Checker . It will validate HTML / CSS markup on each of your pages. Accessibility Checker . It will validate Accessibility on each of your pages (optional, Pro feature). This means that, for each page on your site, your server is going to at least 2 visits (scraper and HTML checker), maybe 3 if you're also checking Accessibility. In case your server is protected by a rate limiter or a firewall, this can result in Rocket Validator being blocked. The way to ensure Rocket Validator doesn't get blocked on your server in this case is by explicitly allowing it to visit your site. As our IPs are dynamic, the proper way to do this is by identifying our requests by the User Agent header we include in our requests, which currently are the following: Link Spider Link Spider User Agent RocketValidator/Spider (+https://rocketvalidator.com) HTML Checker HTML Checker User Agent RocketValidator/HTMLChecker (+https://rocketvalidator.com) Validator.nu/LV Accessibility Checker Accessibility Checker User Agent RocketValidator/AccessibilityChecker (+https://rocketvalidator.com) Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/68.0.3419.0 Safari/537.36","title":"User Agents"},{"location":"user-agents/#user-agents","text":"When you validate a site using Rocket Validator, your server will be visited by the following systems: Link Spider . It will start at the initial URL to discover the internal links, and visit all of them until it finds all the pages to validate. HTML Checker . It will validate HTML / CSS markup on each of your pages. Accessibility Checker . It will validate Accessibility on each of your pages (optional, Pro feature). This means that, for each page on your site, your server is going to at least 2 visits (scraper and HTML checker), maybe 3 if you're also checking Accessibility. In case your server is protected by a rate limiter or a firewall, this can result in Rocket Validator being blocked. The way to ensure Rocket Validator doesn't get blocked on your server in this case is by explicitly allowing it to visit your site. As our IPs are dynamic, the proper way to do this is by identifying our requests by the User Agent header we include in our requests, which currently are the following:","title":"User Agents"},{"location":"user-agents/#link-spider","text":"Link Spider User Agent RocketValidator/Spider (+https://rocketvalidator.com)","title":"Link Spider"},{"location":"user-agents/#html-checker","text":"HTML Checker User Agent RocketValidator/HTMLChecker (+https://rocketvalidator.com) Validator.nu/LV","title":"HTML Checker"},{"location":"user-agents/#accessibility-checker","text":"Accessibility Checker User Agent RocketValidator/AccessibilityChecker (+https://rocketvalidator.com) Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/68.0.3419.0 Safari/537.36","title":"Accessibility Checker"},{"location":"validation-charts/","text":"Validation Charts Site validations include history charts that show the evolution of the monitored sites over time. This lets you quickly see how you're doing in fixing the issues found, or check if new issues have been introduced. Page status chart This chart categorizes the validated pages in your site by its overall status: no issues, only warnings, pages with errors, or pages that could not be validated (404s, 500s, etc.). HTML issues chart This chart shows the average number of HTML errors and warnings per page, over time. Accessibility issues chart This chart shows the average number of accessibility errors and warnings per page, over time.","title":"Validation Charts"},{"location":"validation-charts/#validation-charts","text":"Site validations include history charts that show the evolution of the monitored sites over time. This lets you quickly see how you're doing in fixing the issues found, or check if new issues have been introduced.","title":"Validation Charts"},{"location":"validation-charts/#page-status-chart","text":"This chart categorizes the validated pages in your site by its overall status: no issues, only warnings, pages with errors, or pages that could not be validated (404s, 500s, etc.).","title":"Page status chart"},{"location":"validation-charts/#html-issues-chart","text":"This chart shows the average number of HTML errors and warnings per page, over time.","title":"HTML issues chart"},{"location":"validation-charts/#accessibility-issues-chart","text":"This chart shows the average number of accessibility errors and warnings per page, over time.","title":"Accessibility issues chart"},{"location":"api/","text":"Rocket Validator API Welcome to the Rocket Validator API documentation. The Rocket Validator API allows you to manage your reports and integrate them easily in your existing workflows using conventional HTTP requests to a standard JSON API. Refer to the json:api specification for an overview of the conventions we use. Currently the API is on an alpha stage, but you can start using it today. Keep in mind that it is still subject to changes, which will be documented on the changelog. Work in progress! The Rocket Validator API is currently in alpha stage, and subject to changes. API Quick Start To start working with the Rocket Validator, all you need is to sign up for a new account and then generate an API token . Check out the Authorization section to learn how to use this API token to identify your requests. Example Request To retrieve the data you need from Rocket Validator, you just need to perform a standard GET request to the appropiate endpoint. Here are some examples in different programming languages, and below is a cheatsheet on the most common endpoints. Example code cURL curl --request GET \\ --url https://rocketvalidator.dev/api/v0/reports \\ --header 'authorization: Bearer $API_TOKEN' Ruby require 'uri' require 'net/http' require 'openssl' url = URI ( \"https://rocketvalidator.dev/api/v0/reports\" ) http = Net :: HTTP . new ( url . host , url . port ) http . use_ssl = true http . verify_mode = OpenSSL :: SSL :: VERIFY_NONE request = Net :: HTTP :: Get . new ( url ) request [ \"authorization\" ] = 'Bearer $API_TOKEN' response = http . request ( request ) puts response . read_body Ruby Gem # Install the gem from https://rubygems.org/gems/rocketvalidator require 'rocketvalidator' RocketValidator :: V0 :: Resource . with_api_token ( ENV [ \"ROCKET_API_TOKEN\" ] ) do page = 0 reports = RocketValidator :: V0 :: Report . page ( 1 ) . per ( 10 ) . to_a while reports do page = page + 1 puts \" \\n Page #{ page } : #{ reports . length } reports found.\" reports . each do | report | puts ( report . starting_url ) end reports = reports . pages . next end end Python import http.client conn = http . client . HTTPSConnection ( \"rocketvalidator.dev\" ) payload = \"\" headers = { 'authorization' : \"Bearer $API_TOKEN\" } conn . request ( \"GET\" , \"/api/v0/reports\" , payload , headers ) res = conn . getresponse () data = res . read () print ( data . decode ( \"utf-8\" )) PHP <?php $curl = curl_init (); curl_setopt_array ( $curl , array ( CURLOPT_URL => \"https://rocketvalidator.dev/api/v0/reports\" , CURLOPT_RETURNTRANSFER => true , CURLOPT_ENCODING => \"\" , CURLOPT_MAXREDIRS => 10 , CURLOPT_TIMEOUT => 30 , CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1 , CURLOPT_CUSTOMREQUEST => \"GET\" , CURLOPT_POSTFIELDS => \"\" , CURLOPT_HTTPHEADER => array ( \"authorization: Bearer $API_TOKEN \" ), )); $response = curl_exec ( $curl ); $err = curl_error ( $curl ); curl_close ( $curl ); if ( $err ) { echo \"cURL Error #:\" . $err ; } else { echo $response ; } ?> Node.js var http = require ( \"https\" ); var options = { \"method\" : \"GET\" , \"hostname\" : \"rocketvalidator.dev\" , \"port\" : null , \"path\" : \"/api/v0/reports\" , \"headers\" : { \"content-length\" : \"0\" , \"authorization\" : \"Bearer $API_TOKEN\" } }; var req = http . request ( options , function ( res ) { var chunks = []; res . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }); res . on ( \"end\" , function () { var body = Buffer . concat ( chunks ); console . log ( body . toString ()); }); }); req . end (); Java HttpResponse < String > response = Unirest . get ( \"https://rocketvalidator.dev/api/v0/reports\" ) . header ( \"authorization\" , \"Bearer $API_TOKEN\" ) . asString (); Swift import Foundation let headers = [ \"authorization\" : \"Bearer $API_TOKEN\" ] let postData = NSData ( data : \"\" . data ( using : String . Encoding . utf8 ) ! ) let request = NSMutableURLRequest ( url : NSURL ( string : \"https://rocketvalidator.dev/api/v0/reports\" ) ! as URL , cachePolicy : . useProtocolCachePolicy , timeoutInterval : 10.0 ) request . httpMethod = \"GET\" request . allHTTPHeaderFields = headers request . httpBody = postData as Data let session = URLSession . shared let dataTask = session . dataTask ( with : request as URLRequest , completionHandler : { ( data , response , error ) -> Void in if ( error != nil ) { print ( error ) } else { let httpResponse = response as ? HTTPURLResponse print ( httpResponse ) } }) dataTask . resume () Reports Create a Report Send a POST request to /api/v0/reports with a JSON payload including the parameters: starting_url . The initial URL where the Spider will start on. max_pages . The Spider will recursively follow internal links found until this limit is reached. rate_limit . Limit on the number of requests per second. perform_html_checks . Boolean to enable checks using the W3C Validator software on the Web Pages found. perform_a1yy_checks . Boolean to enable checks using Deque Axe Core software on the Web Pages found. Example: POST https://rocketvalidator.dev/api/v0/reports { \"data\" : { \"attributes\" : { \"starting_url\" : \"http://validationhell.com\" , \"max_pages\" : 100 , \"rate_limit\" : 3 , \"perform_html_checks\" : true , \"perform_a11y_checks\" : true } } } List your Reports Send a GET request to /api/v0/reports . Get a Report Send a GET request to /api/v0/reports/$REPORT_ID . Delete a Report Send a DELETE request to /api/v0/reports/$REPORT_ID . Web Pages List the Web Pages on a Report Send a GET request to /api/v0/reports/$REPORT_ID/web_pages . Get a Web Page on a Report Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID . Accessibility Issues List A11Y issues on a Web Page Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues . Get an A11Y issue on a Web Page Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues/$ISSUE_ID . HTML Issues List HTML issues on a Web Page Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues . Get an HTML issue on a Web Page Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues/$ISSUE_ID . Common Accessibility Issues List Common A11Y issues on a Report Send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues . Get a Common A11Y issue on a Report Send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID . Common HTML Issues List Common HTML issues on a Report Send a GET request to /api/v0/reports/$REPORT_ID/common_html_issues . Get a Common HTML issue on a Report Send a GET requet to /api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID . Mutings List your Mutings Send a GET request to /api/v0/mutings . Get a Muting Send a GET request to /api/v0/mutings/$MUTING_ID . Schedules List your Schedules Send a GET request to /api/v0/schedules . Get a Schedule Send a GET request to /api/v0/schedules/$SCHEDULE_ID .","title":"Introduction"},{"location":"api/#rocket-validator-api","text":"Welcome to the Rocket Validator API documentation. The Rocket Validator API allows you to manage your reports and integrate them easily in your existing workflows using conventional HTTP requests to a standard JSON API. Refer to the json:api specification for an overview of the conventions we use. Currently the API is on an alpha stage, but you can start using it today. Keep in mind that it is still subject to changes, which will be documented on the changelog. Work in progress! The Rocket Validator API is currently in alpha stage, and subject to changes.","title":"Rocket Validator API"},{"location":"api/#api-quick-start","text":"To start working with the Rocket Validator, all you need is to sign up for a new account and then generate an API token . Check out the Authorization section to learn how to use this API token to identify your requests.","title":"API Quick Start"},{"location":"api/#example-request","text":"To retrieve the data you need from Rocket Validator, you just need to perform a standard GET request to the appropiate endpoint. Here are some examples in different programming languages, and below is a cheatsheet on the most common endpoints. Example code cURL curl --request GET \\ --url https://rocketvalidator.dev/api/v0/reports \\ --header 'authorization: Bearer $API_TOKEN' Ruby require 'uri' require 'net/http' require 'openssl' url = URI ( \"https://rocketvalidator.dev/api/v0/reports\" ) http = Net :: HTTP . new ( url . host , url . port ) http . use_ssl = true http . verify_mode = OpenSSL :: SSL :: VERIFY_NONE request = Net :: HTTP :: Get . new ( url ) request [ \"authorization\" ] = 'Bearer $API_TOKEN' response = http . request ( request ) puts response . read_body Ruby Gem # Install the gem from https://rubygems.org/gems/rocketvalidator require 'rocketvalidator' RocketValidator :: V0 :: Resource . with_api_token ( ENV [ \"ROCKET_API_TOKEN\" ] ) do page = 0 reports = RocketValidator :: V0 :: Report . page ( 1 ) . per ( 10 ) . to_a while reports do page = page + 1 puts \" \\n Page #{ page } : #{ reports . length } reports found.\" reports . each do | report | puts ( report . starting_url ) end reports = reports . pages . next end end Python import http.client conn = http . client . HTTPSConnection ( \"rocketvalidator.dev\" ) payload = \"\" headers = { 'authorization' : \"Bearer $API_TOKEN\" } conn . request ( \"GET\" , \"/api/v0/reports\" , payload , headers ) res = conn . getresponse () data = res . read () print ( data . decode ( \"utf-8\" )) PHP <?php $curl = curl_init (); curl_setopt_array ( $curl , array ( CURLOPT_URL => \"https://rocketvalidator.dev/api/v0/reports\" , CURLOPT_RETURNTRANSFER => true , CURLOPT_ENCODING => \"\" , CURLOPT_MAXREDIRS => 10 , CURLOPT_TIMEOUT => 30 , CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1 , CURLOPT_CUSTOMREQUEST => \"GET\" , CURLOPT_POSTFIELDS => \"\" , CURLOPT_HTTPHEADER => array ( \"authorization: Bearer $API_TOKEN \" ), )); $response = curl_exec ( $curl ); $err = curl_error ( $curl ); curl_close ( $curl ); if ( $err ) { echo \"cURL Error #:\" . $err ; } else { echo $response ; } ?> Node.js var http = require ( \"https\" ); var options = { \"method\" : \"GET\" , \"hostname\" : \"rocketvalidator.dev\" , \"port\" : null , \"path\" : \"/api/v0/reports\" , \"headers\" : { \"content-length\" : \"0\" , \"authorization\" : \"Bearer $API_TOKEN\" } }; var req = http . request ( options , function ( res ) { var chunks = []; res . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }); res . on ( \"end\" , function () { var body = Buffer . concat ( chunks ); console . log ( body . toString ()); }); }); req . end (); Java HttpResponse < String > response = Unirest . get ( \"https://rocketvalidator.dev/api/v0/reports\" ) . header ( \"authorization\" , \"Bearer $API_TOKEN\" ) . asString (); Swift import Foundation let headers = [ \"authorization\" : \"Bearer $API_TOKEN\" ] let postData = NSData ( data : \"\" . data ( using : String . Encoding . utf8 ) ! ) let request = NSMutableURLRequest ( url : NSURL ( string : \"https://rocketvalidator.dev/api/v0/reports\" ) ! as URL , cachePolicy : . useProtocolCachePolicy , timeoutInterval : 10.0 ) request . httpMethod = \"GET\" request . allHTTPHeaderFields = headers request . httpBody = postData as Data let session = URLSession . shared let dataTask = session . dataTask ( with : request as URLRequest , completionHandler : { ( data , response , error ) -> Void in if ( error != nil ) { print ( error ) } else { let httpResponse = response as ? HTTPURLResponse print ( httpResponse ) } }) dataTask . resume ()","title":"Example Request"},{"location":"api/#reports","text":"","title":"Reports"},{"location":"api/#create-a-report","text":"Send a POST request to /api/v0/reports with a JSON payload including the parameters: starting_url . The initial URL where the Spider will start on. max_pages . The Spider will recursively follow internal links found until this limit is reached. rate_limit . Limit on the number of requests per second. perform_html_checks . Boolean to enable checks using the W3C Validator software on the Web Pages found. perform_a1yy_checks . Boolean to enable checks using Deque Axe Core software on the Web Pages found. Example: POST https://rocketvalidator.dev/api/v0/reports { \"data\" : { \"attributes\" : { \"starting_url\" : \"http://validationhell.com\" , \"max_pages\" : 100 , \"rate_limit\" : 3 , \"perform_html_checks\" : true , \"perform_a11y_checks\" : true } } }","title":"Create a Report"},{"location":"api/#list-your-reports","text":"Send a GET request to /api/v0/reports .","title":"List your Reports"},{"location":"api/#get-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID .","title":"Get a Report"},{"location":"api/#delete-a-report","text":"Send a DELETE request to /api/v0/reports/$REPORT_ID .","title":"Delete a Report"},{"location":"api/#web-pages","text":"","title":"Web Pages"},{"location":"api/#list-the-web-pages-on-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages .","title":"List the Web Pages on a Report"},{"location":"api/#get-a-web-page-on-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID .","title":"Get a Web Page on a Report"},{"location":"api/#accessibility-issues","text":"","title":"Accessibility Issues"},{"location":"api/#list-a11y-issues-on-a-web-page","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues .","title":"List A11Y issues on a Web Page"},{"location":"api/#get-an-a11y-issue-on-a-web-page","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues/$ISSUE_ID .","title":"Get an A11Y issue on a Web Page"},{"location":"api/#html-issues","text":"","title":"HTML Issues"},{"location":"api/#list-html-issues-on-a-web-page","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues .","title":"List HTML issues on a Web Page"},{"location":"api/#get-an-html-issue-on-a-web-page","text":"Send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues/$ISSUE_ID .","title":"Get an HTML issue on a Web Page"},{"location":"api/#common-accessibility-issues","text":"","title":"Common Accessibility Issues"},{"location":"api/#list-common-a11y-issues-on-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues .","title":"List Common A11Y issues on a Report"},{"location":"api/#get-a-common-a11y-issue-on-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID .","title":"Get a Common A11Y issue on a Report"},{"location":"api/#common-html-issues","text":"","title":"Common HTML Issues"},{"location":"api/#list-common-html-issues-on-a-report","text":"Send a GET request to /api/v0/reports/$REPORT_ID/common_html_issues .","title":"List Common HTML issues on a Report"},{"location":"api/#get-a-common-html-issue-on-a-report","text":"Send a GET requet to /api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID .","title":"Get a Common HTML issue on a Report"},{"location":"api/#mutings","text":"","title":"Mutings"},{"location":"api/#list-your-mutings","text":"Send a GET request to /api/v0/mutings .","title":"List your Mutings"},{"location":"api/#get-a-muting","text":"Send a GET request to /api/v0/mutings/$MUTING_ID .","title":"Get a Muting"},{"location":"api/#schedules","text":"","title":"Schedules"},{"location":"api/#list-your-schedules","text":"Send a GET request to /api/v0/schedules .","title":"List your Schedules"},{"location":"api/#get-a-schedule","text":"Send a GET request to /api/v0/schedules/$SCHEDULE_ID .","title":"Get a Schedule"},{"location":"api/a11y_issues/","text":"Accessibility Issues An Accessibility issue corresponds to an issue found on a given web page when being checked by the A11Y checker. Attributes ID Unique ID for this issue. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. URL URL of the document the issue refers to. Typically this is the URL of the related Web Page. HTML Code snippets showing the affected elements. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags List of Accessibility guidelines that relate to this issue. Muted Boolean, whether or not this issue was muted. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated. Relationships Report The Report that this Accessibility Issue belongs to. Web Page The Web Page that this Accessibility Issue belongs to. Muting The Muting applied, if any. Example Example: Accessibility Issue { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=rocketvalidator\" , \"html\" : [ \"<input type=\\\"email\\\" style=\\\"margin-top: 15px;\\\" value=\\\"\\\" name=\\\"EMAIL\\\" class=\\\"email\\\" id=\\\"mce-EMAIL_footer\\\" placeholder=\\\"Your email\\\" required=\\\"\\\">\" , \"<input id=\\\"mce-EMAIL_footer\\\" class=\\\"email\\\" style=\\\"margin-top: 10px; margin-bottom: 10px;\\\" name=\\\"EMAIL\\\" required=\\\"\\\" type=\\\"email\\\" value=\\\"\\\" placeholder=\\\"Your email\\\">\" ], \"id\" : 7657099 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"inserted_at\" : \"2020-04-02T12:44:50\" , \"muted\" : true , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag412\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ], \"updated_at\" : \"2020-04-02T12:44:50\" , \"url\" : \"https://example.com/about\" }, \"id\" : \"7657099\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/mutings/941\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097\" } } }, \"type\" : \"a11y_issue\" } List Accessibility issues on a web page To list the Accessibility issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues { \"data\" : [ { \"attributes\" : { \"help\" : \"Images must have alternate text\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/image-alt?application=rocketvalidator\" , \"html\" : [ \"<img src=\\\"/images/fire.png\\\" align=\\\"absmiddle\\\" width=\\\"30\\\" hspace=\\\"5\\\">\" , \"<img src=\\\"/images/nuke.gif\\\" width=\\\"100%\\\" vspace=\\\"8\\\">\" ], \"id\" : 6843979 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"inserted_at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.text-alternatives\" , \"wcag2a\" , \"wcag111\" , \"section508\" , \"section508.22.a\" ], \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843979\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y_issue\" }, { \"attributes\" : { \"help\" : \"<ul> and <ol> must only directly contain <li>, <script> or <template> elements\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/list?application=rocketvalidator\" , \"html\" : [ \"<ul class=\\\"nav nav-list\\\">\" ], \"id\" : 6843982 , \"impact\" : \"serious\" , \"impact_order\" : 3 , \"inserted_at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.structure\" , \"wcag2a\" , \"wcag131\" ], \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843982\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y_issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues?page[number]=1&page[size]=25\" } }","title":"Accessibility Issues"},{"location":"api/a11y_issues/#accessibility-issues","text":"An Accessibility issue corresponds to an issue found on a given web page when being checked by the A11Y checker.","title":"Accessibility Issues"},{"location":"api/a11y_issues/#attributes","text":"ID Unique ID for this issue. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. URL URL of the document the issue refers to. Typically this is the URL of the related Web Page. HTML Code snippets showing the affected elements. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags List of Accessibility guidelines that relate to this issue. Muted Boolean, whether or not this issue was muted. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated.","title":"Attributes"},{"location":"api/a11y_issues/#relationships","text":"Report The Report that this Accessibility Issue belongs to. Web Page The Web Page that this Accessibility Issue belongs to. Muting The Muting applied, if any.","title":"Relationships"},{"location":"api/a11y_issues/#example","text":"Example: Accessibility Issue { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=rocketvalidator\" , \"html\" : [ \"<input type=\\\"email\\\" style=\\\"margin-top: 15px;\\\" value=\\\"\\\" name=\\\"EMAIL\\\" class=\\\"email\\\" id=\\\"mce-EMAIL_footer\\\" placeholder=\\\"Your email\\\" required=\\\"\\\">\" , \"<input id=\\\"mce-EMAIL_footer\\\" class=\\\"email\\\" style=\\\"margin-top: 10px; margin-bottom: 10px;\\\" name=\\\"EMAIL\\\" required=\\\"\\\" type=\\\"email\\\" value=\\\"\\\" placeholder=\\\"Your email\\\">\" ], \"id\" : 7657099 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"inserted_at\" : \"2020-04-02T12:44:50\" , \"muted\" : true , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag412\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ], \"updated_at\" : \"2020-04-02T12:44:50\" , \"url\" : \"https://example.com/about\" }, \"id\" : \"7657099\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/mutings/941\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097\" } } }, \"type\" : \"a11y_issue\" }","title":"Example"},{"location":"api/a11y_issues/#list-accessibility-issues-on-a-web-page","text":"To list the Accessibility issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues { \"data\" : [ { \"attributes\" : { \"help\" : \"Images must have alternate text\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/image-alt?application=rocketvalidator\" , \"html\" : [ \"<img src=\\\"/images/fire.png\\\" align=\\\"absmiddle\\\" width=\\\"30\\\" hspace=\\\"5\\\">\" , \"<img src=\\\"/images/nuke.gif\\\" width=\\\"100%\\\" vspace=\\\"8\\\">\" ], \"id\" : 6843979 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"inserted_at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.text-alternatives\" , \"wcag2a\" , \"wcag111\" , \"section508\" , \"section508.22.a\" ], \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843979\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y_issue\" }, { \"attributes\" : { \"help\" : \"<ul> and <ol> must only directly contain <li>, <script> or <template> elements\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/list?application=rocketvalidator\" , \"html\" : [ \"<ul class=\\\"nav nav-list\\\">\" ], \"id\" : 6843982 , \"impact\" : \"serious\" , \"impact_order\" : 3 , \"inserted_at\" : \"2020-02-28T13:01:35\" , \"muted\" : false , \"tags\" : [ \"cat.structure\" , \"wcag2a\" , \"wcag131\" ], \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"6843982\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"a11y_issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues?page[number]=1&page[size]=25\" } }","title":"List Accessibility issues on a web page"},{"location":"api/authorization/","text":"Authorization In order to interact with the Rocket Validator API, you must authenticate using an API token. You can generate an API token for your account on the API tokens section. When you do so, you can also define its scope (read-only or write permission). Using the token on an API request you'll get access to the resources on your account. If you ever need to revoke access for a token, just delete it. Keep in mind that an API token works as a complete authentication method, acting as a substitute of your username and password pair. It's important that you keep these tokens secure - on generation, the web interface will only show the token once, it's your responsibility to keep it secure. Once you have a token, you must include a bearer-type Authorization header. Example: authenticating your requests curl --request GET 'https://rocketvalidator.dev/api/v0/reports/' \\ --header 'Authorization: Bearer YOURAPITOKEN' All requests must be made via HTTPS.","title":"Authorization"},{"location":"api/authorization/#authorization","text":"In order to interact with the Rocket Validator API, you must authenticate using an API token. You can generate an API token for your account on the API tokens section. When you do so, you can also define its scope (read-only or write permission). Using the token on an API request you'll get access to the resources on your account. If you ever need to revoke access for a token, just delete it. Keep in mind that an API token works as a complete authentication method, acting as a substitute of your username and password pair. It's important that you keep these tokens secure - on generation, the web interface will only show the token once, it's your responsibility to keep it secure. Once you have a token, you must include a bearer-type Authorization header. Example: authenticating your requests curl --request GET 'https://rocketvalidator.dev/api/v0/reports/' \\ --header 'Authorization: Bearer YOURAPITOKEN' All requests must be made via HTTPS.","title":"Authorization"},{"location":"api/changelog/","text":"Changelog 2020-05-12. Updates Reports section, explaining how to create and delete Reports, and the new checks detail. Updates Schedules section with rename of boolean attributes perform_html_checks and perform_a11y_checks . 2020-05-05. Added Mutings section. 2020-05-04. Upgraded Schedules section, to include Schedule listing, retrieving, and filtering of Reports by Schedule. Add Quick Start section with code examples. 2020-04-12. Added Resources , Common Accessibility Issues , and Common HTML Issues sections. Expand each resource section with description of attributes, relationships, and example. 2020-04-10. Reorganized API guides in separate sections. 2020-04-07. Use underscore instead of dash in keys. 2020-04-06. Changed API tokens URL to api/tokens . 2020-03-13. Moved documentation to docs.rocketvalidator.com. 2020-03-02. Changed API host to rocketvalidator.dev. 2020-02-28. Initial version.","title":"Changelog"},{"location":"api/changelog/#changelog","text":"2020-05-12. Updates Reports section, explaining how to create and delete Reports, and the new checks detail. Updates Schedules section with rename of boolean attributes perform_html_checks and perform_a11y_checks . 2020-05-05. Added Mutings section. 2020-05-04. Upgraded Schedules section, to include Schedule listing, retrieving, and filtering of Reports by Schedule. Add Quick Start section with code examples. 2020-04-12. Added Resources , Common Accessibility Issues , and Common HTML Issues sections. Expand each resource section with description of attributes, relationships, and example. 2020-04-10. Reorganized API guides in separate sections. 2020-04-07. Use underscore instead of dash in keys. 2020-04-06. Changed API tokens URL to api/tokens . 2020-03-13. Moved documentation to docs.rocketvalidator.com. 2020-03-02. Changed API host to rocketvalidator.dev. 2020-02-28. Initial version.","title":"Changelog"},{"location":"api/client-libraries/","text":"Client Libraries The easiest way to make use of the Rocket Validator API is by relying on a client library for your programming language of choice. Ruby gems The official Ruby gem is rocketvalidator and you can install it from Rubygems: https://rubygems.org/gems/rocketvalidator","title":"Client Libraries"},{"location":"api/client-libraries/#client-libraries","text":"The easiest way to make use of the Rocket Validator API is by relying on a client library for your programming language of choice.","title":"Client Libraries"},{"location":"api/client-libraries/#ruby-gems","text":"The official Ruby gem is rocketvalidator and you can install it from Rubygems: https://rubygems.org/gems/rocketvalidator","title":"Ruby gems"},{"location":"api/common_a11y_issues/","text":"Common Accessibility Issues Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"Form elements must have labels\" may affect many Web Pages on the same report. A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages. Attributes ID Unique ID for this issue. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. How Many Total times this issue has been found in the web pages for the report. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags List of Accessibility guidelines that relate to this issue. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated. Relationships Web Pages The list of Web Pages affected by this issue. Example Example: Common Accessibility Issue { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=axeAPI\" , \"how_many\" : 50 , \"id\" : 7657066 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7657066\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages?filter[common_a11y_issue_id]=7657066\" } } }, \"type\" : \"common_a11y_issue\" } List Common A11Y Issues on a Report To list the Common Accessibility issues found on a report, send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_a11y_issues { \"data\" : [{ \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=axeAPI\" , \"how_many\" : 10 , \"id\" : 7718009 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"report_id\" : \"e4cc1\" , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7718009\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009\" } } }, \"type\" : \"common_a11y_issue\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=11&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=1&page[size]=1\" } } Retrieve a Common Accessibility Issue To retrieve a Common HTML Issue on a given Report, send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID { \"data\" : { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.1/label?application=axeAPI\" , \"how_many\" : 10 , \"id\" : 7718009 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"report_id\" : \"e4cc1\" , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7718009\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009\" } } }, \"type\" : \"common_a11y_issue\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } List the Web Pages affected by a Common A11Y Issue To list the Web Pages that are affected by a given issue, send a GET request to /api/v0/reports/$REPORT_ID/web_pages?filter[common_a11y_issue_id]=$COMMON_A11Y_ISSUE_ID . This will list the Web Pages of the Report, filtering them to include only the ones affected by the issue. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages?filter[common_a11y_issue_id]=$COMMON_A11Y_ISSUE_ID { \"data\" : [{ \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 81 }, \"id\" : 2902447 , \"inserted_at\" : \"2020-04-02T12:48:54\" , \"linked_from\" : \"https://thekidshouldseethis.com/\" , \"updated_at\" : \"2020-04-02T12:49:02\" , \"url\" : \"https://thekidshouldseethis.com/\" }, \"id\" : \"2902447\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1\" } } }, \"type\" : \"web_page\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=10&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=1&page[size]=1\" } }","title":"Common Accessibility Issues"},{"location":"api/common_a11y_issues/#common-accessibility-issues","text":"Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"Form elements must have labels\" may affect many Web Pages on the same report. A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.","title":"Common Accessibility Issues"},{"location":"api/common_a11y_issues/#attributes","text":"ID Unique ID for this issue. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. How Many Total times this issue has been found in the web pages for the report. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags List of Accessibility guidelines that relate to this issue. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated.","title":"Attributes"},{"location":"api/common_a11y_issues/#relationships","text":"Web Pages The list of Web Pages affected by this issue.","title":"Relationships"},{"location":"api/common_a11y_issues/#example","text":"Example: Common Accessibility Issue { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=axeAPI\" , \"how_many\" : 50 , \"id\" : 7657066 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7657066\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages?filter[common_a11y_issue_id]=7657066\" } } }, \"type\" : \"common_a11y_issue\" }","title":"Example"},{"location":"api/common_a11y_issues/#list-common-a11y-issues-on-a-report","text":"To list the Common Accessibility issues found on a report, send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_a11y_issues { \"data\" : [{ \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.5/label?application=axeAPI\" , \"how_many\" : 10 , \"id\" : 7718009 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"report_id\" : \"e4cc1\" , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7718009\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009\" } } }, \"type\" : \"common_a11y_issue\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=11&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_a11y_issues?page[number]=1&page[size]=1\" } }","title":"List Common A11Y Issues on a Report"},{"location":"api/common_a11y_issues/#retrieve-a-common-accessibility-issue","text":"To retrieve a Common HTML Issue on a given Report, send a GET request to /api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID { \"data\" : { \"attributes\" : { \"help\" : \"Form elements must have labels\" , \"help_url\" : \"https://dequeuniversity.com/rules/axe/3.1/label?application=axeAPI\" , \"how_many\" : 10 , \"id\" : 7718009 , \"impact\" : \"critical\" , \"impact_order\" : 4 , \"report_id\" : \"e4cc1\" , \"tags\" : [ \"cat.forms\" , \"wcag2a\" , \"wcag332\" , \"wcag131\" , \"section508\" , \"section508.22.n\" ] }, \"id\" : \"7718009\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009\" } } }, \"type\" : \"common_a11y_issue\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Common Accessibility Issue"},{"location":"api/common_a11y_issues/#list-the-web-pages-affected-by-a-common-a11y-issue","text":"To list the Web Pages that are affected by a given issue, send a GET request to /api/v0/reports/$REPORT_ID/web_pages?filter[common_a11y_issue_id]=$COMMON_A11Y_ISSUE_ID . This will list the Web Pages of the Report, filtering them to include only the ones affected by the issue. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages?filter[common_a11y_issue_id]=$COMMON_A11Y_ISSUE_ID { \"data\" : [{ \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 81 }, \"id\" : 2902447 , \"inserted_at\" : \"2020-04-02T12:48:54\" , \"linked_from\" : \"https://thekidshouldseethis.com/\" , \"updated_at\" : \"2020-04-02T12:49:02\" , \"url\" : \"https://thekidshouldseethis.com/\" }, \"id\" : \"2902447\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1\" } } }, \"type\" : \"web_page\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=10&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_a11y_issue_id]=7718009&page[number]=1&page[size]=1\" } }","title":"List the Web Pages affected by a Common A11Y Issue"},{"location":"api/common_html_issues/","text":"Common HTML Issues Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" may affect many Web Pages on the same report. A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages. Attributes ID Unique ID for this Common HTML issue. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. How Many Total times this issue has been found in the web pages for the report. Relationships Web Pages The list of Web Pages affected by this issue. Example Example: Common HTML Issue { \"attributes\" : { \"how_many\" : 148 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" , }, \"id\" : \"64397631\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages?filter[common_html_issue_id]=64397631\" } } }, \"type\" : \"common_html_issue\" } List Common HTML Issues on a Report To list the Common HTML Issues found on a report, send a GET request to /api/v0/reports/$REPORT_ID/common_html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_html_issues { \"data\" : [{ \"attributes\" : { \"how_many\" : 30 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"Element \u201cstyle\u201d not allowed as child of element \u201cdiv\u201d in this context. (Suppressing further errors from this subtree.)\" , \"report_id\" : \"e4cc1\" }, \"id\" : \"65391912\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912\" } } }, \"type\" : \"common_html_issue\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=89&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=1&page[size]=1\" } } Retrieve a Common HTML Issue To retrieve a Common HTML Issue on a given Report, send a GET requet to /api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID { \"data\" : { \"attributes\" : { \"how_many\" : 30 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"Element \u201cstyle\u201d not allowed as child of element \u201cdiv\u201d in this context. (Suppressing further errors from this subtree.)\" , \"report_id\" : \"e4cc1\" }, \"id\" : \"65391912\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912\" } } }, \"type\" : \"common_html_issue\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } List the Web Pages affected by a Common HTML Issue To list the Web Pages that are affected by a given issue, send a GET request to /api/v0/reports/$REPORT_ID/web_pages?filter[common_html_issue_id]=$COMMON_HTML_ISSUE_ID . This will list the Web Pages of the Report, filtering them to include only the ones affected by the issue. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages?filter[common_html_issue_id]=$COMMON_HTML_ISSUE_ID { \"data\" : [{ \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 81 }, \"id\" : 2902447 , \"inserted_at\" : \"2020-04-02T12:48:54\" , \"linked_from\" : \"https://example.com/\" , \"updated_at\" : \"2020-04-02T12:49:02\" , \"url\" : \"https://example.com/\" }, \"id\" : \"2902447\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1\" } } }, \"type\" : \"web_page\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=5&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=1&page[size]=1\" } }","title":"Common HTML Issues"},{"location":"api/common_html_issues/#common-html-issues","text":"Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" may affect many Web Pages on the same report. A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.","title":"Common HTML Issues"},{"location":"api/common_html_issues/#attributes","text":"ID Unique ID for this Common HTML issue. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. How Many Total times this issue has been found in the web pages for the report.","title":"Attributes"},{"location":"api/common_html_issues/#relationships","text":"Web Pages The list of Web Pages affected by this issue.","title":"Relationships"},{"location":"api/common_html_issues/#example","text":"Example: Common HTML Issue { \"attributes\" : { \"how_many\" : 148 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" , }, \"id\" : \"64397631\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages?filter[common_html_issue_id]=64397631\" } } }, \"type\" : \"common_html_issue\" }","title":"Example"},{"location":"api/common_html_issues/#list-common-html-issues-on-a-report","text":"To list the Common HTML Issues found on a report, send a GET request to /api/v0/reports/$REPORT_ID/common_html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_html_issues { \"data\" : [{ \"attributes\" : { \"how_many\" : 30 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"Element \u201cstyle\u201d not allowed as child of element \u201cdiv\u201d in this context. (Suppressing further errors from this subtree.)\" , \"report_id\" : \"e4cc1\" }, \"id\" : \"65391912\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912\" } } }, \"type\" : \"common_html_issue\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=89&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/common_html_issues?page[number]=1&page[size]=1\" } }","title":"List Common HTML Issues on a Report"},{"location":"api/common_html_issues/#retrieve-a-common-html-issue","text":"To retrieve a Common HTML Issue on a given Report, send a GET requet to /api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID { \"data\" : { \"attributes\" : { \"how_many\" : 30 , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"Element \u201cstyle\u201d not allowed as child of element \u201cdiv\u201d in this context. (Suppressing further errors from this subtree.)\" , \"report_id\" : \"e4cc1\" }, \"id\" : \"65391912\" , \"relationships\" : { \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912\" } } }, \"type\" : \"common_html_issue\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Common HTML Issue"},{"location":"api/common_html_issues/#list-the-web-pages-affected-by-a-common-html-issue","text":"To list the Web Pages that are affected by a given issue, send a GET request to /api/v0/reports/$REPORT_ID/web_pages?filter[common_html_issue_id]=$COMMON_HTML_ISSUE_ID . This will list the Web Pages of the Report, filtering them to include only the ones affected by the issue. Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages?filter[common_html_issue_id]=$COMMON_HTML_ISSUE_ID { \"data\" : [{ \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 81 }, \"id\" : 2902447 , \"inserted_at\" : \"2020-04-02T12:48:54\" , \"linked_from\" : \"https://example.com/\" , \"updated_at\" : \"2020-04-02T12:49:02\" , \"url\" : \"https://example.com/\" }, \"id\" : \"2902447\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages/2902447/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1\" } } }, \"type\" : \"web_page\" }], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=5&page[size]=1\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=2&page[size]=1\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/e4cc1/web_pages?filter[common_html_issue_id]=65391912&page[number]=1&page[size]=1\" } }","title":"List the Web Pages affected by a Common HTML Issue"},{"location":"api/html_issues/","text":"HTML Issues An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator. Attributes ID Unique ID for this HTML issue. Coordinates Where in the document the HTML issue was found. Indicates first and last line, first and last column, and the highlighted code as start and length. Extract Snippet showing the affected HTML code. Use the highlight coordinates to determine the exact portion affected by the issue. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. Muted Boolean, whether or not this issue was muted. Inserted At Timestamp when the HTML Issue was created. Updated At Timestamp when the HTML Issue was last updated. Relationships Report The Report that this HTML Issue belongs to. Web Page The Web Page that this HTML Issue belongs to. Muting The Muting applied, if any. Example Example: HTML Issue { \"attributes\" : { \"coordinates\" : { \"first_column\" : 150 , \"first_line\" : 8 , \"hilite_length\" : 4 , \"hilite_start\" : 10 , \"last_column\" : 153 , \"last_line\" : 8 }, \"extract\" : \"none;left:none;right\" , \"id\" : 64398238 , \"inserted_at\" : \"2020-04-02T12:44:45\" , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"CSS: \u201cleft\u201d: \u201cnone\u201d is not a \u201cleft\u201d value.\" , \"muted\" : true , \"updated_at\" : \"2020-04-02T12:44:45\" }, \"id\" : \"64398238\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/mutings/941\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097\" } } }, \"type\" : \"html_issue\" } List HTML issues on a web page To list the HTML issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues { \"data\" : [ { \"attributes\" : { \"coordinates\" : { \"first_column\" : 1 , \"first_line\" : 1 , \"hilite_length\" : 109 , \"hilite_start\" : 0 , \"last_column\" : 109 , \"last_line\" : 1 }, \"extract\" : \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html\" , \"id\" : 59734815 , \"inserted_at\" : \"2020-02-28T13:01:34\" , \"message\" : \"Obsolete doctype. Expected \u201c<!DOCTYPE html>\u201d.\" , \"muted\" : false , \"sub_type\" : null , \"type\" : \"error\" , \"updated_at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734815\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html_issue\" }, { \"attributes\" : { \"coordinates\" : { \"first_column\" : 17 , \"first_line\" : 21 , \"hilite_length\" : 3 , \"hilite_start\" : 10 , \"last_column\" : 19 , \"last_line\" : 21 }, \"extract\" : \" pading: 4px;\\n \" , \"id\" : 59734817 , \"inserted_at\" : \"2020-02-28T13:01:34\" , \"message\" : \"CSS: \u201cpading\u201d: Property \u201cpading\u201d doesn't exist.\" , \"muted\" : false , \"sub_type\" : null , \"type\" : \"error\" , \"updated_at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734817\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html_issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues?page[number]=1&page[size]=25\" } }","title":"HTML Issues"},{"location":"api/html_issues/#html-issues","text":"An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator.","title":"HTML Issues"},{"location":"api/html_issues/#attributes","text":"ID Unique ID for this HTML issue. Coordinates Where in the document the HTML issue was found. Indicates first and last line, first and last column, and the highlighted code as start and length. Extract Snippet showing the affected HTML code. Use the highlight coordinates to determine the exact portion affected by the issue. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. Muted Boolean, whether or not this issue was muted. Inserted At Timestamp when the HTML Issue was created. Updated At Timestamp when the HTML Issue was last updated.","title":"Attributes"},{"location":"api/html_issues/#relationships","text":"Report The Report that this HTML Issue belongs to. Web Page The Web Page that this HTML Issue belongs to. Muting The Muting applied, if any.","title":"Relationships"},{"location":"api/html_issues/#example","text":"Example: HTML Issue { \"attributes\" : { \"coordinates\" : { \"first_column\" : 150 , \"first_line\" : 8 , \"hilite_length\" : 4 , \"hilite_start\" : 10 , \"last_column\" : 153 , \"last_line\" : 8 }, \"extract\" : \"none;left:none;right\" , \"id\" : 64398238 , \"inserted_at\" : \"2020-04-02T12:44:45\" , \"issue_sub_type\" : null , \"issue_type\" : \"error\" , \"message\" : \"CSS: \u201cleft\u201d: \u201cnone\u201d is not a \u201cleft\u201d value.\" , \"muted\" : true , \"updated_at\" : \"2020-04-02T12:44:45\" }, \"id\" : \"64398238\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/mutings/941\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097\" } } }, \"type\" : \"html_issue\" }","title":"Example"},{"location":"api/html_issues/#list-html-issues-on-a-web-page","text":"To list the HTML issues found on a web page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues { \"data\" : [ { \"attributes\" : { \"coordinates\" : { \"first_column\" : 1 , \"first_line\" : 1 , \"hilite_length\" : 109 , \"hilite_start\" : 0 , \"last_column\" : 109 , \"last_line\" : 1 }, \"extract\" : \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html\" , \"id\" : 59734815 , \"inserted_at\" : \"2020-02-28T13:01:34\" , \"message\" : \"Obsolete doctype. Expected \u201c<!DOCTYPE html>\u201d.\" , \"muted\" : false , \"sub_type\" : null , \"type\" : \"error\" , \"updated_at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734815\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html_issue\" }, { \"attributes\" : { \"coordinates\" : { \"first_column\" : 17 , \"first_line\" : 21 , \"hilite_length\" : 3 , \"hilite_start\" : 10 , \"last_column\" : 19 , \"last_line\" : 21 }, \"extract\" : \" pading: 4px;\\n \" , \"id\" : 59734817 , \"inserted_at\" : \"2020-02-28T13:01:34\" , \"message\" : \"CSS: \u201cpading\u201d: Property \u201cpading\u201d doesn't exist.\" , \"muted\" : false , \"sub_type\" : null , \"type\" : \"error\" , \"updated_at\" : \"2020-02-28T13:01:34\" }, \"id\" : \"59734817\" , \"relationships\" : { \"muting\" : { \"links\" : { \"related\" : null } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } }, \"web_page\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472\" } } }, \"type\" : \"html_issue\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues?page[number]=1&page[size]=25\" } }","title":"List HTML issues on a web page"},{"location":"api/mutings/","text":"Mutings A Muting represents a rule you've defined to automatically mute certain issues on your reports. Read more about Muting Rules . Think of a Muting as a rule that defines a matching URL and issue message - when Rocket Validator finds issues on your web pages, they'll be automatically muted if there's a match. Attributes ID Unique Muting ID. URL Match A string containing a match for a URL. It can be a full URL or any substring within it. Message Match A string defining a match for a Issue. It can be a full issue message, or part of it. Comment A brief comment to publicly explain why this muting is needed. Example Example: Muting structure { \"attributes\" : { \"comment\" : \"Non standard but it's a Safari extension\" , \"id\" : 868 , \"message_match\" : \"Attribute \u201cautocorrect\u201d not allowed on element \u201cinput\u201d at this point.\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"868\" , \"type\" : \"muting\" } List your Mutings To list all your Mutings in your account, send a GET request to /api/v0/mutings . Example: GET https://rocketvalidator.dev/api/v0/schedules { \"data\" : [ { \"attributes\" : { \"comment\" : \"Non standard but needed for Safari mobile.\" , \"id\" : 867 , \"message_match\" : \"Attribute \u201cautocomplete\u201d is only allowed when the input type is\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"867\" , \"type\" : \"muting\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/mutings?page[number]=1&page[size]=25\" } } Retrieve a Muting To retrieve an individual Muting in your account, send a GET request to /api/v0/mutings/$MUTING_ID . Example: GET https://rocketvalidator.dev/api/v0/mutings/$MUTING_ID { \"data\" : { \"attributes\" : { \"comment\" : \"Non standard but needed for Safari mobile.\" , \"id\" : 867 , \"message_match\" : \"Attribute \u201cautocomplete\u201d is only allowed when the input type is\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"867\" , \"type\" : \"muting\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Mutings"},{"location":"api/mutings/#mutings","text":"A Muting represents a rule you've defined to automatically mute certain issues on your reports. Read more about Muting Rules . Think of a Muting as a rule that defines a matching URL and issue message - when Rocket Validator finds issues on your web pages, they'll be automatically muted if there's a match.","title":"Mutings"},{"location":"api/mutings/#attributes","text":"ID Unique Muting ID. URL Match A string containing a match for a URL. It can be a full URL or any substring within it. Message Match A string defining a match for a Issue. It can be a full issue message, or part of it. Comment A brief comment to publicly explain why this muting is needed.","title":"Attributes"},{"location":"api/mutings/#example","text":"Example: Muting structure { \"attributes\" : { \"comment\" : \"Non standard but it's a Safari extension\" , \"id\" : 868 , \"message_match\" : \"Attribute \u201cautocorrect\u201d not allowed on element \u201cinput\u201d at this point.\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"868\" , \"type\" : \"muting\" }","title":"Example"},{"location":"api/mutings/#list-your-mutings","text":"To list all your Mutings in your account, send a GET request to /api/v0/mutings . Example: GET https://rocketvalidator.dev/api/v0/schedules { \"data\" : [ { \"attributes\" : { \"comment\" : \"Non standard but needed for Safari mobile.\" , \"id\" : 867 , \"message_match\" : \"Attribute \u201cautocomplete\u201d is only allowed when the input type is\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"867\" , \"type\" : \"muting\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/mutings?page[number]=1&page[size]=25\" } }","title":"List your Mutings"},{"location":"api/mutings/#retrieve-a-muting","text":"To retrieve an individual Muting in your account, send a GET request to /api/v0/mutings/$MUTING_ID . Example: GET https://rocketvalidator.dev/api/v0/mutings/$MUTING_ID { \"data\" : { \"attributes\" : { \"comment\" : \"Non standard but needed for Safari mobile.\" , \"id\" : 867 , \"message_match\" : \"Attribute \u201cautocomplete\u201d is only allowed when the input type is\" , \"url_match\" : \"http://validationhell.com/\" }, \"id\" : \"867\" , \"type\" : \"muting\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Muting"},{"location":"api/pagination/","text":"Pagination When the list of entities returned by a request is paginated, a links key will be included on the JSON response body with links to the first , last , next , prev and self pages. Pagination is controlled using the following parameters: page[number] What page to retrieve. page[size] Number of entries per page. Defaults to 25, minimum is 1, maximum is 100. Example: Getting the 3rd page of the reports list, with 10 reports per page curl --request GET 'https://rocketvalidator.dev/api/v0/reports/?page[number]=3&page[size]=10'","title":"Pagination"},{"location":"api/pagination/#pagination","text":"When the list of entities returned by a request is paginated, a links key will be included on the JSON response body with links to the first , last , next , prev and self pages. Pagination is controlled using the following parameters: page[number] What page to retrieve. page[size] Number of entries per page. Defaults to 25, minimum is 1, maximum is 100. Example: Getting the 3rd page of the reports list, with 10 reports per page curl --request GET 'https://rocketvalidator.dev/api/v0/reports/?page[number]=3&page[size]=10'","title":"Pagination"},{"location":"api/reports/","text":"Reports A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found. Attributes ID Unique report ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then recursively include the linked web pages from those, until the Max Pages limit is reached. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Num Pages Actual number of web pages included in the report found by the Spider. Rate Limit Maximum allowed requests per second. Perform HTML Checks Boolean to indicate whether or not HTML checks will be included. Perform A11Y Checks Boolean to indicate whether or not accessibility checks will be included. Checks Details for the checks enabled for this report. HTML Details for the HTML checks, if enabled ( null otherwise). Status HTML checks status, showing the number of checks pending , checked and failed . Issues Counters for the number of HTML errors, warnings, muted errors and muted warnings. This sums the number of HTML issues on the web pages for a particular report. A11Y Details for the Accessibility checks, if enabled ( null otherwise). Status Accessibility checks status, showing the number of checks pending , checked and failed . Issues Counters for the number of Accessibility errors, warnings, muted errors and muted warnings. This sums the number of Accessibility issues on the web pages for a particular report. Inserted At Timestamp when the report was created. Updated At Timestamp when the report was last updated. Relationships Web Pages The list of web pages found by the Spider for that report. Common A11Y issues The accessibility issues found on the web pages for that report, if any, grouped together by their kind. Common HTML issues The HTML issues found on the web pages for that report, if any, grouped together by their kind. Schedule The Scheduled Report that initiated this Report, if any. Example Example: Report example { \"data\" : { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } Create a Report To create a Report, send a POST request to /api/v0/reports , with a JSON payload in the body including the attributes: starting_url . The initial URL where the Spider will start on. max_pages . The Spider will recursively follow internal links found until this limit is reached. rate_limit . Limit on the number of requests per second. perform_html_checks . Boolean to enable checks using the W3C Validator software on the Web Pages found. perform_a1yy_checks . Boolean to enable checks using Deque Axe Core software on the Web Pages found. The next example shows how to form the body payload with the Report attributes. Example: POST https://rocketvalidator.dev/api/v0/reports { \"data\" : { \"attributes\" : { \"starting_url\" : \"http://validationhell.com\" , \"max_pages\" : 100 , \"rate_limit\" : 3 , \"perform_html_checks\" : true , \"perform_a11y_checks\" : true } } } Rocket Validator will return the created Report with a status of a 201 Created , and will start scanning the Web Pages found. You can then refresh the Report by its ID (see Retrieve a Report ) to check the progress of the Report, including the checks status, pending count and issues found. If the Report can't be created, a 422 Unprocessable Entity status will be returned, containing details about the the errors found. Example: POST https://rocketvalidator.dev/api/v0/reports { \"errors\" : [{ \"detail\" : \"Starting url has invalid format\" , \"source\" : { \"pointer\" : \"/data/attributes/starting_url\" }, \"title\" : \"has invalid format\" }], \"jsonapi\" : { \"version\" : \"1.0\" } } Retrieve a Report To show an individual Report, send a GET request to /api/v0/reports/$REPORT_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID { \"data\" : { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } List your Reports To list all Reports in your account, send a GET request to /api/v0/reports . Example: GET https://rocketvalidator.dev/api/v0/reports/ { \"data\" : [ { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=50&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=1&page[size]=25\" } } Delete a Report To delete an individual Report from your account, send a DELETE request to /api/v0/reports/$REPORT_ID . Example: DELETE https://rocketvalidator.dev/api/v0/reports/$REPORT_ID 204 No Content","title":"Reports"},{"location":"api/reports/#reports","text":"A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found.","title":"Reports"},{"location":"api/reports/#attributes","text":"ID Unique report ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then recursively include the linked web pages from those, until the Max Pages limit is reached. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Num Pages Actual number of web pages included in the report found by the Spider. Rate Limit Maximum allowed requests per second. Perform HTML Checks Boolean to indicate whether or not HTML checks will be included. Perform A11Y Checks Boolean to indicate whether or not accessibility checks will be included. Checks Details for the checks enabled for this report. HTML Details for the HTML checks, if enabled ( null otherwise). Status HTML checks status, showing the number of checks pending , checked and failed . Issues Counters for the number of HTML errors, warnings, muted errors and muted warnings. This sums the number of HTML issues on the web pages for a particular report. A11Y Details for the Accessibility checks, if enabled ( null otherwise). Status Accessibility checks status, showing the number of checks pending , checked and failed . Issues Counters for the number of Accessibility errors, warnings, muted errors and muted warnings. This sums the number of Accessibility issues on the web pages for a particular report. Inserted At Timestamp when the report was created. Updated At Timestamp when the report was last updated.","title":"Attributes"},{"location":"api/reports/#relationships","text":"Web Pages The list of web pages found by the Spider for that report. Common A11Y issues The accessibility issues found on the web pages for that report, if any, grouped together by their kind. Common HTML issues The HTML issues found on the web pages for that report, if any, grouped together by their kind. Schedule The Scheduled Report that initiated this Report, if any.","title":"Relationships"},{"location":"api/reports/#example","text":"Example: Report example { \"data\" : { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Example"},{"location":"api/reports/#create-a-report","text":"To create a Report, send a POST request to /api/v0/reports , with a JSON payload in the body including the attributes: starting_url . The initial URL where the Spider will start on. max_pages . The Spider will recursively follow internal links found until this limit is reached. rate_limit . Limit on the number of requests per second. perform_html_checks . Boolean to enable checks using the W3C Validator software on the Web Pages found. perform_a1yy_checks . Boolean to enable checks using Deque Axe Core software on the Web Pages found. The next example shows how to form the body payload with the Report attributes. Example: POST https://rocketvalidator.dev/api/v0/reports { \"data\" : { \"attributes\" : { \"starting_url\" : \"http://validationhell.com\" , \"max_pages\" : 100 , \"rate_limit\" : 3 , \"perform_html_checks\" : true , \"perform_a11y_checks\" : true } } } Rocket Validator will return the created Report with a status of a 201 Created , and will start scanning the Web Pages found. You can then refresh the Report by its ID (see Retrieve a Report ) to check the progress of the Report, including the checks status, pending count and issues found. If the Report can't be created, a 422 Unprocessable Entity status will be returned, containing details about the the errors found. Example: POST https://rocketvalidator.dev/api/v0/reports { \"errors\" : [{ \"detail\" : \"Starting url has invalid format\" , \"source\" : { \"pointer\" : \"/data/attributes/starting_url\" }, \"title\" : \"has invalid format\" }], \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Create a Report"},{"location":"api/reports/#retrieve-a-report","text":"To show an individual Report, send a GET request to /api/v0/reports/$REPORT_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID { \"data\" : { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Report"},{"location":"api/reports/#list-your-reports","text":"To list all Reports in your account, send a GET request to /api/v0/reports . Example: GET https://rocketvalidator.dev/api/v0/reports/ { \"data\" : [ { \"attributes\" : { \"checks\" : { \"a11y\" : { \"issues\" : { \"errors\" : 60 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 0 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } }, \"html\" : { \"issues\" : { \"errors\" : 157 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 20 }, \"status\" : { \"checked\" : 10 , \"failed\" : 0 , \"pending\" : 0 } } }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"inserted_at\" : \"2020-05-12T17:09:43\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-05-12T17:09:43\" }, \"id\" : \"850e9a7c-66d6-4178-ae15-9abb49fc0b38\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : null } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/850e9a7c-66d6-4178-ae15-9abb49fc0b38/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=50&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/reports/?page[number]=1&page[size]=25\" } }","title":"List your Reports"},{"location":"api/reports/#delete-a-report","text":"To delete an individual Report from your account, send a DELETE request to /api/v0/reports/$REPORT_ID . Example: DELETE https://rocketvalidator.dev/api/v0/reports/$REPORT_ID 204 No Content","title":"Delete a Report"},{"location":"api/resources/","text":"Resources For a better understanding of the Rocket Validator API, a brief description of the resources you can manage is in order. Report A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found. Web Page A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report. Accessibility Issue An Accessibility Issue corresponds to an issue found on a given web page when being checked by the A11Y checker. HTML Issue An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator. Common Accessibility Issue Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"Form elements must have labels\" may affect many Web Pages on the same report. A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages. Common HTML Issue Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" may affect many Web Pages on the same report. A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages. Schedule A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received. Think of a Scheduled Report as a regular Report , that can be set to run automatically on a defined schedule or via deploy hooks .","title":"Resources"},{"location":"api/resources/#resources","text":"For a better understanding of the Rocket Validator API, a brief description of the resources you can manage is in order.","title":"Resources"},{"location":"api/resources/#report","text":"A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found.","title":"Report"},{"location":"api/resources/#web-page","text":"A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report.","title":"Web Page"},{"location":"api/resources/#accessibility-issue","text":"An Accessibility Issue corresponds to an issue found on a given web page when being checked by the A11Y checker.","title":"Accessibility Issue"},{"location":"api/resources/#html-issue","text":"An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator.","title":"HTML Issue"},{"location":"api/resources/#common-accessibility-issue","text":"Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"Form elements must have labels\" may affect many Web Pages on the same report. A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.","title":"Common Accessibility Issue"},{"location":"api/resources/#common-html-issue","text":"Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue \"The \u201ccenter\u201d element is obsolete. Use CSS instead.\" may affect many Web Pages on the same report. A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.","title":"Common HTML Issue"},{"location":"api/resources/#schedule","text":"A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received. Think of a Scheduled Report as a regular Report , that can be set to run automatically on a defined schedule or via deploy hooks .","title":"Schedule"},{"location":"api/schedules/","text":"Schedules A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received. Think of a Scheduled Report as a regular Report , that can be set to run automatically on a defined schedule or via deploy hooks . Attributes ID Unique schedule ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then recursively include the linked web pages from those, until the Max Pages limit is reached. Perform A11Y Checks Boolean to indicate whether or not accessibility checks will be included. Perform HTML Checks Boolean to indicate whether or not HTML checks will be included. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Periodicity Shows when the schedule will be run, using the keys every , which can be one of day / week / month . If week is used, then weekday will indicate the week day the schedule is run. If month is used, the field monthday will give the details for the day of the month the schedule will be run on. If this field is null , the schedule will never be run, except through deploy hooks. Rate Limit Maximum allowed requests per second. Active Boolean to enable or disable the schedule. Only active ones will be run. Inserted At Timestamp when the schedule was created. Updated At Timestamp when the schedule was last updated. Last Fired At Timestamp when the schedule was last run. Example Example: Schedule example { \"data\" : { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"d2e1f\" , \"inserted_at\" : \"2020-02-28T13:01:23\" , \"last_fired_at\" : \"2020-02-28T13:01:30\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 15 }, \"rate_limit\" : 5 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"d2e1f\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=d2e1f\" } } }, \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } List your Schedules To list all Schedules in your account, send a GET request to /api/v0/schedules . Example: GET https://rocketvalidator.dev/api/v0/schedules { \"data\" : [ { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"9c55\" , \"inserted_at\" : \"2019-02-05T13:13:29\" , \"last_fired_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 23 }, \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com\" , \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"9c55\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c55\" } } }, \"type\" : \"schedule\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=7&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=1&page[size]=25\" } } Retrieve a Schedule To retrieve an individual Schedule in your account, send a GET request to /api/v0/schedules/$SCHEDULE_ID . Example: GET https://rocketvalidator.dev/api/v0/schedules/$SCHEDULE_ID { \"data\" : { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"9c55\" , \"inserted_at\" : \"2019-02-05T13:13:29\" , \"last_fired_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 23 }, \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com\" , \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"9c55\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c55\" } } }, \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } } Filter Reports by Schedule To list all the Reports in your account that have been run via a given Schedule, send a GET request /api/v0/reports?filter[schedule_id]=$SCHEDULE_ID . This will list your Reports, filtered by that schedule id. Example: GET https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=$SCHEDULE_ID { \"data\" : [ { \"attributes\" : { \"id\" : \"ce472\" , \"inserted_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"total_a11y_issues\" : { \"errors\" : 38 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 3 }, \"total_html_issues\" : { \"errors\" : 649 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 434 }, \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"ce472\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/schedules/9c552164-1ea6-4664-96c4-7b8f48476d83\" } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c552164-1ea6-4664-96c4-7b8f48476d83&page[number]=1&page[size]=25\" } }","title":"Schedules"},{"location":"api/schedules/#schedules","text":"A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received. Think of a Scheduled Report as a regular Report , that can be set to run automatically on a defined schedule or via deploy hooks .","title":"Schedules"},{"location":"api/schedules/#attributes","text":"ID Unique schedule ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then recursively include the linked web pages from those, until the Max Pages limit is reached. Perform A11Y Checks Boolean to indicate whether or not accessibility checks will be included. Perform HTML Checks Boolean to indicate whether or not HTML checks will be included. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Periodicity Shows when the schedule will be run, using the keys every , which can be one of day / week / month . If week is used, then weekday will indicate the week day the schedule is run. If month is used, the field monthday will give the details for the day of the month the schedule will be run on. If this field is null , the schedule will never be run, except through deploy hooks. Rate Limit Maximum allowed requests per second. Active Boolean to enable or disable the schedule. Only active ones will be run. Inserted At Timestamp when the schedule was created. Updated At Timestamp when the schedule was last updated. Last Fired At Timestamp when the schedule was last run.","title":"Attributes"},{"location":"api/schedules/#example","text":"Example: Schedule example { \"data\" : { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"d2e1f\" , \"inserted_at\" : \"2020-02-28T13:01:23\" , \"last_fired_at\" : \"2020-02-28T13:01:30\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 15 }, \"rate_limit\" : 5 , \"starting_url\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:30\" }, \"id\" : \"d2e1f\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=d2e1f\" } } }, \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Example"},{"location":"api/schedules/#list-your-schedules","text":"To list all Schedules in your account, send a GET request to /api/v0/schedules . Example: GET https://rocketvalidator.dev/api/v0/schedules { \"data\" : [ { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"9c55\" , \"inserted_at\" : \"2019-02-05T13:13:29\" , \"last_fired_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 23 }, \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com\" , \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"9c55\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c55\" } } }, \"type\" : \"schedule\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"last\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=7&page[size]=25\" , \"next\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=2&page[size]=25\" , \"self\" : \"https://rocketvalidator.dev/api/v0/schedules?page[number]=1&page[size]=25\" } }","title":"List your Schedules"},{"location":"api/schedules/#retrieve-a-schedule","text":"To retrieve an individual Schedule in your account, send a GET request to /api/v0/schedules/$SCHEDULE_ID . Example: GET https://rocketvalidator.dev/api/v0/schedules/$SCHEDULE_ID { \"data\" : { \"attributes\" : { \"active\" : true , \"perform_a11y_checks\" : true , \"perform_html_checks\" : true , \"id\" : \"9c55\" , \"inserted_at\" : \"2019-02-05T13:13:29\" , \"last_fired_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"periodicity\" : { \"every\" : \"month\" , \"monthday\" : 23 }, \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com\" , \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"9c55\" , \"relationships\" : { \"reports\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c55\" } } }, \"type\" : \"schedule\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Schedule"},{"location":"api/schedules/#filter-reports-by-schedule","text":"To list all the Reports in your account that have been run via a given Schedule, send a GET request /api/v0/reports?filter[schedule_id]=$SCHEDULE_ID . This will list your Reports, filtered by that schedule id. Example: GET https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=$SCHEDULE_ID { \"data\" : [ { \"attributes\" : { \"id\" : \"ce472\" , \"inserted_at\" : \"2020-04-28T12:02:57\" , \"max_pages\" : 10 , \"num_pages\" : 10 , \"rate_limit\" : 3 , \"starting_url\" : \"http://validationhell.com/\" , \"total_a11y_issues\" : { \"errors\" : 38 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 3 }, \"total_html_issues\" : { \"errors\" : 649 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"warnings\" : 434 }, \"updated_at\" : \"2020-04-28T12:02:57\" }, \"id\" : \"ce472\" , \"relationships\" : { \"common_a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/common_a11y_issues\" } }, \"common_html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/common_html_issues\" } }, \"schedule\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/schedules/9c552164-1ea6-4664-96c4-7b8f48476d83\" } }, \"web_pages\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/ce472/web_pages\" } } }, \"type\" : \"report\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports?filter[schedule_id]=9c552164-1ea6-4664-96c4-7b8f48476d83&page[number]=1&page[size]=25\" } }","title":"Filter Reports by Schedule"},{"location":"api/web_pages/","text":"Web Pages A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report. Attributes ID Unique ID for the Web Page. URL URL of the Web Page. Linked From URL of the web page that links to this web page. That is, where the Spider found first about this Web Page. HTML Check Holds the result of the HTML check on that web page, if it was enabled. Includes keys for the number of errors, warnings, muted errors and muted warnings, and the status of the check. A11y Check Holds the result of the accessibility check on that web page, if it was enabled. Includes keys for the number of errors, warnings, muted errors and muted warnings, and the status of the check. Inserted At Timestamp when the web page was created. Updated At Timestamp when the web page was last updated. Relationships Report The Report that this Web Page belongs to. HTML issues The HTML issues found on this Web Page, if the HTML check was enabled. A11Y issues The accessibility issues found on this Web Page, if the accessibility check was enabled. Example Example: Web Page example { \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 78 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 86 }, \"id\" : 2884097 , \"inserted_at\" : \"2020-04-02T12:44:43\" , \"linked_from\" : \"https://example.com/\" , \"updated_at\" : \"2020-04-02T12:44:50\" , \"url\" : \"https://example.com/about\" }, \"id\" : \"2884097\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } } }, \"type\" : \"web_page\" } List Web Pages on a Report To list the web pages on a Report, send a GET request to /api/v0/reports/$REPORT_ID/web_pages . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages { \"data\" : [ { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted_at\" : \"2020-02-28T13:01:32\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" }, { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 16 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 473 , \"inserted_at\" : \"2020-02-28T13:01:33\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:36\" , \"url\" : \"http://validationhell.com/pages/agent\" }, \"id\" : \"473\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages?page[number]=1&page[size]=25\" } } Retrieve a Web Page To show an individual Web Page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID { \"data\" : { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted_at\" : \"2020-02-28T13:01:32\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Web Pages"},{"location":"api/web_pages/#web-pages","text":"A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report.","title":"Web Pages"},{"location":"api/web_pages/#attributes","text":"ID Unique ID for the Web Page. URL URL of the Web Page. Linked From URL of the web page that links to this web page. That is, where the Spider found first about this Web Page. HTML Check Holds the result of the HTML check on that web page, if it was enabled. Includes keys for the number of errors, warnings, muted errors and muted warnings, and the status of the check. A11y Check Holds the result of the accessibility check on that web page, if it was enabled. Includes keys for the number of errors, warnings, muted errors and muted warnings, and the status of the check. Inserted At Timestamp when the web page was created. Updated At Timestamp when the web page was last updated.","title":"Attributes"},{"location":"api/web_pages/#relationships","text":"Report The Report that this Web Page belongs to. HTML issues The HTML issues found on this Web Page, if the HTML check was enabled. A11Y issues The accessibility issues found on this Web Page, if the accessibility check was enabled.","title":"Relationships"},{"location":"api/web_pages/#example","text":"Example: Web Page example { \"attributes\" : { \"a11y_check\" : { \"errors\" : 9 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 1 }, \"html_check\" : { \"errors\" : 78 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 86 }, \"id\" : 2884097 , \"inserted_at\" : \"2020-04-02T12:44:43\" , \"linked_from\" : \"https://example.com/\" , \"updated_at\" : \"2020-04-02T12:44:50\" , \"url\" : \"https://example.com/about\" }, \"id\" : \"2884097\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6/web_pages/2884097/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/56b6\" } } }, \"type\" : \"web_page\" }","title":"Example"},{"location":"api/web_pages/#list-web-pages-on-a-report","text":"To list the web pages on a Report, send a GET request to /api/v0/reports/$REPORT_ID/web_pages . Example: GET https://rocketvalidator.dev/api/v0/reports/9314c/web_pages { \"data\" : [ { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted_at\" : \"2020-02-28T13:01:32\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" }, { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 16 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 473 , \"inserted_at\" : \"2020-02-28T13:01:33\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:36\" , \"url\" : \"http://validationhell.com/pages/agent\" }, \"id\" : \"473\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/473/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" } ], \"jsonapi\" : { \"version\" : \"1.0\" }, \"links\" : { \"self\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages?page[number]=1&page[size]=25\" } }","title":"List Web Pages on a Report"},{"location":"api/web_pages/#retrieve-a-web-page","text":"To show an individual Web Page, send a GET request to /api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID . Example: GET https://rocketvalidator.dev/api/v0/reports/$REPORT_ID/web_pages/$WEBPAGE_ID { \"data\" : { \"attributes\" : { \"a11y_check\" : { \"errors\" : 6 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 0 }, \"html_check\" : { \"errors\" : 19 , \"muted_errors\" : 0 , \"muted_warnings\" : 0 , \"status\" : \"checked\" , \"warnings\" : 2 }, \"id\" : 472 , \"inserted_at\" : \"2020-02-28T13:01:32\" , \"linked_from\" : \"http://validationhell.com/\" , \"updated_at\" : \"2020-02-28T13:01:35\" , \"url\" : \"http://validationhell.com/\" }, \"id\" : \"472\" , \"relationships\" : { \"a11y_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/a11y_issues\" } }, \"html_issues\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c/web_pages/472/html_issues\" } }, \"report\" : { \"links\" : { \"related\" : \"https://rocketvalidator.dev/api/v0/reports/9314c\" } } }, \"type\" : \"web_page\" }, \"jsonapi\" : { \"version\" : \"1.0\" } }","title":"Retrieve a Web Page"}]}