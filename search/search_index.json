{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Rocket Validator!","text":"<p>Rocket Validator is the tool used by professional web developers worldwide to quickly detect accessibility and HTML issues on large web sites, in an automated way.</p> <p>In a nutshell, Rocket Validator is an automated accessibility scanner: just by submitting a starting URL our spider will discover the internal pages on that site, and check all the internal web pages found using the latest versions of the W3C HTML Validator and the axe-core accessibility engine, giving you a detailed report in seconds.</p> <p>By creating an account at Rocket Validator, you can manage your site validation reports via the Web UI or using our JSON API.</p> <p></p>"},{"location":"deploy-hooks/","title":"Deploy hooks","text":"<p>Use deploy hooks to notify Rocket Validator that you've deployed a new version of your site and make it start automatically the specified validation.</p> <p>To create a deploy hook, create a schedule as explained in the Scheduling reports section. </p> <p>Then, copy the supplied schedule URL (which will be something like <code>https://rocketvalidator.com/schedule/abcd/1234/fire</code>) and set up your hosting platform to fire this schedule after deploys. We will refer to this URL as $SCHEDULE_URL in the examples below.</p>"},{"location":"deploy-hooks/#curl","title":"curl","text":"<p>curl is a command-line tool, present in most systems, that you can use to make a quick check from your terminal.</p> <p>Example: curl</p> <pre><code>$ curl -X POST $SCHEDULE_URL\n</code></pre>"},{"location":"deploy-hooks/#netlify","title":"Netlify","text":"<p>Netlify is a hosting platform for static websites, and offers the simplest integration possible.</p> <p>You just need to Add Notification, choose the Outgoing webhook type and paste your deploy hook URL like this:</p> <p></p>"},{"location":"deploy-hooks/#github-pages","title":"Github Pages","text":"<p>Github Pages let you define webhooks for different events.</p> <p>You just need to enter your automatic validator URL in the Payload URL field, and choose the individual event for page build:</p> <p></p> <p>Github Pages lets you define several deploy hooks for different services.</p>"},{"location":"deploy-hooks/#heroku","title":"Heroku","text":"<p>If your site is on Heroku, you can use the free HTTP post hook add-on, like this:</p> <p>Example: Heroku</p> <pre><code>$ heroku addons:create deployhooks:http --url $SCHEDULE_URL\n</code></pre> <p>Heroku only allows one HTTP deploy hook per app, so if you need to trigger several hooks, you can set it up using deploy hook forker.</p>"},{"location":"deploy-hooks/#engine-yard","title":"Engine Yard","text":"<p>Engine Yard lets you define deploy hooks using simple ruby scripts. To trigger a site validation, you can create a deploy/after_restart.rb file on the root folder of your app, that sends the post-deploy hook using curl like this:</p> <p>Example: Engine Yard</p> <pre><code>run \"curl -X POST -d '' $SCHEDULE_URL\"\n</code></pre>"},{"location":"deploy-hooks/#cloud-66","title":"Cloud 66","text":"<p>If your site is on Cloud 66, you can use their free deploy hooks to define your hooks per environment on a file named .cloud66/deploy_hooks.yml, like this:</p> <p>Example: Cloud 66</p> <pre><code>staging:\n  last_thing:\n    - command: curl -X POST -d '' $SCHEDULE_URL\n      target: rails\n      run_on: single_server\n</code></pre> <p>Cloud 66 lets you have several deploy hooks defined. The syntax for doing that is:</p> <p>Example: Cloud 66</p> <pre><code>last_thing:\n  - xxxxxx\n    yyyyyy\n    zzzzzz\n  - xxxxxx\n    yyyyyy\n    zzzzzz\n</code></pre>"},{"location":"deploy-hooks/#other-platforms","title":"Other platforms","text":"<p>If your hosting platform is not listed here, feel free to contact us and we'll help you with the integration.</p>"},{"location":"device-viewport-emulation/","title":"Device Viewport Emulation","text":"<p>Your sites may have different issues at various screen resolutions because they don't look the same on a laptop, an iPhone, a Kindle Fire, or a Galaxy Note. </p> <p>When running an accessibility report, you can choose from a list of popular devices to emulate their screen resolution, device scale factor, User Agent string and orientation.</p>"},{"location":"device-viewport-emulation/#emulating-a-device-viewport","title":"Emulating a device viewport","text":"<p>To emulate a device viewport, just enable the Device Viewport Emulation when creating a report, choose a device from the list, and optionally check the rotated option:</p> <p></p>"},{"location":"device-viewport-emulation/#currently-supported-devices","title":"Currently supported devices","text":"<ul> <li>Galaxy Note 3 (360x640, DPR 3)</li> <li>Kindle Fire HDX (800x1280, DPR 2)</li> <li>Laptop with HiDPI screen (1440x900, DPR 2)</li> <li>Laptop with MDPI screen (1280x800, DPR 1)</li> <li>Lumia 950 (360x640, DPR 4)</li> <li>iPad Air (820x1180, DPR 2)</li> <li>iPad Mini (768x1024, DPR 2)</li> <li>iPad Pro 11 (834x1194, DPR 2)</li> <li>iPad Pro 12.9 (1024x1366, DPR 2)</li> <li>iPhone 11 (414x828, DPR 2)</li> <li>iPhone 11 Pro Max (414x896, DPR 3)</li> <li>iPhone 12/13 Mini (375x812, DPR 3)</li> <li>iPhone 12/13 Pro (390x844, DPR 3)</li> <li>iPhone 12/13 Pro Max (428x926, DPR 3)</li> <li>iPhone SE (320x568, DPR 2)</li> </ul> <p>Check the full list of supported devices in Rocket Validator. </p>"},{"location":"faqs/","title":"Frequently Asked Questions","text":""},{"location":"faqs/#why-are-my-validations-slow","title":"Why are my validations slow?","text":"<p>Rocket Validator speed depends on the speed at which your validated server can respond. To avoid clogging your servers, we rate limit our validations to 5 simultaneous connections, so the faster your server respond, the faster we can validate it.</p>"},{"location":"faqs/#why-cant-some-sites-be-scraped","title":"Why can't some sites be scraped?","text":"<p>When you submit an URL for validation, we send a web spider to visit the site and get its links. Sometimes, this process that is called \"scraping\" fails, and it can be due to a number of reasons. Here are the most typical ones:</p> Authorization required Sites must be publicly accessible to be validated. Could not be found (404) The URL you provided could not be found. Connection timed out The site is taking too long to respond. Retry again later, when the remote server has less traffic. Too many requests to remote server The remote server is denying us access because it is rate limiting us. Contact your sys admin to relax this rate limiting, or try again later. Blocked The remote server is blocking our requests. Consult the User Agents page to explicitly allow our requests. No internal links found The document returned for the starting URL contains no links, or the links are not on the same host. The spider will only follow internal links from the starting URL. <p>If none of this explains the reason why your site is not being scraped, contact us and we'll help you find the cause.</p>"},{"location":"faqs/#can-i-validate-pages-that-require-authorization","title":"Can I validate pages that require authorization?","text":"<p>No, there is no direct way of validating pages that require login. Rocket Validator is a distributed system with different internal pieces: our own web crawler, the HTML validator and the A11Y validator. Requests to your web pages come from these three different origins, so authentication handling would need to be implemented in all of them, and would need to cover the different authentication systems most web sites implement.</p> <p>Instead, we recommend other approaches to checking protected sites:</p> <ul> <li> <p>You can validate your local development server directly. This also makes it faster to fix the issues, as you don\u2019t need to deploy them.\u00a0</p> </li> <li> <p>You can have a separate server that doesn\u2019t need authentication.</p> </li> <li> <p>You can have a copy of the templates for the restricted pages in a different directory that doesn't require authentication.</p> </li> </ul>"},{"location":"faqs/#does-rocket-validator-cache-pages","title":"Does Rocket Validator cache pages?","text":"<p>No, we don't use any kind of cache neither on the link scraper, nor on the validator. If you're changing your page and you're getting the same validation results, the possible reason can be:</p> <ul> <li>Your server is using cache, like for example Varnish.</li> <li>Your pages are being rendered depending on the User-Agent string - you might be seeing your changes on the browser, but your server might be serving different content to the validator. The default User-Agent string for the validator is <code>Validator.nu/LV http://validator.w3.org/services</code></li> </ul>"},{"location":"faqs/#how-long-are-reports-stored","title":"How long are reports stored?","text":"<p>Reports are stored for actively subscribed users for a limited time, depending on your subscription plan. See the pricing table. Once your subscription expires, reports are automatically deleted - you need an active subscription to keep your reports stored.</p>"},{"location":"faqs/#can-i-share-reports-with-other-people","title":"Can I share reports with other people?","text":"<p>Sure, you can share your validation reports with anyone. Just use one of the buttons at the bottom of the summary and you'll be able to send anyone the URL of the report. They'll be able to see the validation results just like you - but they won't be able to re-check any page or modify anything, only you can control this.</p>"},{"location":"faqs/#can-i-export-reports-to-excel-csv-or-pdf","title":"Can I export reports to Excel, CSV, or PDF?","text":"<p>You can download your reports data in Excel format. See this blog post for more information on exporting report data.</p>"},{"location":"faqs/#how-can-i-exclude-rocket-validator-from-google-analytics-traffic","title":"How can I exclude Rocket Validator from Google Analytics traffic?","text":"<p>You can detect the User Agent string, and exclude it from Google Analytics.</p>"},{"location":"google/","title":"Excluding Rocket Validator Bots from Google Analytics Traffic","text":"<p>As explained in the User Agents section, when you validate a site with Rocket Validator, your server will be visited by 3 different systems: Link Spider, HTML Checker and Accessibility Checker.</p> <p>The first two will just get the static HTML content, but the Accessibility Checker behaves like a real browser (using Headless Chrome), so it's going to execute JavaScript in the visited pages - and that includes the Google Analytics script, if it's there.</p> <p>So, it's perfectly normal to see a spike in the Google Analytics traffic when you're validating a site. But in most cases, you can prefer to exclude this traffic from the stats.</p> <p>There are 2 options to do that, let's explore them.</p>"},{"location":"google/#not-rendering-the-google-analytics-script","title":"Not rendering the Google Analytics script","text":"<p>This option may be the simpler method, if your web site can detect the User Agent string from the request. It may not be an option in certain cases like static sites.</p> <p>If you can do that, then it's simple: in case the User Agent string contains <code>RocketValidator</code>, don't include the script that triggers Google Analytics.</p> <p>However, we don't recommend this option as it's preferable to not customize your content based on User Agents, so the bots can have \"the real thing\". Let's say a script introduces an accessibility issue, you're not going to detect it if you hide it from the bots.</p>"},{"location":"google/#filtering-out-from-google-analytics","title":"Filtering out from Google Analytics","text":"<p>The second option requires a bit more work to set up but it's cleaner. There's nothing to set up on your server and the content stays the same. What you need to to instead is tell Google Analytics to filter out requests depending on the User Agent string.</p>"},{"location":"google/#setting-up-google-analytics-via-google-tag-manager","title":"Setting up Google Analytics via Google Tag Manager","text":"<p>First step is having Google Analytics installed via the Google Tag Manager. This way, it's easy to extend it with custom dimensions, like the User Agent.</p> <p>Follow this guide: Deploy Google Analytics with Tag Manager.</p>"},{"location":"google/#create-a-custom-dimension-for-user-agent","title":"Create a custom dimension for User Agent","text":"<p>Next, go to your Google Analytics admin panel. Click on \"Custom Definitions\" in the \"Property\" column, and select \"Custom Dimensions\". Create a new Custom Dimension with the name \"User Agent\".</p> <p></p> <p>Write down the \"Index\" value for the created Custom Dimension as we'll need it later.</p> <p></p>"},{"location":"google/#create-a-variable-in-google-tag-manager","title":"Create a variable in Google Tag Manager","text":"<p>Now, go to your Google Tag Manager account and click on \"Variables\" on the left-hand side menu. Click on \"New\" under \"User-Defined Variables\". Set the name as \"User Agent\", the Variable Type as \"JavaScript Variable\" and the Global Variable Name as <code>navigator.userAgent</code>. Click on \"Save\". This will set up a JavaScript variable that will store the User Agent string, so it can be passed to Google Analytics.</p> <p></p>"},{"location":"google/#define-a-custom-dimension-in-google-analytics-settings","title":"Define a custom dimension in Google Analytics Settings","text":"<p>Still on the Google Tag Manager Variables section, click on the Google Analytics Settings variable:</p> <p></p> <p>Edit the tag settings, open \"Custom Dimensions\" and click on \"Add Custom Dimension\". Set the index to the index matching the custom dimension in your Google Analytics account. Set the Dimension Value to <code>{{User Agent}}</code>.</p> <p></p> <p>This will pass the User Agent to Google Analytics. Remember to Publish your changes in Google Tag Manager so they're enabled.</p>"},{"location":"google/#create-a-filter-in-google-analytics","title":"Create a filter in Google Analytics","text":"<p>The last step is going back to your Google Analytics account, Admin section. Click on \"Filters\" on the \"View\" column. Click on \"Add Filter\". Set the Filter Name as \"User-Agent RocketValidator\". Choose \"Custom\" in Filter Type. In the Exclude option, select the field \"User-Agent\" on the Custom Dimensions. And, in Filter Pattern, use this regular expression: <code>.*RocketValidator.*</code>.</p> <p></p> <p>And that's it! It may take some time for the filter to take effect (but in most cases it's just a matter of minutes). This method does not remove traffic retroactively - it can only filter out traffic happening after the creation of the filter.</p>"},{"location":"guest-accounts/","title":"Guest Accounts","text":"<p>A Guest Account is a way to invite other Rocket Validator users to share your subscription resources in terms of validation credits and features, without compromising your main account credentials.</p> <p>Your guests will be able to sign up for free, no credit card required, but still run HTML and Accessibility validation reports, set up schedules, define muting rules and use the API, on their own accounts. Their usage will be substracted from your main account credits, up to the limit you define.</p> <p>As a host, you can supervise your guests' activity. You can see the reports your guests generate, and have your stats up to date with the data from your guests' reports. You control how many credits they can use per month, and can cancel or adjust at any time.</p> <p>The Guest Accounts feature is only available for users with a Pro or Enterprise subscription. With each Pro subscription, you get 5 guest accounts, which are designed for small and medium-sized organizations. For larger organizations, you can subscribe to the Enterprise plan, which gives you 50 guest accounts per subscription. If you need more than that you can just subscribe to additional packages.</p>"},{"location":"guest-accounts/#creating-your-guest-accounts-invitations","title":"Creating your Guest Accounts invitations","text":"<p>The first step for having your guest accounts set up is creating the invitation tokens. To do that, go to the Guests section and click on the Invite Guests button:</p> <p></p> <p>Then, fill in the form to specify how many invitations to create, and how many allowed credits per month will be allowed for each invitation. In the next screenshot you can see how we create 5 invitations, with 5,000 allowed monthly credits each:</p> <p></p>"},{"location":"guest-accounts/#sharing-your-guest-accounts-invitations","title":"Sharing your Guest Accounts invitations","text":"<p>Once you have created the invitations, you'll see the list of available invitations. Each invitation has a unique token - think of it like a coupon code, a voucher or a gift card, that you can share with anyone so that they can create an account for free.</p> <p></p> <p>Click on any of the invitations and you'll see a preview of the invitation, as your guests will see it. At the bottom you'll find the instructions to share the invitation (basically you just need to pass them the URL).</p> <p></p> <p>You can also download the invitation list as a CSV file by clicking on the Download Guest List button. This can be useful to keep track of who has been assigned to each invitation.</p>"},{"location":"guest-accounts/#checking-your-guest-activity","title":"Checking your guest activity","text":"<p>You'll be notified by email once your guests accept the invitation. At that point, they'll be able to run their own reports, and you can see their activity by clicking on their name in the Guests section:</p> <p></p> <p>On this screen you'll find:</p> <ul> <li>Your guest's token. This can be useful to get their reports via the API.</li> <li>Current and maximum usage. This shows how many validation credits the user has spent for the current month, and what the maximum allowed credits per month is. Usage is reset at day 1 of each month, but you can also modify it at any time from here.</li> <li>Recent activity, including:</li> <li>Remaining credits in the guest user account.</li> <li>Total pages checked and issues found. Click on them to get a list of all the reports by this user.</li> <li>A list of the recent reports.</li> <li>A link to remove the guest account. Handle with care!</li> </ul>"},{"location":"guest-accounts/#integrated-reports-and-stats","title":"Integrated reports and stats","text":"<p>Your guest reports are also integrated into your main Reports list. When a report has been created by a guest, you'll see the guest user's name in the Checked column.</p> <p></p> <p>Similarly, your Stats automatically merge the data from your guest reports. Stats always take the freshest results for web pages; if you have a report for a site but a guest has a more recent report for some of the pages in that domain, their version will take precedence. This ensures stats get the most up-to-date data.</p>"},{"location":"guest-accounts/#guest-accounts-via-the-reports-api","title":"Guest Accounts via the Reports API","text":"<p>Check out the Guest Reports API guide to learn how to get your guest accounts' reports using the API. This will let you retrieve the reports created by all your guests, or filter by a single guest using the guest token.</p>"},{"location":"how-to-validate-your-local-server/","title":"Validating your local server","text":"<p>Rocket Validator can validate your local development server, which provides the fastest development experience as you can skip the deployment phase. All you need is to set up a local tunnel to your local server, so you have a public URL that Rocket Validator can access.</p>"},{"location":"how-to-validate-your-local-server/#using-your-local-server-port","title":"Using your local server port","text":"<p>If you're already working with a local server, you just need to find out what the local port is. For example, in case of Rails applications, the default port is <code>3000</code>. For Phoenix applications, the default is <code>4000</code>. This may be customized, in the end it's the numeric part in the url after the <code>:</code>, for example in <code>http://localhost:3000</code> the port is <code>3000</code>.</p>"},{"location":"how-to-validate-your-local-server/#launching-a-local-server","title":"Launching a local server","text":"<p>If you're not working with a local server, for example when you just have a directory with static files, you can quickly launch a server using serve. You can install it with one line:</p> <pre><code>npm install --global serve\n</code></pre> <p>Once installed, you can run this command inside your project's directory with:</p> <pre><code>serve\n</code></pre> <p>And this will run a server in the port <code>3000</code>. Run <code>serve --help</code> for a list of other options.</p> <p>Once you have a running development server and you know your port number, you just need to set a up a tunnel to get a public URL.</p>"},{"location":"how-to-validate-your-local-server/#localtunnel","title":"localtunnel","text":"<p>localtunnel is a free and open source service that lets you expose your local development server with a public URL.</p> <p></p> <p>Install it with:</p> <pre><code>npm install -g localtunnel\n</code></pre> <p>And launch your local tunnel with the <code>lt</code> command, indicating the port where your server is running:</p> <pre><code>lt --port 3000 \n</code></pre> <p>This will create a random URL for you - we recommend using the <code>--subdomain</code> option to set a custom subdomain for your site, like this:</p> <pre><code>lt --port 3000 --subdomain example\n</code></pre> <p>That's all you need!</p> <p>You can now use your public URL (in the above example, it would be <code>https://example.loca.lt</code>) to validate your development server with Rocket Validator.</p>"},{"location":"how-to-validate-your-local-server/#other-tunnel-providers","title":"Other tunnel providers","text":"<p>We love localtunnel because it's open source, doesn't require sign up, and lets you use subdomains for free, but there are many other tunneling services that you can use:</p> <ul> <li>ngrok</li> <li>boringproxy</li> <li>Telebit</li> <li>tunnel.pyjam.as</li> <li>Expose</li> <li>TunnelTo.dev</li> <li>PageKite</li> <li>Zrok</li> <li>Remotemoe</li> <li>Loophole</li> <li>Localhost.run</li> <li>KubeSail</li> <li>LocaltoNet</li> <li>Cloudflare Tunnel</li> </ul>"},{"location":"muting/","title":"Muting Issues","text":"<p>When validating your sites, you may find that some of the issues won't be currently fixed, for example:</p> <ul> <li>The affected code is out of your scope, for example it's being generated by a 3rd party software that you cannot control.</li> <li>You may be aware of an issue, but you've evaluated it and prefer to let it exist for some reason.</li> <li>You've decided that this will be fixed later and prefer to concentrate on other issues first.</li> </ul> <p>In those situations, Pro users can avoid all the noise related to those selected issues by muting them.</p>"},{"location":"muting/#how-to-mute-issues","title":"How to mute issues","text":"<p>The simplest way to mute an issue is directly on an issue list. Just click the <code>MUTE</code> button.</p> <p></p> <p>When you do that, you'll be taken to the new muting rule form:</p> <p></p> <p>Then click on \"Submit\" and your new muting rule will be created and applied to the current and next reports.</p>"},{"location":"muting/#muting-options","title":"Muting options","text":"<p>To define a muting rule you need to specify:</p> <ul> <li>Matching URL. The muting rule will be applied to URLs containing this string. Try to be as specific as possible to limit the scope of this rule.</li> <li>Message. Enter the matching message here. Try to be as specific as possible to limit the scope of this muting rule.</li> <li>Comment / explanation. Optional but recommended, so you can explain why you decided to mute this rule.</li> </ul>"},{"location":"performance-tips/","title":"Performance Tips","text":"<p>Validating a large site can take a considerable amount of time, so in order to get your results sooner, consider:</p>"},{"location":"performance-tips/#using-an-xml-sitemap","title":"Using an XML sitemap","text":"<p>You can provide an XML sitemap specifying the exact URLs to validate. If you do so, we won't need to crawl your site to discover the pages to validate, so we can start validating pages sooner.</p> <p>You can read about the XML sitemaps protocol here, but in short, all you need is to specify each URL in this format:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n  &lt;url&gt;\n    &lt;loc&gt;http://example.com/page1&lt;/loc&gt;\n  &lt;/url&gt;\n  &lt;url&gt;\n    &lt;loc&gt;http://example.com/page2&lt;/loc&gt;\n  &lt;/url&gt;\n  &lt;url&gt;\n    &lt;loc&gt;http://example.com/page3&lt;/loc&gt;\n  &lt;/url&gt;\n&lt;/urlset&gt;\n</code></pre> <p>You can generate this XML sitemap manually or by using a tool like this one. Remember to serve the XML sitemap with a content-type of <code>text/xml</code>.</p> <p>See for example our XML sitemap at https://rocketvalidator.com/sitemap.xml.</p> <p>Once you have your sitemap ready and within your site, you can just submit it to Rocket Validator as the starting URL. For example, instead of submitting <code>https://dummy.rocketvalidator.com</code> you'd submit <code>https://dummy.rocketvalidator.com/sitemap.xml</code>.</p> <p>Using XML sitemaps leads to much faster site crawlings, and also lets you be more organized when validating large sites. For example, you can use different XML sitemaps for the different sections in a large site.</p>"},{"location":"performance-tips/#using-a-plain-text-sitemap","title":"Using a plain text sitemap","text":"<p>If your site doesn't have an XML sitemap, a simpler alternative is building a plain text sitemap. This is just a text file with all the URLs to include, one per line. Remember to serve your plain text sitemap with a content-type of <code>text/plain</code>.</p> <p>See for example our plain text sitemap https://rocketvalidator.com/sitemap.txt.</p>"},{"location":"performance-tips/#validating-a-smaller-set-of-pages","title":"Validating a smaller set of pages","text":"<p>While it's tempting to try to validate sites in its entirety, in most cases that's unnecessary. For example, the New York Times site has over 15 million URLs, it would be impossible to validate the whole site.</p> <p>When you have a blog, or an online store, your site has easily thousands of pages, but most of them are using the same layout. Instead of validating each of them, consider building an XML sitemap with a sample of each different kind of page. You'll save time.</p>"},{"location":"quick-start/","title":"Quick Start","text":"<p>To begin validating your sites you just need to create an account. There's a free trial that lets you validate HTML, and a Pro trial that gives you access to the advanced features like accessibility checking, muting rules, scheduled reports, and more.</p> <p>Once you have created your account, you'll be prompted to validate your first site by entering a starting URL and clicking on \"Launch validation\".</p> <p></p>"},{"location":"quick-start/#options","title":"Options","text":"<p>To validate a site, you can define the following options.</p> <ul> <li>Starting URL. Our validation spider will visit this URL and recursively follow the internal links, validating each internal web page found. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap.</li> <li>How many pages to validate. The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets.</li> <li>Check HTML and/or Accessibility. Pro users can choose to include A11Y checks on top of HTML checks.</li> </ul>"},{"location":"quick-start/#advanced-options","title":"Advanced options","text":"<p>By clicking on \"Show advanced options for crawling, device viewport and tags\", you'll have access to the advanced options that add additional features to your report.</p> <p></p> <ul> <li>Validation speed (requests/second). Can be set from 1 to 3 (Micro users), 1 to 5 (Basic users) or 1 to 15 (Pro users).</li> <li>Deep Crawling. When enabled, our crawler will recursively look for more internal web pages following the links found.</li> <li>Initial URLs. When enabled, it allows you to define a list of URLs to be included as the starting web pages of the report.</li> <li>Exclusions. When enabled, it lets you to define a list of paths to be excluded from the web pages list by our web crawler.</li> <li>Device Viewport Emulation. Optionally choose a device to emulate while validating the page for accessibility issues. This will set the viewport's width, height and device scale factor to the ones in the selected device. If none selected, the default 800x600 viewport will be used.</li> <li>Tags. A comma-separated list of tags to apply to the generated report.</li> </ul>"},{"location":"quick-start/#re-checking-your-pages","title":"Re-checking your pages","text":"<p>Once your site has been processed, you'll see the HTML and accessibility issues for each page found. As you go fixing them, you can re-check the pages quickly with:</p> <ul> <li>Re-check this page button on each page. This will submit an individual page to the validator.</li> <li>Re-check all pages button. This will submit all pages on the site to the validator.</li> <li>Re-check all pages affected by an issue menu. This will submit all pages with errors or warnings to the validator.</li> <li>Re-scrape site button. This will start the scraper again, to discover the internal pages of the site and validate each of them. Use only if the structure of your site has changed or if you want to change any parameter (like max pages).</li> </ul>"},{"location":"rate-limits/","title":"Rate Limiting","text":"<p>When you submit a site for validation, Rocket Validator will scrape the site to search for internal web pages, and check each of them for HTML and Accessibility conformance.</p> <p>This means that your site can receive three types of requests:</p> <ul> <li>Scraper request. Your web pages will be visited to discover internal links to other pages.</li> <li>HTML check. The Nu Validator will launch this request to validate your page.</li> <li>A11Y check. The axe-core accessibility engine will perform this request to check your page.</li> </ul> <p>This means that, for example, a site with 1,000 web pages can receive up to 3,000 requests during the site validation process.</p>"},{"location":"rate-limits/#avoiding-server-overload","title":"Avoiding server overload","text":"<p>To avoid overloading your server, we carefully rate limit the requests to ensure they don't happen all at once, but a buffered rate. The following limits are applied:</p> <ul> <li>Enterprise users have a limit of 25 requests per second.</li> <li>Pro users have a limit of 15 requests per second.</li> <li>Basic users have a limit of 5 requests per second.</li> <li>Micro users have a limit of 3 requests per second.</li> </ul> <p>On top of that we impose a rate limit on each host, to ensure that even if you're running simultaneously several site validations on the same host, a global limit is applied.</p>"},{"location":"rate-limits/#how-to-reduce-the-number-of-requests","title":"How to reduce the number of requests","text":"<p>To avoid making too many requests to your servers we recommend:</p> <ul> <li>Setting a low rate limit. The default rate limit is 3 reqs/second, but you can set it as low as 1 req/second.</li> <li>Using an XML sitemap. You can provide an XML sitemap specifying the exact URLs to validate. This way the scraper can avoid crawling your internal pages in seach for links. Read more.</li> <li>Skipping A11Y validation. By default, Pro users will get A11Y validation on top of HTML validation. You may consider skipping A11Y validation and focus on fixing the HTML issues first.</li> </ul>"},{"location":"scheduling/","title":"Scheduling Reports","text":"<p>Pro users can schedule validation reports, so that they are performed automatically when indicated (monthly, weekly or daily).</p> <p>To schedule a validation, go to the new schedule form and enter the starting URL, the maximum number of pages to validate, how often you want us to run this validation, click \"Submit\" and you're ready to go:</p> <p></p>"},{"location":"scheduling/#schedule-options","title":"Schedule options","text":"<p>To schedule a site validation, you can define:</p> <ul> <li>When should we run this validation. Typically you'll want to perform a monthly check, but you can also define it to be weekly or even daily - but we suggest you set up a longer frequency that leaves you enough time to fix your issues until the next run.</li> <li>Starting URL. Our validation spider will visit this URL and its direct internal links, and validate those pages. Typically, you can enter the main URL of the site to validate, but it can be any URL from your site, or an XML sitemap.</li> <li>How many pages to validate. The maximum number of pages to validate. There's a limit on the pages included depending on your subscription plan, but you'll typically want to set a much lower limit. If you need to validate more pages than the limit on a report, consider using XML sitemaps to organize pages into sets.</li> <li>Validation speed (requests/second). By default is 3 reqs/second, can be set higher depending on your subscription plan. Read more.</li> <li>Deep Crawling. When enabled, our crawler will recursively look for more internal web pages following the links found.</li> <li>Exclusions. When enabled, it lets you to define a list of paths to be excluded from the web pages list by our web crawler.</li> <li>Check HTML and Accessibility or only HTML. Choose if you want to include A11Y checks on top of HTML checks.</li> <li>Device Viewport Emulation. Optionally choose a device to emulate while validating the page for accessibility issues. This will set the viewport's width, height and device scale factor to the ones in the selected device. If none selected, the default 800x600 viewport will be used.</li> <li>Tags. A comma-separated list of tags to apply to the generated report.</li> <li>Active. Disable this to temporarily pause the scheduled validation.</li> </ul> <p>When the scheduled validation is run, you'll be notified via email with a link to the report.</p>"},{"location":"scheduling/#using-deploy-hooks-to-fire-a-schedule","title":"Using deploy hooks to fire a schedule","text":"<p>A schedule defines a validation to be run automatically. It can be set up to run monthly, weekly or daily, but it can also be fired via a deploy hook.</p> <p>To learn more about deploy hooks, go to the Deploy Hooks section.</p>"},{"location":"stats/","title":"Stats","text":"<p>The new Stats section, available for Micro, Basic, Pro and Enterprise users, shows stats for the evolution of the checked domains, based on daily snapshots automatically generated from the data in your reports.</p> <p></p>"},{"location":"stats/#filtering-stats-per-domain-or-tag","title":"Filtering stats per domain or tag","text":"<p>The Stats section shows the statistics from all your reports for the latest 30 days by default, which gives a high level overview, but you can narrow the stats to show only the domains you're interested in using the search bar on top. You can also filter per tag or tag combination.</p> <p></p>"},{"location":"stats/#filtering-by-date-range","title":"Filtering by date range","text":"<p>By default, we'll show the last 30 days of stats. You can pick a different date range using the drop down on the top right: last 7, 30, 90 or 365 days (depending on what your subscription plan allows), or pick a custom date range.</p> <p></p>"},{"location":"stats/#showing-the-stats-in-table-format","title":"Showing the stats in table format","text":"<p>Each graph shown in the Stats section can also be shown in table format, which provides an accessible alternative and can also be easily copied into a spreadsheet for further analysis. Just click in the top left icon to open the table data.</p> <p></p>"},{"location":"stats/#stats-included","title":"Stats included","text":"<p>Stats data is shown in different chart types, in this section we'll explore each one of them.</p>"},{"location":"stats/#reports-and-web-pages","title":"Reports and Web Pages","text":"<p>The Reports chart shows the number of site validation reports stored, as a line chart for the selected range. On top of that, the current number of reports (from the last date in the date period) is shown.</p> <p>The Web Pages chart is similar, but shows the number of distinct URLs stored in the reports, as a line chart for the selected date range and also highlighting the current (last date) value.</p> <p></p>"},{"location":"stats/#issue-density","title":"Issue Density","text":"<p>The concept of issue density represents the average number of issues per check. For example if you have a site validation report that checks 100 web pages, and you find 500 HTML issues, then your HTML issue density is 5 issues per page. This is a valuable metric to check how your site quality is evolving over time.</p> <p>These two charts show the HTML and A11Y issue density over the date range as a line chart, and the current (last in period) value highlighted on top.</p> <p></p>"},{"location":"stats/#current-status","title":"Current Status","text":"<p>These pie charts show the check status, both for HTML and for A11Y checks, for the last date in the selected period (by default, the current date).</p> <p>These charts show the proportion of web pages that have errors (red), warnings (yellow), no issues (green), or failed checks (black).</p> <p>The pie charts correspond to the last bar in the Check Status Evolution bar chart, explained below.</p> <p></p>"},{"location":"stats/#check-status-evolution","title":"Check Status Evolution","text":"<p>These bar charts show the evolution over time of the check status, both for HTML and for A11Y checks.</p> <p>Each bar represents a date, and shows the proportion of web pages that have errors (red), warnings (yellow), no issues (green), or failed checks (black).</p> <p></p>"},{"location":"stats/#total-issues-evolution","title":"Total Issues Evolution","text":"<p>These bar charts show the evolution over time of the number of total issues, both for HTML and for A11Y checks.</p> <p>Each bar represents a date, and shows the proportion of errors (red) and warnings (yellow).</p> <p></p>"},{"location":"summary-reports/","title":"Summary Reports","text":"<p>Chances are that the issues found on your sites affect many of their web pages, but in reality it's the same issue over and over again.</p> <p>In many cases, the affected code lies within a layout or a shared template, so fixing it once will remove this issue from hundreds or thousands of pages at once.</p> <p>That's why the first screen you'll see when creating a new report is the Summary. This screen shows the main HTML and accessibility issues found on your checked site, grouped by their importance. You'll get a highlight of the main issues for each kind of check so you can focus on fixing them first, and a link to see the full lists of HTML and accessibility issues.</p> <p>Also, for the HTML and accessibility checks, a progress bar shows the percentage of pages that passed all the checks. Your goal is to reach a 100% of web pages passing all checks.</p> <p></p>"},{"location":"summary-reports/#common-html-accessibility-issues-tabs","title":"Common HTML / accessibility issues tabs","text":"<p>The Summary screen gives you the main issues for each kind of check. If you want to get the full list of issues, you can use the Common HTML issues or the Common accessibility issues tabs.</p> <p></p> <p>On the common issues reports you'll see all the issues found in all the web pages, grouped together and ordered by their frequency. For each issue, you can see how many web pages are affected by it.</p> <p>The grouped issues are ordered by their severity and the number of web pages that it affects, so you can concentrate on fixing the most important issues first.</p>"},{"location":"summary-reports/#seeing-web-pages-affected","title":"Seeing web pages affected","text":"<p>Each issue shows a contextual menu with the number of times it has been found on the site. Click on that menu and select Pages affected.</p> <p></p> <p>When you do that you'll see a list of the pages that have this exact issue. You can also filter per URL on that list.</p> <p></p> <p>Once you've found and fixed this issue on your site, you can unfold the issue menu and click on \"Re-check\" to re-check all the web pages affected by this particular issue.</p>"},{"location":"summary-reports/#issue-on-a-given-web-page","title":"Issue on a given web page","text":"<p>You can also click on one of the affected pages to see where this issue happens exactly in the web page. </p> <p>For HTML checks, you get the exact line in the source code where this issue has been found, click on the line button to jump to the exact line in the HTML source code viewer.</p> <p>For A11Y checks, you'll get the DOM element affected by the issue.</p> <p></p>"},{"location":"user-agents/","title":"User Agents","text":"<p>When you validate a site using Rocket Validator, your server will be visited by the following systems:</p> <ul> <li>Link Spider. It will start at the initial URL to discover the internal links, and visit all of them until it finds all the pages to validate.</li> <li>HTML Checker. It will validate HTML / CSS markup on each of your pages.</li> <li>Accessibility Checker. It will validate Accessibility on each of your pages (optional, Pro feature).</li> <li>Screenshot System. Provides preview screenshots of the validated sites for the chosen emulated device.</li> </ul> <p>This means that, for each page on your site, your server is going to at least 2 visits (scraper and HTML checker), maybe 3 if you're also checking Accessibility, plus some visit from the screenshot system when you're on the new report form.</p> <p>In case your server is protected by a rate limiter or a firewall, this can result in Rocket Validator being blocked. The way to ensure Rocket Validator doesn't get blocked on your server in this case is by explicitly allowing it to visit your site.</p> <p>As our server IPs are dynamic, the proper way to do this is by identifying our requests by the User Agent header we include in our requests, which currently are the following.</p> <p>Check the Rocket Validator User Agents list for a comprehensive list of user agents for each emulated device. As a general rule, all of them will include the <code>RocketValidator</code> substring.</p>"},{"location":"api/","title":"Rocket Validator API","text":"<p>The Rocket Validator API lets you manage your site validation reports and related data like schedules, mutings, devices and guest accounts sending conventional HTTP requests to a standard JSON API.</p> <p>Current version</p> <p>The Rocket Validator API is currently in version <code>v1</code>.</p> <p>All endpoints have the prefix:</p> <pre><code>https://rocketvalidator.com/api/v1/{endpoint}\n</code></pre> <p>For brevity and legibility, the examples might omit the prefix, so instead of this:</p> <p><code>GET https://rocketvalidator.com/api/v1/reports</code></p> <p>we'll use this:</p> <p><code>GET /api/v1/reports</code></p>"},{"location":"api/#api-quick-start","title":"API Quick Start","text":"<p>To start working with the Rocket Validator API, all you need is to sign up for a new account and then generate an API token. Check out the Authorization section to learn how to use this API token to identify your requests.</p>"},{"location":"api/#example-request","title":"Example Request","text":"<p>To retrieve the data you need from Rocket Validator, you just need to perform a standard <code>GET</code>, <code>POST</code>, <code>PATCH</code> or <code>DELETE</code> request to the appropiate endpoint. Here are some examples in different programming languages, and below is a cheatsheet on the most common endpoints.</p> <p>Example code</p> cURLRubyRuby GemPythonPHPNode.jsJavaSwift <pre><code>curl --request GET \\\n     --url https://rocketvalidator.com/api/v1/reports \\\n     --header 'authorization: Bearer $API_TOKEN'\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rocketvalidator.com/api/v1/reports\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Bearer $API_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body\n</code></pre> <pre><code># Install the gem from https://rubygems.org/gems/rocketvalidator\n\nrequire 'rocketvalidator'\n\nRocketValidator::V1::Resource.with_api_token(ENV[\"ROCKET_API_TOKEN\"]) do\n    page = 0\n    reports = RocketValidator::V1::Report.page(1).per(10).to_a\n\n    while reports do\n        page = page + 1\n        puts \"\\nPage #{page}: #{reports.length} reports found.\"\n\n        reports.each do |report|\n            puts(report.starting_url)\n        end\n\n        reports = reports.pages.next\n    end\nend\n</code></pre> <pre><code>import http.client\n\nconn = http.client.HTTPSConnection(\"rocketvalidator.com\")\n\npayload = \"\"\n\nheaders = { 'authorization': \"Bearer $API_TOKEN\" }\n\nconn.request(\"GET\", \"/api/v1/reports\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n</code></pre> <pre><code>&lt;?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n    CURLOPT_URL =&gt; \"https://rocketvalidator.com/api/v1/reports\",\n    CURLOPT_RETURNTRANSFER =&gt; true,\n    CURLOPT_ENCODING =&gt; \"\",\n    CURLOPT_MAXREDIRS =&gt; 10,\n    CURLOPT_TIMEOUT =&gt; 30,\n    CURLOPT_HTTP_VERSION =&gt; CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST =&gt; \"GET\",\n    CURLOPT_POSTFIELDS =&gt; \"\",\n    CURLOPT_HTTPHEADER =&gt; array(\n        \"authorization: Bearer $API_TOKEN\"\n    ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n    echo \"cURL Error #:\" . $err;\n} else {\n    echo $response;\n}\n?&gt;\n</code></pre> <pre><code>var http = require(\"https\");\n\nvar options = {\n    \"method\": \"GET\",\n    \"hostname\": \"rocketvalidator.com\",\n    \"port\": null,\n    \"path\": \"/api/v1/reports\",\n    \"headers\": {\n        \"content-length\": \"0\",\n        \"authorization\": \"Bearer $API_TOKEN\"\n    }\n};\n\nvar req = http.request(options, function (res) {\n    var chunks = [];\n\n    res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n    });\n\n    res.on(\"end\", function () {\n        var body = Buffer.concat(chunks);\n        console.log(body.toString());\n    });\n});\n\nreq.end();\n</code></pre> <pre><code>HttpResponse&lt;String&gt; response = Unirest.get(\"https://rocketvalidator.com/api/v1/reports\")\n.header(\"authorization\", \"Bearer $API_TOKEN\")\n.asString();\n</code></pre> <pre><code>import Foundation\n\nlet headers = [\"authorization\": \"Bearer $API_TOKEN\"]\n\nlet postData = NSData(data: \"\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rocketvalidator.com/api/v1/reports\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -&gt; Void in\nif (error != nil) {\n    print(error)\n} else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n}\n})\n\ndataTask.resume()\n</code></pre> <p>GET is the default method</p> <p>In the cURL example above we're explicitly specifying the <code>GET</code> kind of request, but as it's the default, in the rest of the documentation you'll often see that we omit it.</p> <p>Also, there's no need for the <code>--url</code> parameter and you can just pass the URL endpoint like this:</p> <pre><code>curl https://rocketvalidator.com/api/v1/reports \\\n   --header 'authorization: Bearer $API_TOKEN'\n</code></pre>"},{"location":"api/#reports","title":"Reports","text":""},{"location":"api/#create-a-report","title":"Create a Report","text":"<p>Send a <code>POST</code> request to <code>/api/v1/reports</code> with a JSON payload including the parameters:</p> <ul> <li><code>starting_url</code>. The initial URL where the Spider will start on. Required.</li> <li><code>max_pages</code>. The Spider will recursively follow internal links found until this limit is reached. Optional, defaults to 10.</li> </ul> <p>Example: POST /api/v1/reports</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"starting_url\": \"https://dummy.rocketvalidator.com\",\n            \"max_pages\": 100\n        }\n    }\n}\n</code></pre>"},{"location":"api/#list-your-reports","title":"List your Reports","text":"<p><code>GET /api/v1/reports</code></p>"},{"location":"api/#get-a-report","title":"Get a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID</code></p>"},{"location":"api/#delete-a-report","title":"Delete a Report","text":"<p><code>DELETE /api/v1/reports/$REPORT_ID</code></p>"},{"location":"api/#web-pages","title":"Web Pages","text":""},{"location":"api/#list-the-web-pages-on-a-report","title":"List the Web Pages on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages</code></p>"},{"location":"api/#get-a-web-page-on-a-report","title":"Get a Web Page on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID</code></p>"},{"location":"api/#accessibility-issues-pro","title":"Accessibility Issues <sup>Pro</sup>","text":""},{"location":"api/#list-a11y-issues-on-a-web-page","title":"List A11Y issues on a Web Page","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues</code></p>"},{"location":"api/#get-an-a11y-issue-on-a-web-page","title":"Get an A11Y issue on a Web Page","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues/$ISSUE_ID</code></p>"},{"location":"api/#html-issues","title":"HTML Issues","text":""},{"location":"api/#list-html-issues-on-a-web-page","title":"List HTML issues on a Web Page","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues</code>.</p>"},{"location":"api/#get-an-html-issue-on-a-web-page","title":"Get an HTML issue on a Web Page","text":"<p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues/$ISSUE_ID</code>.</p>"},{"location":"api/#common-accessibility-issues-pro","title":"Common Accessibility Issues <sup>Pro</sup>","text":""},{"location":"api/#list-common-a11y-issues-on-a-report","title":"List Common A11Y issues on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues</code></p>"},{"location":"api/#get-a-common-a11y-issue-on-a-report","title":"Get a Common A11Y issue on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID</code></p>"},{"location":"api/#common-html-issues","title":"Common HTML Issues","text":""},{"location":"api/#list-common-html-issues-on-a-report","title":"List Common HTML issues on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/common_html_issues</code></p>"},{"location":"api/#get-a-common-html-issue-on-a-report","title":"Get a Common HTML issue on a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID</code></p>"},{"location":"api/#mutings-pro","title":"Mutings <sup>Pro</sup>","text":""},{"location":"api/#list-your-mutings","title":"List your Mutings","text":"<p><code>GET /api/v1/mutings</code></p>"},{"location":"api/#get-a-muting","title":"Get a Muting","text":"<p><code>GET /api/v1/mutings/$MUTING_ID</code></p>"},{"location":"api/#schedules-pro","title":"Schedules <sup>Pro</sup>","text":""},{"location":"api/#list-your-schedules","title":"List your Schedules","text":"<p><code>GET /api/v1/schedules</code></p>"},{"location":"api/#get-a-schedule","title":"Get a Schedule","text":"<p><code>GET /api/v1/schedules/$SCHEDULE_ID</code></p>"},{"location":"api/#devices-pro","title":"Devices <sup>Pro</sup>","text":""},{"location":"api/#list-all-devices","title":"List all Devices","text":"<p><code>GET /api/v1/devices</code></p>"},{"location":"api/#get-a-device","title":"Get a Device","text":"<p><code>GET /api/v1/devices/$DEVICE_ID</code></p>"},{"location":"api/#guest-accounts-pro","title":"Guest Accounts <sup>Pro</sup>","text":""},{"location":"api/#list-all-your-guest-accounts","title":"List all your Guest Accounts","text":"<p><code>GET /api/v1/guest_accounts</code></p>"},{"location":"api/#get-a-guest-account","title":"Get a Guest Account","text":"<p><code>GET /api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code></p>"},{"location":"api/#api-costs","title":"API Costs","text":"<p>The Rocket Validator API is available to all users at no additional cost. Usage is measured in credits, at a rate of one credit per 1,000 API requests. This allows users to integrate the API into their workflow while ensuring that our resource usage remains within reasonable limits.</p> <p>For instance, to obtain the initial data for a 1,000-page web page validation report, it requires 11 credits to make a single call to the reporting endpoint and 10 calls to retrieve the data for the 1,000 web pages (with a pagination of 100 items).</p> <p>In terms of reducing API costs, it is advisable to consider the following:</p> <ul> <li>Make fewer API calls. For instance, if the integration is in the form of a script embedded in a website, rather than integrating it in the footer of the site, consider integrating it only within a page dedicated to the accessibility of the site.</li> <li>Consider caching the results so that the data is retained for a period of time, rather than having to consult it constantly.</li> <li>Use a high page size when paginating results, so you get more data in each API request.</li> </ul>"},{"location":"api/#api-rate-limit","title":"API Rate Limit","text":"<p>Currently the Rocket Validator is not rate limited, but it will be soon, to ensure reasonable limits in our resource usage.</p>"},{"location":"api/a11y_issues/","title":"Accessibility Issues <sup>Pro</sup>","text":"<p>An Accessibility issue corresponds to an issue found on a given web page when being checked by the A11Y checker.</p>"},{"location":"api/a11y_issues/#attributes","title":"Attributes","text":"ID Unique ID for this issue. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. URL URL of the document the issue refers to. Typically this is the URL of the related Web Page. HTML Code snippets showing the affected elements. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags Comma-separated list of tags to categorize this issue. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated."},{"location":"api/a11y_issues/#relationships","title":"Relationships","text":"Report The Report that this Accessibility Issue belongs to. Web Page The Web Page that this Accessibility Issue belongs to."},{"location":"api/a11y_issues/#example","title":"Example","text":"<p>Example: Accessibility Issue</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"help\": \"ARIA attributes must conform to valid names\",\n            \"help_url\": \"https://dequeuniversity.com/rules/axe/4.8/aria-valid-attr\",\n            \"html\": [\n                \"&lt;svg class=\\\"d-block mx-1\\\" title=\\\"Windows\\\" aria-title=\\\"Windows\\\" width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" fill=\\\"currentColor\\\"&gt;\",\n                \"&lt;svg class=\\\"d-block mx-1\\\" title=\\\"Linux\\\" aria-title=\\\"Linux\\\" width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" fill=\\\"currentColor\\\"&gt;\",\n                \"&lt;svg class=\\\"d-block mx-1\\\" title=\\\"Web\\\" aria-title=\\\"Web\\\" width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" fill=\\\"currentColor\\\"&gt;\",\n                \"&lt;svg class=\\\"d-block mx-1\\\" title=\\\"macOS\\\" aria-title=\\\"macOS\\\" width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" fill=\\\"currentColor\\\"&gt;\"\n            ],\n            \"impact\": \"critical\",\n            \"impact_order\": 4,\n            \"inserted_at\": \"2024-03-05T12:45:14\",\n            \"tags\": [\n                \"cat.aria\",\n                \"wcag2a\",\n                \"wcag412\",\n                \"EN-301-549\",\n                \"EN-9.4.1.2\"\n            ],\n            \"updated_at\": \"2024-03-05T12:45:14\",\n            \"url\": \"https://github.blog/2024-02-29-game-bytes-february-2024/\"\n        },\n        \"id\": \"26218481\",\n        \"relationships\": {\n            \"report\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576\"\n                }\n            },\n            \"web_page\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576/web_pages/8413311\"\n                }\n            }\n        },\n        \"type\": \"a11y_issue\"\n    },\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/a11y_issues/#list-accessibility-issues-on-a-web-page","title":"List Accessibility issues on a web page","text":"<p>To list the accessibility issues found on a web page, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues</code>.</p> <p>Example: list A11Y issues for a web page</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/a11y_issues\n</code></pre>"},{"location":"api/a11y_issues/#filtering-by-help","title":"Filtering by help","text":"<p>To include only the accessibility issues of a given kind, use the <code>filter[help]</code> option.</p> <p>Example: filter A11Y issues for a web page about \"landmark\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/a11y_issues?filter[help]=landmark\n</code></pre>"},{"location":"api/a11y_issues/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the issues for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>Example: filter A11Y issues for a web page tagged with \"wcag2a\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/a11y_issues?filter[tags][mode]=any&amp;filter[tags][list]=wcag2a\n</code></pre>"},{"location":"api/a11y_issues/#retrieve-an-accessibility-issue","title":"Retrieve an Accessibility issue","text":"<p>To show an individual Accessibility issue on a web page, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/a11y_issues/$A11Y_ISSUE_ID</code></p> <p>Example: retrieve A11Y issue for a web page</p> <pre><code>GET `/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/a11y_issues/$A11Y_ISSUE_ID\n</code></pre>"},{"location":"api/authorization/","title":"Authorization","text":"<p>In order to interact with the Rocket Validator API, you must authenticate using an API token.</p> <p>You can generate an API token for your account on the API tokens section. When you do so, you can also define its scope (read-only or write permission). Using the token on an API request you'll get access to the resources on your account. If you ever need to revoke access for a token, just delete it.</p> <p>Keep in mind that an API token works as a complete authentication method, acting as a substitute of your username and password pair. It's important that you keep these tokens secure - on generation, the web interface will only show the token once, it's your responsibility to keep it secure.</p> <p>Once you have a token, you must include a bearer-type <code>Authorization</code> header.</p> <p>Example: authenticating your requests</p> <pre><code>curl https://rocketvalidator.com/api/v1/reports \\\n   --header 'Authorization: Bearer YOURAPITOKEN'\n</code></pre> <p>All requests must be made via HTTPS.</p> <p>The authorization header must be present in all requests, but for the sake of brevity we'll omit it in the rest of the documentation.</p>"},{"location":"api/common_a11y_issues/","title":"Common Accessibility Issues <sup>Pro</sup>","text":"<p>Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue <code>\"Form elements must have labels\"</code> may affect many Web Pages on the same report.</p> <p>A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.</p>"},{"location":"api/common_a11y_issues/#attributes","title":"Attributes","text":"ID Unique ID for this issue. Report ID ID of the report. Help Brief description of the issue. Help URL URL where you can find more info about the issue and proposed fixes. How Many Total times this issue has been found in the web pages for the report. Impact Severity of the issue. Impact Order Numerical representation of the Impact. Tags Comma-separated list of tags to categorize this issue. Inserted At Timestamp when the Accessibility Issue was created. Updated At Timestamp when the Accessibility Issue was last updated."},{"location":"api/common_a11y_issues/#relationships","title":"Relationships","text":"Web Pages The list of Web Pages affected by this issue."},{"location":"api/common_a11y_issues/#example","title":"Example","text":"<p>Example: Common Accessibility Issue</p> <pre><code>    {\n        \"data\": {\n            \"attributes\": {\n                \"help\": \"ARIA attributes must conform to valid names\",\n                \"help_url\": \"https://dequeuniversity.com/rules/axe/4.8/aria-valid-attr?application=axe-puppeteer\",\n                \"how_many\": 1,\n                \"impact\": \"critical\",\n                \"impact_order\": 4,\n                \"report_id\": \"72eecced-8472-41fc-b194-59b7496c7576\",\n                \"tags\": [\n                    \"cat.aria\",\n                    \"wcag2a\",\n                    \"wcag412\",\n                    \"EN-301-549\",\n                    \"EN-9.4.1.2\"\n                ]\n            },\n            \"id\": \"26218481\",\n            \"relationships\": {\n                \"web_pages\": {\n                    \"links\": {\n                        \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576/web_pages?filter[common_a11y_issue_id]=26218481\"\n                    }\n                }\n            },\n            \"type\": \"common_a11y_issue\"\n        },\n        \"jsonapi\": {\n            \"version\": \"1.0\"\n        }\n    }\n</code></pre>"},{"location":"api/common_a11y_issues/#list-common-a11y-issues-on-a-report","title":"List Common A11Y Issues on a Report","text":"<p>To list the Common Accessibility issues found on a report, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/common_a11y_issues</code>.</p> <p>Example: list the Common Accessibility issues found on a report</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues\n</code></pre>"},{"location":"api/common_a11y_issues/#filtering-by-help","title":"Filtering by help","text":"<p>To include only the accessibility issues of a given kind, use the <code>filter[help]</code> option.</p> <p>Example: filter A11Y issues for a report about \"landmark\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues?filter[help]=landmark\n</code></pre>"},{"location":"api/common_a11y_issues/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the issues for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>Example: filter A11Y issues for a report tagged with \"wcag2a\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues?filter[tags][mode]=any&amp;filter[tags][list]=wcag2a\n</code></pre>"},{"location":"api/common_a11y_issues/#retrieve-a-common-accessibility-issue","title":"Retrieve a Common Accessibility Issue","text":"<p>To retrieve a Common Accessibility Issue on a given Report, send a GET request to <code>/api/v1/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID</code>.</p> <p>Example: retrieve a Common Accessibility issue on a report</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_a11y_issues/$COMMON_A11Y_ISSUE_ID\n</code></pre>"},{"location":"api/common_a11y_issues/#list-the-web-pages-affected-by-a-common-a11y-issue","title":"List the Web Pages affected by a Common A11Y Issue","text":"<p>To list the Web Pages that are affected by a given issue, refer to Filtering by A11Y issue on the Web pages endpoint.</p>"},{"location":"api/common_html_issues/","title":"Common HTML Issues","text":"<p>Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue <code>\"The \u201ccenter\u201d element is obsolete. Use CSS instead.\"</code> may affect many Web Pages on the same report.</p> <p>A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.</p>"},{"location":"api/common_html_issues/#attributes","title":"Attributes","text":"ID Unique ID for this Common HTML issue. Report ID Id of the related report. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. Tags Comma-separated list of tags to categorize this issue. How Many Total times this issue has been found in the web pages for the report."},{"location":"api/common_html_issues/#relationships","title":"Relationships","text":"Web Pages The list of Web Pages affected by this issue."},{"location":"api/common_html_issues/#example","title":"Example","text":"<p>Example: Common HTML Issue</p> <pre><code>{\n        \"data\": {\n            \"attributes\": {\n                \"how_many\": 132,\n                \"issue_sub_type\": null,\n                \"issue_type\": \"error\",\n                \"message\": \"Duplicate attribute \u201cid\u201d.\",\n                \"report_id\": \"72eecced-8472-41fc-b194-59b7496c7576\",\n                \"tags\": [\"duplicate attribute\"],\n            },\n            \"id\": \"144375908\",\n            \"relationships\": {\n                \"web_pages\": {\n                    \"links\": {\n                        \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576/web_pages?filter[common_html_issue_id]=144375908\"\n                    }\n                }\n            },\n            \"type\": \"common_html_issue\"\n        },\n        \"jsonapi\": {\n            \"version\": \"1.0\"\n        }\n    }\n</code></pre>"},{"location":"api/common_html_issues/#list-common-html-issues-on-a-report","title":"List Common HTML Issues on a Report","text":"<p>To list the Common HTML issues found on a report, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/common_html_issues</code>.</p> <p>Example: list the Common HTML issues found on a report</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_html_issues\n</code></pre>"},{"location":"api/common_html_issues/#filtering-by-message","title":"Filtering by message","text":"<p>To include only the HTML issues of a given kind, use the <code>filter[message]</code> option.</p> <p>Example: filter HTML issues for a report about \"table\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_html_issues?filter[message]=table\n</code></pre>"},{"location":"api/common_html_issues/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the issues for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>Example: filter HTML issues for a report tagged with \"label\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_html_issues?filter[tags][mode]=any&amp;filter[tags][list]=label\n</code></pre>"},{"location":"api/common_html_issues/#retrieve-a-common-html-issue","title":"Retrieve a Common HTML Issue","text":"<p>To retrieve a Common HTML Issue on a given Report, send a GET request to <code>/api/v1/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID</code>.</p> <p>Example: retrieve a Common HTML issue on a report</p> <pre><code>GET /api/v1/reports/$REPORT_ID/common_html_issues/$COMMON_HTML_ISSUE_ID\n</code></pre>"},{"location":"api/common_html_issues/#list-the-web-pages-affected-by-a-common-html-issue","title":"List the Web Pages affected by a Common HTML Issue","text":"<p>To list the Web Pages that are affected by a given issue, refer to Filtering by HTML issue on the Web pages endpoint.</p>"},{"location":"api/devices/","title":"Devices <sup>Pro</sup>","text":"<p>Device Viewport Emulation is a Rocket Validator Pro feature that you can use to simulate a device viewport in your site validation reports.</p> <p>Using the Rocket Validator API you can get the complete list of available devices, and all the details for their specific attributes. You can also check this list at the devices section of the Rocket Validator site.</p>"},{"location":"api/devices/#attributes","title":"Attributes","text":"ID Unique Device ID. Name Name of the device. Width Viewport width, in pixels. Height Viewport height, in pixels. Device Scale Factor Scale factor of the device. Is Mobile True if it's a mobile device. Is Landscape True if it's a landscape device. Has Touch True if it's touch enabled. User Agent User Agent string. Check the User Agents section to get all the UA strings for the given device."},{"location":"api/devices/#example","title":"Example","text":"<p>Example: Device structure</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"device_scale_factor\": 3,\n      \"has_touch\": true,\n      \"height\": 640,\n      \"is_landscape\": false,\n      \"is_mobile\": true,\n      \"name\": \"Galaxy Note 3\",\n      \"user_agent\": \"Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\",\n      \"width\": 360\n    },\n    \"id\": \"888f56c2-5e28-404b-8ac1-e71c414694bf\",\n    \"type\": \"device\"\n  },\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }\n}\n</code></pre>"},{"location":"api/devices/#list-of-devices","title":"List of Devices","text":"<p>To list all the available Devices, send a <code>GET</code> request to <code>/api/v1/devices</code>.</p> <p><code>GET /api/v1/devices</code></p>"},{"location":"api/devices/#retrieve-a-device","title":"Retrieve a Device","text":"<p>To retrieve an individual Device, send a <code>GET</code> request to <code>/api/v1/devices/$DEVICE_ID</code>.</p> <p><code>GET /api/v1/devices/$DEVICE_ID</code></p>"},{"location":"api/devices/#default-device","title":"Default Device","text":"<p>When a report is run without specifying a device, the default device is used.</p> <p>To get the properties of the default device, send a <code>GET</code> request to <code>/api/v1/devices/default</code>.</p> <p>Example: GET /api/v1/devices/default</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"device_scale_factor\": 1,\n      \"has_touch\": false,\n      \"height\": 600,\n      \"is_landscape\": false,\n      \"is_mobile\": false,\n      \"name\": \"Default\",\n      \"user_agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4512.0 Safari/537.36\",\n      \"width\": 800\n    },\n    \"id\": \"\",\n    \"type\": \"device\"\n  },\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }\n}\n</code></pre>"},{"location":"api/guest_accounts/","title":"Guest Accounts <sup>Pro</sup>","text":"<p>Guest Accounts is a Rocket Validator Pro feature that lets you invite other Rocket Validator users to share your subscription resources in terms of validation credits and features, without compromising your main account credentials.</p> <p>Using the Rocket Validator API you can completely manage your guest accounts by listing, creating, updating or deleting guest accounts.</p>"},{"location":"api/guest_accounts/#attributes","title":"Attributes","text":"Id Unique ID for the guest account. Also known as \"guest token\". Invitation URL For an available invitation, public URL to be shared with the guest so it can be accepted. Max Usage Maximum number of allowed credits per month. Current Usage Used credits for the current month. Will be reset to 0 at the beginning of each month. Guest Name and email of the guest user that accepted the invitation. Inserted At Timestamp with the date of creation of this guest account. Updated At Timestamp with the date of last update of this guest account. Accepted At Timestamp with the date of acceptance of this guest account."},{"location":"api/guest_accounts/#example","title":"Example","text":"<p>Example: Guest Account</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"accepted_at\": \"2022-02-22T15:11:28\",\n      \"current_usage\": 0,\n      \"guest\": {\n        \"email\": \"jean@example.com\",\n        \"name\": \"Jean Example\"\n      },\n      \"inserted_at\": \"2022-01-23T14:49:46\",\n      \"invitation_url\": null,\n      \"max_usage\": 5000,\n      \"updated_at\": \"2024-05-03T08:31:18\"\n    },\n    \"id\": \"G30629C8BD\",\n    \"type\": \"guest_account\"\n  },\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }\n}\n</code></pre>"},{"location":"api/guest_accounts/#list-of-guest-accounts","title":"List of Guest Accounts","text":"<p>To list all your guest accounts, send a <code>GET</code> request to <code>/api/v1/guest_accounts</code>.</p> <p><code>GET /api/v1/guest_accounts</code></p>"},{"location":"api/guest_accounts/#retrieve-a-guest-account","title":"Retrieve a Guest Account","text":"<p>To retrieve an individual Guest Account, send a <code>GET</code> request to <code>/api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code>.</p> <p><code>GET /api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code></p>"},{"location":"api/guest_accounts/#create-a-guest-account","title":"Create a Guest Account","text":"<p>To create a Guest Account, send a <code>POST</code> request to <code>/api/v1/guest_accounts</code>, with a JSON payload in the body including the <code>max_usage</code> attribute.</p> <p>Example: POST https://rocketvalidator.com/api/v1/guests_accounts</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"max_usage\": 1000\n    }\n  }\n}\n</code></pre>"},{"location":"api/guest_accounts/#update-a-guest-account","title":"Update a Guest Account","text":"<p>To update an existing Guest Account, send a <code>PATCH</code> request to <code>/api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code>.</p> <p>You can include any of these attributes in the payload:</p> <ul> <li><code>current_usage</code>. Positive number, indicating the current usage for the ongoing month.</li> <li><code>max_usage</code>. Positive number, indicating the maximum allowed credits per month.</li> </ul> <p>Example: PATCH https://rocketvalidator.com/api/v1/guests_accounts/$GUEST_ACCOUNT_ID</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"current_usage\": 500,\n      \"max_usage\": 2000\n    }\n  }\n}\n</code></pre>"},{"location":"api/guest_accounts/#delete-a-guest-account","title":"Delete a Guest Account","text":"<p>To delete an individual Guest Account from your account, send a <code>DELETE</code> request to <code>/api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code>.</p> <p><code>DELETE https://rocketvalidator.com/api/v1/guest_accounts/$GUEST_ACCOUNT_ID</code></p>"},{"location":"api/html_issues/","title":"HTML Issues","text":"<p>An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator.</p>"},{"location":"api/html_issues/#attributes","title":"Attributes","text":"ID Unique ID for this HTML issue. Issue Type Error or Warning Issue Sub Type Optional, provides additional info on the type of the issue. Message Brief description of the issue. HTML Code snippets showing the affected elements, each one including an extract and its coordinates. Tags Comma-separated list of tags to categorize this issue. Inserted At Timestamp when the HTML Issue was created. Updated At Timestamp when the HTML Issue was last updated."},{"location":"api/html_issues/#relationships","title":"Relationships","text":"Report The Report that this HTML Issue belongs to. Web Page The Web Page that this HTML Issue belongs to."},{"location":"api/html_issues/#example","title":"Example","text":"<p>Example: HTML Issue</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"how_many\": 3,\n            \"html\": [\n                {\n                    \"coordinates\": {\n                        \"first_column\": null,\n                        \"first_line\": 210,\n                        \"hilite_length\": 1,\n                        \"hilite_start\": 15,\n                        \"last_column\": 22,\n                        \"last_line\": 210\n                    },\n                    \"extract\": \"=\\\"game-news\\\" id=\\\"game-news\\\" &gt;G\"\n                },\n                {\n                    \"coordinates\": {\n                        \"first_column\": null,\n                        \"first_line\": 211,\n                        \"hilite_length\": 1,\n                        \"hilite_start\": 15,\n                        \"last_column\": 117,\n                        \"last_line\": 211\n                    },\n                    \"extract\": \"f0%9f%8d%93\\\" id=\\\"madelines-bac\"\n                },\n                {\n                    \"coordinates\": {\n                        \"first_column\": null,\n                        \"first_line\": 261,\n                        \"hilite_length\": 1,\n                        \"hilite_start\": 15,\n                        \"last_column\": 48,\n                        \"last_line\": 261\n                    },\n                    \"extract\": \"f0%9f%92%a8\\\" id=\\\"driftmania-%f\"\n                }\n            ],\n            \"tags\": [\"duplicate attribute\"],\n            \"inserted_at\": \"2024-03-05T12:44:34\",\n            \"issue_sub_type\": null,\n            \"issue_type\": \"error\",\n            \"message\": \"Duplicate attribute \u201cid\u201d.\",\n            \"updated_at\": \"2024-03-05T12:44:34\"\n        },\n        \"id\": \"144375908\",\n        \"relationships\": {\n            \"report\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576\"\n                }\n            },\n            \"web_page\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/72eecced-8472-41fc-b194-59b7496c7576/web_pages/8413311\"\n                }\n            }\n        },\n        \"type\": \"html_issue\"\n    },\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/html_issues/#list-html-issues-on-a-web-page","title":"List HTML issues on a web page","text":"<p>To list the HTML issues found on a web page, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues</code>.</p> <p>Example: list the HTML issues found on a web page</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues\n</code></pre>"},{"location":"api/html_issues/#filtering-by-message","title":"Filtering by message","text":"<p>To include only the HTML issues of a given kind, use the <code>filter[message]</code> option.</p> <p>Example: filter HTML issues for a web page about \"table\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/html_issues?filter[message]=table\n</code></pre>"},{"location":"api/html_issues/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the issues for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>Example: filter HTML issues for a web page tagged with \"label\"</p> <pre><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/html_issues?filter[tags][mode]=any&amp;filter[tags][list]=label\n</code></pre>"},{"location":"api/html_issues/#retrieve-an-html-issue","title":"Retrieve an HTML issue","text":"<p>To show an individual HTML issue on a web page, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEB_PAGE_ID/html_issues/$HTML_ISSUE_ID</code></p> <p>Example: retrieve HTML issue for a web page</p> <pre><code>GET `/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID/html_issues/$HTML_ISSUE_ID\n</code></pre>"},{"location":"api/mutings/","title":"Mutings <sup>Pro</sup>","text":"<p>A Muting represents a rule you've defined to automatically mute certain issues on your reports. Read more about Muting Rules.</p> <p>Think of a Muting as a rule that defines a matching URL and issue message - when Rocket Validator finds issues on your web pages, they'll be automatically muted if there's a match.</p>"},{"location":"api/mutings/#attributes","title":"Attributes","text":"ID Unique Muting ID. URL Match A string containing a match for a URL. It can be a full URL or any substring within it. Message A string defining a match for a Issue. It can be a full issue message, or part of it. Comment A brief comment to publicly explain why this muting is needed."},{"location":"api/mutings/#example","title":"Example","text":"<p>Example: Muting structure</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"comment\": \"Non standard but it's a Safari extension\",\n      \"id\": 868,\n      \"message\": \"Attribute \u201cautocorrect\u201d not allowed on element \u201cinput\u201d at this point.\",\n      \"url_match\": \"https://dummy.rocketvalidator.com/\"\n    },\n    \"id\": \"2513\",\n    \"type\": \"muting\"\n  },\n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }\n}\n</code></pre>"},{"location":"api/mutings/#create-a-muting","title":"Create a Muting","text":"<p>To create a Muting, send a <code>POST</code> request to <code>/api/v1/mutings</code>, with a JSON payload in the body including its attributes. There are two required attributes:</p> <ul> <li><code>url_match</code>. A string containing a match for a URL. It can be a full URL or any substring within it.</li> <li><code>message</code>. A string defining a match for an Issue. It can be a full issue message, or part of it.</li> </ul>"},{"location":"api/mutings/#optional-attributes","title":"Optional attributes","text":"<ul> <li><code>comment</code>. A brief comment to publicly explain why this muting is needed.</li> </ul>"},{"location":"api/mutings/#example_1","title":"Example","text":"<p>The next example shows how to create a muting that will silence all issues mentioning <code>image needs alt</code> on all web pages where the URL contains <code>example.com</code></p> <p>Example: POST /api/v1/mutings</p> <pre><code>{\n  \"data\": {\n    \"attributes\": {\n      \"url_match\": \"example.com\",\n      \"message\": \"image needs alt\",\n      \"comment\": \"a comment\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/mutings/#retrieve-a-muting","title":"Retrieve a Muting","text":"<p>To retrieve an individual Muting in your account, send a <code>GET</code> request to <code>/api/v1/mutings/$MUTING_ID</code>.</p> <p><code>GET /api/v1/mutings/$MUTING_ID</code></p>"},{"location":"api/mutings/#list-your-mutings","title":"List your Mutings","text":"<p>To list all your Mutings in your account, send a <code>GET</code> request to <code>/api/v1/mutings</code>.</p> <p><code>GET /api/v1/mutings</code></p>"},{"location":"api/mutings/#list-all-mutings-applied-to-a-report","title":"List all mutings applied to a report","text":"<p>To list all the mutings that have been applied to a given report, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/mutings</code></p> <p><code>GET /api/v1/reports/$REPORT_ID/mutings</code></p>"},{"location":"api/mutings/#delete-a-muting","title":"Delete a Muting","text":"<p>To delete an individual Muting from your account, send a <code>DELETE</code> request to <code>/api/v1/mutings/$MUTING_ID</code>.</p> <p><code>DELETE /api/v1/mutings/$MUTING_ID</code></p>"},{"location":"api/pagination/","title":"Pagination","text":"<p>When the list of entities returned by a request is paginated, a <code>links</code> key will be included on the JSON response body with links to the <code>first</code>, <code>last</code>, <code>next</code>, <code>prev</code> and <code>self</code> pages.</p> <p>Pagination is controlled using the following parameters:</p> page[number] What page to retrieve. Defaults to 1. page[size] Number of entries per page. Defaults to 25, minimum is 1, maximum is 100. <p>Using Square Brackets in Parameter Names</p> <p>Pagination parameters use Query Parameter Families, which are sets of query parameters with a common base name. Although square brackets should be URL-encoded with <code>%5B</code> for <code>[</code> and <code>%5D</code> for <code>]</code>, our servers will accept unencoded square brackets, which leads to increased URL legibility.</p> <p>In the examples where we use curl, we switch off the URL globbing function (with a simple <code>-g</code> option) to let curl know that we're OK with using square brackets.</p> <p>Example: Getting the 3rd page of the reports list, with 10 reports per page</p> <pre><code>curl -g https://rocketvalidator.com/api/v1/reports?page[number]=3&amp;page[size]=10 \n</code></pre>"},{"location":"api/reports/","title":"Reports","text":"<p>A Report represents a site validation report you've created in Rocket Validator. It contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found.</p>"},{"location":"api/reports/#attributes","title":"Attributes","text":"ID Unique report ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then (if Deep Crawl is enabled) recursively include the linked web pages from those, until the Max Pages limit is reached. Initial URLs <sup>Pro</sup> A list of URLs to be included on the first run of the Spider. Newline-separated. Exclusions <sup>Pro</sup> A list of URLs or partial paths to tell the Spider to skip matching URLs. Newline-separated. Domain Domain from the starting URL. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Num Pages Actual number of web pages included in the report found by the Spider. Rate Limit Maximum allowed requests per second. Deep Crawl <sup>Pro</sup> Boolean to indicate whether deep crawling was enabled or not. If it's enabled, the Spider witll recursively include more linked pages from the pages it finds, until the Max Pages limit is reached. Dynamic Crawler <sup>Pro</sup> Boolean to indicate whether Dynamic Crawler should be used instead of the default static crawler. The Dynamic Crawler renders each web page found using a headless browser, so it's able to find links in JavaScript-powered web pages. Perform HTML Checks Boolean to indicate whether or not HTML checks will be performed on the web pages found. Perform A11Y Checks <sup>Pro</sup> Boolean to indicate whether or not accessibility checks will be  performed on the web pages found. Device Rotated <sup>Pro</sup> Boolean to indicate if the emulated device viewport is rotated. The device viewport used in the report is shown via the Device relationship. Checks      Details for the checks enabled for this report.      HTML              Details for the HTML checks, if enabled (<code>null</code> otherwise).              Status HTML checks status, showing the number of checks <code>pending</code>, <code>checked</code> and <code>failed</code>. Issues Counters for the number of HTML <code>errors</code> and <code>warnings</code>. This sums the number of HTML issues on all the web pages for a particular report. A11Y <sup>Pro</sup>              Details for the Accessibility checks, if enabled (<code>null</code> otherwise).              Status Accessibility checks status, showing the number of checks <code>pending</code>, <code>checked</code> and <code>failed</code>. Issues Counters for the number of Accessibility <code>errors</code> and <code>warnings</code>. Also includes the number of issues per each <code>severity</code> level (<code>minor</code>, <code>moderate</code>, <code>serious</code> and <code>critical</code>). This sums the number of Accessibility issues on all the web pages for a particular report. Tags Comma-separated list of tags to categorize this report. Inserted At Timestamp when the report was created. Updated At Timestamp when the report was last updated. Last Checked At Timestamp when the report was last checked."},{"location":"api/reports/#relationships","title":"Relationships","text":"Web Pages The list of web pages found by the Spider for that report. Common HTML issues The HTML issues found on the web pages for that report, if any, grouped together by their kind. Common A11Y issues <sup>Pro</sup> The accessibility issues found on the web pages for that report, if any, grouped together by their kind. Schedule <sup>Pro</sup> The Scheduled Report that initiated this Report, if any. Device <sup>Pro</sup> The emulated device viewport used in the accessibility checks. Guest Token <sup>Pro</sup> If this report was created by one of your guest accounts, its guest account will be linked here. Mutings <sup>Pro</sup> Mutings applied to this report, if any."},{"location":"api/reports/#example","title":"Example","text":"<p>Example: Report example</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n        \"checks\": {\n            \"a11y\": {\n            \"issues\": {\n                \"errors\": 51,\n                \"severity\": {\n                \"critical\": 0,\n                \"minor\": 0,\n                \"moderate\": 1,\n                \"serious\": 50,\n                \"total\": {\n                    \"errors\": 51,\n                    \"total\": 51,\n                    \"warnings\": 0\n                }\n                },\n                \"warnings\": 0\n            },\n            \"status\": {\n                \"checked\": 7,\n                \"failed\": 0,\n                \"pending\": 0\n            }\n            },\n            \"html\": {\n            \"issues\": {\n                \"errors\": 17,\n                \"warnings\": 105\n            },\n            \"status\": {\n                \"checked\": 7,\n                \"failed\": 0,\n                \"pending\": 0\n            }\n            }\n        },\n        \"deep_crawl\": true,\n        \"device_rotated\": false,\n        \"domain\": \"dummy.rocketvalidator.com\",\n        \"dynamic_crawler\": false,\n        \"exclusions\": [],\n        \"initial_urls\": [],\n        \"inserted_at\": \"2024-05-14T13:54:29\",\n        \"last_checked_at\": \"2024-05-14T13:54:49\",\n        \"max_pages\": 100,\n        \"num_pages\": 7,\n        \"perform_a11y_checks\": true,\n        \"perform_html_checks\": true,\n        \"rate_limit\": 5,\n        \"starting_url\": \"https://dummy.rocketvalidator.com\",\n        \"tags\": [\n            \"dummy\"\n        ],\n        \"updated_at\": \"2024-05-14T13:54:49\"\n        },\n        \"id\": \"2455a63a-7e16-4cbf-8455-6c9a88195142\",\n        \"relationships\": {\n        \"common_a11y_issues\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/common_a11y_issues\"\n            }\n        },\n        \"common_html_issues\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/common_html_issues\"\n            }\n        },\n        \"device\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/devices/c4f0f4be-e6dd-498a-b049-205be3604505\"\n            }\n        },\n        \"excluded_urls\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/excluded_urls\"\n            }\n        },\n        \"mutings\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/mutings\"\n            }\n        },\n        \"web_pages\": {\n            \"links\": {\n            \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/web_pages\"\n            }\n        }\n        },\n        \"type\": \"report\"\n    },\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/reports/#create-a-report","title":"Create a Report","text":"<p>To create a Report, send a <code>POST</code> request to <code>/api/v1/reports</code>, with a JSON payload in the body including its attributes. The only required attribute is the starting URL.</p> <ul> <li><code>starting_url</code>. The initial URL where the Spider will start on.</li> </ul>"},{"location":"api/reports/#optional-attributes","title":"Optional attributes","text":"<p>The following attributes are optional:</p> <ul> <li><code>max_pages</code>. The Spider will recursively follow internal links found until this limit is reached. Defaults to 10.</li> <li><code>rate_limit</code>. Limit on the number of requests per second. Defaults to 1.</li> <li><code>perform_html_checks</code>. Boolean to enable checks using the W3C Validator software on the Web Pages found. Defaults to true.</li> <li><code>tags</code>. Comma-separated list of tags.</li> </ul>"},{"location":"api/reports/#pro-attributes","title":"Pro attributes","text":"<p>The following attributes are only available for users with a Pro or Enterprise subscription:</p> <ul> <li><code>perform_a11y_checks</code>. Boolean to enable checks using Deque Axe Core software on the Web Pages found. Defaults to false.</li> <li><code>deep_crawl</code>. Boolean to enable deep crawling. Defaults to true.</li> <li><code>initial_urls</code>. Newline-separated list of URLs.</li> <li><code>exclusions</code>. Newline-separated list of paths.</li> <li><code>device_id</code>. Id of the device to be used for viewport emulation. Check the device list to see the available devices.</li> <li><code>device_rotated</code>. Boolean to indicate the emulated device should be rotated. Defaults to false.</li> </ul>"},{"location":"api/reports/#examples","title":"Examples","text":"<p>The next example shows how to create a report for a given starting URL. This will use the defaults of 10 web pages, checked only for HTML issues:</p> <p>Example: POST /api/v1/reports</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"starting_url\": \"https://dummy.rocketvalidator.com\"\n        }\n    }\n}\n</code></pre> <p>In the following example we're using the advanced options to create a 1,000 web pages report, with HTML and Accessibility checks, on a rotated iPhone 12/13 Pro device, tagged as <code>dev</code>, <code>dummmy</code>.</p> <p>Example: POST /api/v1/reports</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"starting_url\": \"https://dummy.rocketvalidator.com\",\n            \"max_pages\": 1000,\n            \"rate_limit\": 3,\n            \"perform_html_checks\": true,\n            \"perform_a11y_checks\": true,\n            \"deep_crawl\": true,\n            \"device_id\": \"c4f0f4be-e6dd-498a-b049-205be3604505\",\n            \"device_rotated\": true,\n            \"tags\": \"dev,dummy\"\n        }\n    }\n}\n</code></pre> <p>Rocket Validator will return the created Report with a status of a <code>201 Created</code>, and will start scanning the Web Pages found. You can then refresh the Report by its ID (see Retrieve a Report) to check the progress of the Report, including the checks status, pending count and issues found.</p> <p>If the Report can't be created, a <code>422 Unprocessable Entity</code> status will be returned, containing details about the the errors found.</p> <p>Example: POST /api/v1/reports</p> <pre><code>{\n    \"errors\": [{\n        \"detail\": \"Starting url has invalid format\",\n        \"source\": {\n            \"pointer\": \"/data/attributes/starting_url\"\n        },\n        \"title\": \"has invalid format\"\n    }],\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/reports/#retrieve-a-report","title":"Retrieve a Report","text":"<p><code>GET /api/v1/reports/$REPORT_ID</code></p>"},{"location":"api/reports/#list-your-reports","title":"List your Reports","text":"<p><code>GET /api/v1/reports</code></p>"},{"location":"api/reports/#filtering-by-url","title":"Filtering by URL","text":"<p>To include only the Reports for a given <code>starting_url</code>, use the <code>filter[url]</code> option.</p> <p>For example:</p> <p><code>GET /api/v1/reports?filter[url]=dummy.rocketvalidator.com</code></p>"},{"location":"api/reports/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the Reports for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>For example, this will return all reports tagged with any of <code>dev</code> or <code>dummy</code></p> <p><code>GET /api/v1/reports?filter[tags][mode]=any&amp;filter[tags][list]=dev,dummy</code></p>"},{"location":"api/reports/#filtering-by-schedule","title":"Filtering by schedule","text":"<p>To show the reports created by a Schedule <sup>Pro</sup>, use the <code>filter[schedule_id]</code> option.</p> <p>For example:</p> <p><code>GET /api/v1/reports?filter[schedule_id]=$SCHEDULE_ID</code></p>"},{"location":"api/reports/#filtering-by-guest-accounts","title":"Filtering by Guest Accounts","text":"<p>If you have Guest Accounts <sup>Pro</sup>, you can filter the report list so that it also contains the reports created by your guests.</p> <p>By default, the Reports API shows only the reports created by the main account:</p> <p><code>GET /api/v1/reports</code></p> <p>This is equivalent to passing <code>created_by=me</code> like this:</p> <p><code>GET /api/v1/reports?created_by=me</code></p> <p>To get the list of all reports (created by main account or by guests), pass <code>created_by=all</code> like this:</p> <p><code>GET /api/v1/reports?created_by=all</code></p> <p>To get only the list of reports created by guests, pass <code>created_by=guests</code> like this:</p> <p><code>GET /api/v1/reports?created_by=guests</code></p> <p>To get only the list of reports created by an individual guest, pass the token like this:</p> <p><code>GET /api/v1/reports?created_by=guests&amp;guest_token=1234</code></p> <p>Each report will include the <code>guest_token</code> used as an attribute.</p> <p>You can find the token for each guest account in the Guests section, both in the guest card, and also in the CSV export.</p>"},{"location":"api/reports/#sorting-reports","title":"Sorting reports","text":"<p>By default the list of reports is returned in descending order of the <code>last_checked_at</code> timestamp, that is, the most recent reports are shown first.</p> <p>If you want to change the sorting order, you can do that using the <code>sort</code> parameter to specify the attribute to sort by, combined with the direction (<code>asc</code> for ascending, <code>desc</code> for descending).</p> <p>The sortable attributes are:</p> url Starting URL num_web_pages Number of web pages html_issues Number of HTML issues (errors + warnings) html_errors Number of HTML errors html_warnings Number of HTML warnings a11y_issues Number of accessibility issues (errors + warnings) a11y_errors Number of accessibility errors a11y_warnings Number of accessibility warnings last_checked_at Timestamp for the last time a report was checked <p>Combining one of these attributes with the <code>asc</code> or <code>desc</code> direction modifier, we get the parameter to use. For example, to sort by URL in descending order we would use <code>url-desc</code>.</p> <p>Here is a table showing all possible combinations for your convenience:</p> Sorting key Explanation Example <code>url-asc</code> Starting URL, ascending <code>GET /api/v1/report?sort=url-asc</code> <code>url-desc</code> Starting URL, descending <code>GET /api/v1/report?sort=url-desc</code> <code>num_web_pages-asc</code> Number of web pages, ascending <code>GET /api/v1/report?sort=num_web_pages-asc</code> <code>num_web_pages-desc</code> Number of web pages, descending <code>GET /api/v1/report?sort=num_web_pages-desc</code> <code>html_issues-asc</code> Number of HTML issues (errors + warnings), ascending <code>GET /api/v1/report?sort=html_issues-asc</code> <code>html_issues-desc</code> Number of HTML issues (errors + warnings), descending <code>GET /api/v1/report?sort=html_issues-desc</code> <code>html_errors-asc</code> Number of HTML errors, ascending <code>GET /api/v1/report?sort=html_errors-asc</code> <code>html_errors-desc</code> Number of HTML errors, descending <code>GET /api/v1/report?sort=html_errors-desc</code> <code>html_warnings-asc</code> Number of HTML warnings, ascending <code>GET /api/v1/report?sort=html_warnings-asc</code> <code>html_warnings-desc</code> Number of HTML warnings, descending <code>GET /api/v1/report?sort=html_warnings-desc</code> <code>a11y_issues-asc</code> Number of accessibility issues (errors + warnings), ascending <code>GET /api/v1/report?sort=a11y_issues-asc</code> <code>a11y_issues-desc</code> Number of accessibility issues (errors + warnings), descending <code>GET /api/v1/report?sort=a11y_issues-desc</code> <code>a11y_errors-asc</code> Number of accessibility errors, ascending <code>GET /api/v1/report?sort=a11y_errors-asc</code> <code>a11y_errors-desc</code> Number of accessibility errors, descending <code>GET /api/v1/report?sort=a11y_errors-desc</code> <code>a11y_warnings-asc</code> Number of accessibility warnings, ascending <code>GET /api/v1/report?sort=a11y_warnings-asc</code> <code>a11y_warnings-desc</code> Number of accessibility warnings, descending <code>GET /api/v1/report?sort=a11y_warnings-desc</code> <code>last_checked_at-asc</code> Last checked at, ascending <code>GET /api/v1/report?sort=last_checked_at-asc</code> <code>last-checked_at-desc</code> Last checked at, descending <code>GET /api/v1/report?sort=last_checked_at-desc</code>"},{"location":"api/reports/#delete-a-report","title":"Delete a Report","text":"<p>To delete an individual Report from your account, send a <code>DELETE</code> request to <code>/api/v1/reports/$REPORT_ID</code>.</p> <p><code>DELETE /api/v1/reports/$REPORT_ID</code></p>"},{"location":"api/resources/","title":"Resources","text":"<p>For a better understanding of the Rocket Validator API, a brief description of the resources you can manage is in order.</p>"},{"location":"api/resources/#report","title":"Report","text":"<p>A Report represents a validation report you've created in Rocket Validator. Contains a list of web pages that were found from the starting url, and the HTML and accessibility issues that were found.</p>"},{"location":"api/resources/#web-page","title":"Web Page","text":"<p>A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report.</p>"},{"location":"api/resources/#accessibility-issue-pro","title":"Accessibility Issue <sup>Pro</sup>","text":"<p>An Accessibility Issue corresponds to an issue found on a given web page when being checked by the A11Y checker.</p>"},{"location":"api/resources/#html-issue","title":"HTML Issue","text":"<p>An HTML issue corresponds to an issue found on a given web page when being checked by the HTML validator.</p>"},{"location":"api/resources/#common-accessibility-issue-pro","title":"Common Accessibility Issue <sup>Pro</sup>","text":"<p>Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue <code>\"Form elements must have labels\"</code> may affect many Web Pages on the same report.</p> <p>A Common Accessibility Issue represents a given Accessibility Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.</p>"},{"location":"api/resources/#common-html-issue","title":"Common HTML Issue","text":"<p>Typically, the same kind of issue affects many Web Pages on a given Report. For example, the issue <code>\"The \u201ccenter\u201d element is obsolete. Use CSS instead.\"</code> may affect many Web Pages on the same report.</p> <p>A Common HTML Issue represents a given HTML Issue that is common to many Web Pages, thus showing its details, how many times it's found on the Report, and links to the related Web Pages.</p>"},{"location":"api/resources/#schedule-pro","title":"Schedule <sup>Pro</sup>","text":"<p>A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received.</p> <p>Think of a Scheduled Report as a regular Report, that can be set to run automatically on a defined schedule or via deploy hooks.</p>"},{"location":"api/resources/#device-pro","title":"Device <sup>Pro</sup>","text":"<p>A Device represents the viewport settings for Device Viewport Emulation, including viewport width and height, scale factor, rotation, and others.</p>"},{"location":"api/resources/#muting-pro","title":"Muting <sup>Pro</sup>","text":"<p>A Muting represents a rule you've defined to automatically mute certain issues on your reports, when those issues match the message and URL pattern.</p>"},{"location":"api/resources/#guest-account-pro","title":"Guest Account <sup>Pro</sup>","text":"<p>A Guest Accounts is an invitation to other person in your team to use Rocket Validator without needing to set up a subscription of their own.</p>"},{"location":"api/schedules/","title":"Schedules <sup>Pro</sup>","text":"<p>A Schedule represents a programmed report that will be run on a given periodicity, or after a deploy webhook is received.</p> <p>Think of a Scheduled Report as a regular Report, that can be set to run automatically on a defined schedule or via deploy hooks.</p>"},{"location":"api/schedules/#attributes","title":"Attributes","text":"ID Unique schedule ID. Starting URL Initial URL, that the Spider will use as the initial request. The Spider will include the internal links from that starting URL, and then (if Deep Crawl is enabled) recursively include the linked web pages from those, until the Max Pages limit is reached. Initial URLs A list of URLs to be included on the first run of the Spider. Newline-separated. Exclusions A list of URLs or partial paths to tell the Spider to skip matching URLs. Newline-separated. Perform A11Y Checks Boolean to indicate whether or not accessibility checks will be included. Perform HTML Checks Boolean to indicate whether or not HTML checks will be included. Deep Crawl Boolean to indicate whether deep crawling was enabled or not. If it's enabled, the Spider witll recursively include more linked pages from the pages it finds, until the Max Pages limit is reached. Dynamic Crawler Boolean to indicate whether Dynamic Crawler should be used instead of the default static crawler. The Dynamic Crawler renders each web page found using a headless browser, so it's able to find links in JavaScript-powered web pages. Device Rotated Boolean to indicate if the emulated device viewport is rotated. Max Pages Maximum number of web pages to include. Places a limit on the Spider. Periodicity      Shows when the schedule will be run, using the keys <code>every</code>, which can be one of <code>day / week / month</code>.      <ul> <li>If <code>week</code> is used, then <code>weekday</code> will indicate the week day the schedule is run.</li> <li>If <code>month</code> is used, the field <code>monthday</code> will give the details for the day of the month the schedule will be run on.</li> <li>If this field is <code>null</code>, the schedule will never be run, except through deploy hooks.</li> </ul> Rate Limit Maximum allowed requests per second. Active Boolean to enable or disable the schedule. Only active ones will be run. Tags Comma-separated list of tags to categorize this schedule. Inserted At Timestamp when the schedule was created. Updated At Timestamp when the schedule was last updated. Last Run At Timestamp when the schedule was last run."},{"location":"api/schedules/#relationships","title":"Relationships","text":"Reports The list of reports created via this schedule. Device The emulated device viewport used in the accessibility checks."},{"location":"api/schedules/#example","title":"Example","text":"<p>Example: Schedule example</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"active\": true,\n            \"deep_crawl\": true,\n            \"device_rotated\": false,\n            \"dynamic_crawler\": false,\n            \"exclusions\": [\n                \"/news\",\n                \"/tour\"\n            ],\n            \"initial_urls\": [\n                \"https://github.blog/category/engineering/\",\n                \"https://github.blog/category/open-source/\"\n            ],\n            \"inserted_at\": \"2022-06-18T10:09:10\",\n            \"last_run_at\": \"2022-08-15T08:51:25\",\n            \"max_pages\": 100,\n            \"perform_a11y_checks\": true,\n            \"perform_html_checks\": true,\n            \"periodicity\": {\n                \"every\": \"month\",\n                \"monthday\": 15\n            },\n            \"rate_limit\": 3,\n            \"starting_url\": \"https://github.blog/\",\n            \"tags\": [\n                \"personal\",\n                \"scheduled\"\n            ],\n            \"updated_at\": \"2024-05-15T08:35:02\"\n        },\n        \"id\": \"2d8cc37a-1467-493b-8660-f97e33ca2c0a\",\n        \"relationships\": {\n            \"device\": {\n                \"links\": {\n                    \"related\": \"http://rocketapi.dev:4000/api/v1/devices/default\"\n                }\n            },\n            \"reports\": {\n                \"links\": {\n                    \"related\": \"http://rocketapi.dev:4000/api/v1/reports?filter[schedule_id]=2d8cc37a-1467-493b-8660-f97e33ca2c0a\"\n                }\n            }\n        },\n        \"type\": \"schedule\"\n    },\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/schedules/#create-a-schedule","title":"Create a Schedule","text":"<p>To create a Schedule, send a <code>POST</code> request to <code>/api/v1/schedules</code>, with a JSON payload in the body including its attributes:</p> <ul> <li><code>starting_url</code>. The initial URL where the Spider will start on.</li> <li><code>periodicity</code>. Map with the options for the periodicity. Requires an <code>every</code> key which can be <code>deploy</code>, <code>month</code>, <code>week</code> or <code>day</code>.<ul> <li>If <code>month</code> is used, an additional key <code>monthday</code> is optional, which has to be an integer from 1 to 28 and defaults to 1.</li> <li>If instead <code>week</code> is used, then an additional <code>weekday</code> key is optional, as a string from <code>monday</code>, <code>tuesday</code>, <code>wednesday</code>, <code>thursday</code>, <code>friday</code>, <code>saturday</code> or <code>sunday</code> that defaults to <code>monday</code>.</li> </ul> </li> </ul>"},{"location":"api/schedules/#optional-attributes","title":"Optional attributes","text":"<ul> <li><code>max_pages</code>. The Spider will recursively follow internal links found until this limit is reached. Defaults to 100.</li> <li><code>rate_limit</code>. Limit on the number of requests per second. Defaults to 1.</li> <li><code>perform_html_checks</code>. Boolean to enable checks using the W3C Validator software on the Web Pages found. Defaults to true.</li> <li><code>perform_a11y_checks</code>. Boolean to enable checks using Deque Axe Core software on the Web Pages found. Defaults to false.</li> <li><code>deep_crawl</code>. Boolean to enable deep crawling. Defaults to true.</li> <li><code>dynamic_crawler</code>. Boolean to use the Dynamic Crawler (for JS apps) instead of the default static crawler. Defaults to false.</li> <li><code>active</code>. Boolean to enable the schedule. Defaults to true.</li> <li><code>initial_urls</code>. Newline-separated list of URLs.</li> <li><code>exclusions</code>. Newline-separated list of paths.</li> <li><code>device_id</code>. Id of the device to be used for viewport emulation. Check the device list to see the available devices.</li> <li><code>device_rotated</code>. Boolean to indicate the emulated device should be rotated. Defaults to false.</li> <li><code>tags</code>. Comma-separated list of tags.</li> </ul> <p>The next example shows how to form the body payload with the Schedule attributes.</p> <p>Example: POST /api/v1/schedules</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"starting_url\": \"https://dummy.rocketvalidator.com\",\n            \"max_pages\": 100,\n            \"rate_limit\": 3,\n            \"perform_html_checks\": true,\n            \"perform_a11y_checks\": true,\n            \"deep_crawl\": true,\n            \"dynamic_crawler\": false,\n            \"active\": true,\n            \"periodicity\": {\n                \"every\": \"month\",\n                \"monthday\": 15\n            },\n            \"tags\": \"dev,dummy\",\n            \"device_id\": \"c4f0f4be-e6dd-498a-b049-205be3604505\",\n            \"device_rotated\": true,\n        }\n    }\n}\n</code></pre>"},{"location":"api/schedules/#update-a-schedule","title":"Update a Schedule","text":"<p>To update an existing Schedule, send a <code>PATCH</code> request to <code>/api/v1/schedules/$schedule_id</code>, with a JSON payload in the body including the attributes you want to change.</p>"},{"location":"api/schedules/#retrieve-a-schedule","title":"Retrieve a Schedule","text":"<p>To retrieve an individual Schedule in your account, send a <code>GET</code> request to <code>/api/v1/schedules/$SCHEDULE_ID</code>.</p>"},{"location":"api/schedules/#delete-a-schedule","title":"Delete a Schedule","text":"<p>To delete an individual Schedule from your account, send a <code>DELETE</code> request to <code>/api/v1/schedules/$SCHEDULE_ID</code>.</p> <p>Example: DELETE /api/v1/schedules/$SCHEDULE_ID</p> <pre><code>204 No Content\n</code></pre>"},{"location":"api/schedules/#list-your-schedules","title":"List your Schedules","text":"<p>To list all Schedules in your account, send a <code>GET</code> request to <code>/api/v1/schedules</code>.</p>"},{"location":"api/schedules/#filtering-by-url","title":"Filtering by URL","text":"<p>To include only the Schedules for a given <code>starting_url</code>, use the <code>filter[url]</code> option.</p> <p>Example: return all schedules with url containing \"dummy.rocketvalidator.com\"</p> <pre><code>GET /api/v1/schedules?filter[url]=dummy.rocketvalidator.com\n</code></pre>"},{"location":"api/schedules/#filtering-by-tag","title":"Filtering by tag","text":"<p>To include only the Schedules for a given <code>tags</code> combination, use the <code>filter[tags]</code> options:</p> <ul> <li><code>filter[tags][mode]</code> setting the tag combination mode, which can be <code>any</code>, <code>all</code> or <code>none</code>.</li> <li><code>filter[tags][list]</code> including a comma-separated list of tags.</li> </ul> <p>Example: return all schedules tagged with any of \"dev\" or \"dummy\"</p> <pre><code>GET /api/v1/schedules?filter[tags][mode]=any&amp;filter[tags][list]=dev,dummy\n</code></pre>"},{"location":"api/schedules/#filter-reports-by-schedule","title":"Filter Reports by Schedule","text":"<p>To list all the Reports in your account that have been created via a given Schedule, refer to the Reports documentation.</p>"},{"location":"api/web_pages/","title":"Web Pages","text":"<p>A Web Page represents an HTML web page that has been found by the scraper, and is associated to a Report.</p>"},{"location":"api/web_pages/#attributes","title":"Attributes","text":"ID Unique ID for the Web Page. URL URL of the Web Page. Linked From URL of the web page that links to this web page. That is, where the Spider found first about this Web Page. HTML Check Holds the result of the HTML check on that web page, if it was enabled. Includes the number of <code>errors</code> and <code>warnings</code>, and the <code>status</code> of the check. A11y Check <sup>Pro</sup> Holds the result of the accessibility check on that web page, if it was enabled.   Include the number of accessibility <code>errors</code> and <code>warnings</code>. Also includes the number of issues per each <code>severity</code> level (<code>minor</code>, <code>moderate</code>, <code>serious</code> and <code>critical</code>), and the <code>status</code> of the check. Status Checking status for the web page, depending on the status of the HTML and A11Y checks:    <ul> <li>If both are <code>pending</code>, the status will also be <code>pending</code>.</li> <li>If one is <code>pending</code> and the other is <code>checked</code>, it will be <code>checking</code>.</li> <li>If any check is <code>failed</code>, the status will be <code>failed</code>.</li> <li>If both checks are <code>checked</code>, the status will be <code>checked</code>.</li> </ul> Inserted At Timestamp when the web page was created. Updated At Timestamp when the web page was last updated. Last Checked At Timestamp when the web page was last checked."},{"location":"api/web_pages/#relationships","title":"Relationships","text":"Report The Report that this Web Page belongs to. HTML issues The HTML issues found on this Web Page, if the HTML check was enabled. A11Y issues <sup>Pro</sup> The accessibility issues found on this Web Page, if the accessibility check was enabled."},{"location":"api/web_pages/#example","title":"Example","text":"<p>Example: Web Page example</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"a11y_check\": {\n                \"errors\": 5,\n                \"severity\": {\n                    \"critical\": 0,\n                    \"minor\": 0,\n                    \"moderate\": 0,\n                    \"serious\": 5,\n                    \"total\": {\n                        \"errors\": 5,\n                        \"total\": 5,\n                        \"warnings\": 0\n                    }\n                },\n                \"status\": \"checked\",\n                \"warnings\": 0\n            },\n            \"html_check\": {\n                \"errors\": 2,\n                \"status\": \"checked\",\n                \"warnings\": 14\n            },\n            \"inserted_at\": \"2024-05-14T13:54:31\",\n            \"last_checked_at\": \"2024-05-14T13:54:39\",\n            \"linked_from\": \"https://dummy.rocketvalidator.com\",\n            \"status\": \"checked\",\n            \"updated_at\": \"2024-05-14T13:54:39\",\n            \"url\": \"https://dummy.rocketvalidator.com/about/\"\n        },\n        \"id\": \"8683545\",\n        \"relationships\": {\n            \"a11y_issues\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/web_pages/8683545/a11y_issues\"\n                }\n            },\n            \"html_issues\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142/web_pages/8683545/html_issues\"\n                }\n            },\n            \"report\": {\n                \"links\": {\n                    \"related\": \"https://rocketvalidator.com/api/v1/reports/2455a63a-7e16-4cbf-8455-6c9a88195142\"\n                }\n            }\n        },\n        \"type\": \"web_page\"\n    },\n    \"jsonapi\": {\n        \"version\": \"1.0\"\n    }\n}\n</code></pre>"},{"location":"api/web_pages/#list-web-pages-on-a-report","title":"List Web Pages on a Report","text":"<p>To list the web pages on a Report, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages</code>.</p> <p><code>GET /api/v1/reports/$REPORT_ID/web_pages</code></p>"},{"location":"api/web_pages/#filtering-by-url","title":"Filtering by URL","text":"<p>To include only the web pages for a given <code>url</code>, use the <code>filter[url]</code> option.</p> <p><code>GET /api/v1/reports/$REPORT_ID/web_pages?filter[url]=about</code></p>"},{"location":"api/web_pages/#filtering-by-html-issue","title":"Filtering by HTML issue","text":"<p>To include only the web pages containing a given HTML issue, pass the HTML issue ID via the <code>filter[common_html_issue_id]</code> option.</p> <p><code>GET /api/v1/reports/$REPORT_ID/web_pages?filter[common_html_issue_id]=$HTML_ISSUE_ID</code></p>"},{"location":"api/web_pages/#filtering-by-a11y-issue","title":"Filtering by A11Y issue","text":"<p>To include only the web pages containing a given accessibility issue, pass the A11Y issue ID via the <code>filter[common_a11y_issue_id]</code> option.</p> <p><code>GET /api/v1/reports/$REPORT_ID/web_pages?filter[common_a11y_issue_id]=$A11Y_ISSUE_ID</code></p>"},{"location":"api/web_pages/#retrieve-a-web-page","title":"Retrieve a Web Page","text":"<p>To show an individual Web Page, send a <code>GET</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</code>.</p> <p><code>GET /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</code></p>"},{"location":"api/web_pages/#recheck-a-web-page","title":"Recheck a Web Page","text":"<p>To re-check a web page, send a <code>PATCH</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</code> with a payload to set the <code>status</code> to <code>pending</code>. Any other payload will be rejected.</p> <p>Example: PATCH /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</p> <pre><code>{\n    \"data\": {\n        \"attributes\": {\n            \"status\": \"pending\"\n        }\n    }\n}\n</code></pre>"},{"location":"api/web_pages/#delete-a-web-page","title":"Delete a Web Page","text":"<p>Deleting web pages from a report is a <sup>Pro</sup> feature. It removes the web page, and updates the excluded URLs list for that report. If the report has no more web pages left, it will itself be deleted as well.</p> <p>To delete an individual Web Page from a report, send a <code>DELETE</code> request to <code>/api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</code>.</p> <p><code>DELETE /api/v1/reports/$REPORT_ID/web_pages/$WEBPAGE_ID</code></p>"}]}